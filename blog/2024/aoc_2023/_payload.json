[{"data":1,"prerenderedAt":3704},["ShallowReactive",2],{"content-query-62nhOxQr6D":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"readtime":11,"tags":12,"repo":20,"body":21,"_type":3698,"_id":3699,"_source":3700,"_file":3701,"_stem":3702,"_extension":3703},"/blog/2024/aoc_2023","2024",false,"","Advent of Code 2023 üéÑ","Experiencing the Advent of Code challenges for the first time","2024-01-01","10",{"language":13,"field":15,"type":17},[14],"python",[16],"problem-solving",[18,19],"challenge","fun","https://github.com/alxdrcirilo/advent-of-code",{"type":22,"children":23,"toc":3676},"root",[24,33,83,89,116,133,139,146,204,209,702,709,739,762,791,795,817,988,1011,1049,1077,1132,1158,1171,1219,1253,1285,1290,1868,1874,1942,1978,1983,2064,2069,2083,2102,2123,2152,2165,2170,2175,2200,2213,2252,2257,2318,2323,2420,2433,2545,2550,2576,2623,2628,2672,2677,3039,3044,3069,3182,3187,3314,3319,3324,3670],{"type":25,"tag":26,"props":27,"children":29},"element","h2",{"id":28},"history",[30],{"type":31,"value":32},"text","History",{"type":25,"tag":34,"props":35,"children":36},"p",{},[37,50,52,59,61,68,70,75,77,81],{"type":25,"tag":38,"props":39,"children":43},"a",{"href":40,"rel":41},"https://adventofcode.com",[42],"nofollow",[44],{"type":25,"tag":45,"props":46,"children":47},"em",{},[48],{"type":31,"value":49},"Advent of Code",{"type":31,"value":51}," is an annual programming challenge event created by ",{"type":25,"tag":38,"props":53,"children":56},{"href":54,"rel":55},"http://was.tl",[42],[57],{"type":31,"value":58},"Eric Walst",{"type":31,"value":60}," and based on the ",{"type":25,"tag":38,"props":62,"children":65},{"href":63,"rel":64},"https://en.wikipedia.org/wiki/Advent_calendar",[42],[66],{"type":31,"value":67},"advent calendar",{"type":31,"value":69},". It consists of a series of programming challenges of varying complexity. These tasks may be completed in any programming language. Participants can also compete on the ",{"type":25,"tag":45,"props":71,"children":72},{},[73],{"type":31,"value":74},"global leaderboard",{"type":31,"value":76}," which is solely based on speed (i.e. how fast you reach the solution). The first iteration of the ",{"type":25,"tag":45,"props":78,"children":79},{},[80],{"type":31,"value":49},{"type":31,"value":82}," started on December 1st 2015. Over the past few years, it has been gaining popularity.",{"type":25,"tag":26,"props":84,"children":86},{"id":85},"_2023-edition",[87],{"type":31,"value":88},"2023 Edition",{"type":25,"tag":34,"props":90,"children":91},{},[92,94,98,100,106,108,114],{"type":31,"value":93},"This year, I decided to give ",{"type":25,"tag":45,"props":95,"children":96},{},[97],{"type":31,"value":49},{"type":31,"value":99}," a try. Unfortunately, I got sick and lost track of it for a few days. I wasn't participating competitively anyway, so nothing stops me from finishing the whole set of problems at some point in the near future. I thoroughly enjoyed solving the challenges and look forward to next year's edition. In this first post, you will find two of my favourite problems from this year as well the thought process and implementation: ",{"type":25,"tag":38,"props":101,"children":103},{"href":102},"#day-4",[104],{"type":31,"value":105},"Day 4",{"type":31,"value":107}," and ",{"type":25,"tag":38,"props":109,"children":111},{"href":110},"#day-9",[112],{"type":31,"value":113},"Day 9",{"type":31,"value":115},".",{"type":25,"tag":117,"props":118,"children":119},"blockquote",{},[120],{"type":25,"tag":34,"props":121,"children":122},{},[123,125,131],{"type":31,"value":124},"üîç ",{"type":25,"tag":126,"props":127,"children":128},"strong",{},[129],{"type":31,"value":130},"Note",{"type":31,"value":132},": complexity seems to be significantly higher in part 2.",{"type":25,"tag":134,"props":135,"children":137},"h3",{"id":136},"day-4",[138],{"type":31,"value":105},{"type":25,"tag":140,"props":141,"children":143},"h4",{"id":142},"part-1",[144],{"type":31,"value":145},"Part 1",{"type":25,"tag":34,"props":147,"children":148},{},[149,151,157,159,163,165,172,174,181,183,189,191,196,198,203],{"type":31,"value":150},"In ",{"type":25,"tag":38,"props":152,"children":155},{"href":153,"rel":154},"https://adventofcode.com/2023/day/4",[42],[156],{"type":31,"value":105},{"type":31,"value":158}," ",{"type":25,"tag":45,"props":160,"children":161},{},[162],{"type":31,"value":145},{"type":31,"value":164}," we are faced with a regular ",{"type":25,"tag":38,"props":166,"children":169},{"href":167,"rel":168},"https://en.wikipedia.org/wiki/Intersection_(set_theory)",[42],[170],{"type":31,"value":171},"set intersection",{"type":31,"value":173}," problem. In essence, the input data is comprised of an identifier - ",{"type":25,"tag":175,"props":176,"children":178},"code",{"className":177},[],[179],{"type":31,"value":180},"Card #",{"type":31,"value":182},", owned numbers (i.e. first set of numbers, before the ",{"type":25,"tag":175,"props":184,"children":186},{"className":185},[],[187],{"type":31,"value":188},"|",{"type":31,"value":190}," delimiter), winning numbers (i.e. second set of numbers, after the ",{"type":25,"tag":175,"props":192,"children":194},{"className":193},[],[195],{"type":31,"value":188},{"type":31,"value":197}," delimiter). Starting with 1 point for the first match (i.e. owned number is present in winning numbers), we then double the amount of points for every subsequent match. The solution is the ",{"type":25,"tag":126,"props":199,"children":200},{},[201],{"type":31,"value":202},"sum of all the points",{"type":31,"value":115},{"type":25,"tag":34,"props":205,"children":206},{},[207],{"type":31,"value":208},"Example of the input:",{"type":25,"tag":210,"props":211,"children":215},"pre",{"className":212,"code":213,"language":214,"meta":7,"style":7},"language-shell shiki shiki-themes dark-plus","Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53\nCard 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19\nCard 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1\nCard 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83\nCard 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36\nCard 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11\n","shell",[216],{"type":25,"tag":175,"props":217,"children":218},{"__ignoreMap":7},[219,306,386,465,545,623],{"type":25,"tag":220,"props":221,"children":224},"span",{"class":222,"line":223},"line",1,[225,231,237,243,248,253,258,263,269,274,278,283,288,292,297,301],{"type":25,"tag":220,"props":226,"children":228},{"style":227},"--shiki-default:#DCDCAA",[229],{"type":31,"value":230},"Card",{"type":25,"tag":220,"props":232,"children":234},{"style":233},"--shiki-default:#CE9178",[235],{"type":31,"value":236}," 1:",{"type":25,"tag":220,"props":238,"children":240},{"style":239},"--shiki-default:#B5CEA8",[241],{"type":31,"value":242}," 41",{"type":25,"tag":220,"props":244,"children":245},{"style":239},[246],{"type":31,"value":247}," 48",{"type":25,"tag":220,"props":249,"children":250},{"style":239},[251],{"type":31,"value":252}," 83",{"type":25,"tag":220,"props":254,"children":255},{"style":239},[256],{"type":31,"value":257}," 86",{"type":25,"tag":220,"props":259,"children":260},{"style":239},[261],{"type":31,"value":262}," 17",{"type":25,"tag":220,"props":264,"children":266},{"style":265},"--shiki-default:#D4D4D4",[267],{"type":31,"value":268}," | ",{"type":25,"tag":220,"props":270,"children":271},{"style":227},[272],{"type":31,"value":273},"83",{"type":25,"tag":220,"props":275,"children":276},{"style":239},[277],{"type":31,"value":257},{"type":25,"tag":220,"props":279,"children":280},{"style":239},[281],{"type":31,"value":282},"  6",{"type":25,"tag":220,"props":284,"children":285},{"style":239},[286],{"type":31,"value":287}," 31",{"type":25,"tag":220,"props":289,"children":290},{"style":239},[291],{"type":31,"value":262},{"type":25,"tag":220,"props":293,"children":294},{"style":239},[295],{"type":31,"value":296},"  9",{"type":25,"tag":220,"props":298,"children":299},{"style":239},[300],{"type":31,"value":247},{"type":25,"tag":220,"props":302,"children":303},{"style":239},[304],{"type":31,"value":305}," 53\n",{"type":25,"tag":220,"props":307,"children":309},{"class":222,"line":308},2,[310,314,319,324,329,334,339,344,348,353,358,363,368,372,376,381],{"type":25,"tag":220,"props":311,"children":312},{"style":227},[313],{"type":31,"value":230},{"type":25,"tag":220,"props":315,"children":316},{"style":233},[317],{"type":31,"value":318}," 2:",{"type":25,"tag":220,"props":320,"children":321},{"style":239},[322],{"type":31,"value":323}," 13",{"type":25,"tag":220,"props":325,"children":326},{"style":239},[327],{"type":31,"value":328}," 32",{"type":25,"tag":220,"props":330,"children":331},{"style":239},[332],{"type":31,"value":333}," 20",{"type":25,"tag":220,"props":335,"children":336},{"style":239},[337],{"type":31,"value":338}," 16",{"type":25,"tag":220,"props":340,"children":341},{"style":239},[342],{"type":31,"value":343}," 61",{"type":25,"tag":220,"props":345,"children":346},{"style":265},[347],{"type":31,"value":268},{"type":25,"tag":220,"props":349,"children":350},{"style":227},[351],{"type":31,"value":352},"61",{"type":25,"tag":220,"props":354,"children":355},{"style":239},[356],{"type":31,"value":357}," 30",{"type":25,"tag":220,"props":359,"children":360},{"style":239},[361],{"type":31,"value":362}," 68",{"type":25,"tag":220,"props":364,"children":365},{"style":239},[366],{"type":31,"value":367}," 82",{"type":25,"tag":220,"props":369,"children":370},{"style":239},[371],{"type":31,"value":262},{"type":25,"tag":220,"props":373,"children":374},{"style":239},[375],{"type":31,"value":328},{"type":25,"tag":220,"props":377,"children":378},{"style":239},[379],{"type":31,"value":380}," 24",{"type":25,"tag":220,"props":382,"children":383},{"style":239},[384],{"type":31,"value":385}," 19\n",{"type":25,"tag":220,"props":387,"children":389},{"class":222,"line":388},3,[390,394,399,404,409,414,419,424,428,433,437,442,447,451,455,460],{"type":25,"tag":220,"props":391,"children":392},{"style":227},[393],{"type":31,"value":230},{"type":25,"tag":220,"props":395,"children":396},{"style":233},[397],{"type":31,"value":398}," 3:",{"type":25,"tag":220,"props":400,"children":401},{"style":239},[402],{"type":31,"value":403},"  1",{"type":25,"tag":220,"props":405,"children":406},{"style":239},[407],{"type":31,"value":408}," 21",{"type":25,"tag":220,"props":410,"children":411},{"style":239},[412],{"type":31,"value":413}," 53",{"type":25,"tag":220,"props":415,"children":416},{"style":239},[417],{"type":31,"value":418}," 59",{"type":25,"tag":220,"props":420,"children":421},{"style":239},[422],{"type":31,"value":423}," 44",{"type":25,"tag":220,"props":425,"children":426},{"style":265},[427],{"type":31,"value":268},{"type":25,"tag":220,"props":429,"children":430},{"style":227},[431],{"type":31,"value":432},"69",{"type":25,"tag":220,"props":434,"children":435},{"style":239},[436],{"type":31,"value":367},{"type":25,"tag":220,"props":438,"children":439},{"style":239},[440],{"type":31,"value":441}," 63",{"type":25,"tag":220,"props":443,"children":444},{"style":239},[445],{"type":31,"value":446}," 72",{"type":25,"tag":220,"props":448,"children":449},{"style":239},[450],{"type":31,"value":338},{"type":25,"tag":220,"props":452,"children":453},{"style":239},[454],{"type":31,"value":408},{"type":25,"tag":220,"props":456,"children":457},{"style":239},[458],{"type":31,"value":459}," 14",{"type":25,"tag":220,"props":461,"children":462},{"style":239},[463],{"type":31,"value":464},"  1\n",{"type":25,"tag":220,"props":466,"children":468},{"class":222,"line":467},4,[469,473,478,482,487,492,497,502,506,511,515,520,525,530,535,540],{"type":25,"tag":220,"props":470,"children":471},{"style":227},[472],{"type":31,"value":230},{"type":25,"tag":220,"props":474,"children":475},{"style":233},[476],{"type":31,"value":477}," 4:",{"type":25,"tag":220,"props":479,"children":480},{"style":239},[481],{"type":31,"value":242},{"type":25,"tag":220,"props":483,"children":484},{"style":239},[485],{"type":31,"value":486}," 92",{"type":25,"tag":220,"props":488,"children":489},{"style":239},[490],{"type":31,"value":491}," 73",{"type":25,"tag":220,"props":493,"children":494},{"style":239},[495],{"type":31,"value":496}," 84",{"type":25,"tag":220,"props":498,"children":499},{"style":239},[500],{"type":31,"value":501}," 69",{"type":25,"tag":220,"props":503,"children":504},{"style":265},[505],{"type":31,"value":268},{"type":25,"tag":220,"props":507,"children":508},{"style":227},[509],{"type":31,"value":510},"59",{"type":25,"tag":220,"props":512,"children":513},{"style":239},[514],{"type":31,"value":496},{"type":25,"tag":220,"props":516,"children":517},{"style":239},[518],{"type":31,"value":519}," 76",{"type":25,"tag":220,"props":521,"children":522},{"style":239},[523],{"type":31,"value":524}," 51",{"type":25,"tag":220,"props":526,"children":527},{"style":239},[528],{"type":31,"value":529}," 58",{"type":25,"tag":220,"props":531,"children":532},{"style":239},[533],{"type":31,"value":534},"  5",{"type":25,"tag":220,"props":536,"children":537},{"style":239},[538],{"type":31,"value":539}," 54",{"type":25,"tag":220,"props":541,"children":542},{"style":239},[543],{"type":31,"value":544}," 83\n",{"type":25,"tag":220,"props":546,"children":548},{"class":222,"line":547},5,[549,553,558,563,567,572,577,581,585,590,594,599,604,609,614,618],{"type":25,"tag":220,"props":550,"children":551},{"style":227},[552],{"type":31,"value":230},{"type":25,"tag":220,"props":554,"children":555},{"style":233},[556],{"type":31,"value":557}," 5:",{"type":25,"tag":220,"props":559,"children":560},{"style":239},[561],{"type":31,"value":562}," 87",{"type":25,"tag":220,"props":564,"children":565},{"style":239},[566],{"type":31,"value":252},{"type":25,"tag":220,"props":568,"children":569},{"style":239},[570],{"type":31,"value":571}," 26",{"type":25,"tag":220,"props":573,"children":574},{"style":239},[575],{"type":31,"value":576}," 28",{"type":25,"tag":220,"props":578,"children":579},{"style":239},[580],{"type":31,"value":328},{"type":25,"tag":220,"props":582,"children":583},{"style":265},[584],{"type":31,"value":268},{"type":25,"tag":220,"props":586,"children":587},{"style":227},[588],{"type":31,"value":589},"88",{"type":25,"tag":220,"props":591,"children":592},{"style":239},[593],{"type":31,"value":357},{"type":25,"tag":220,"props":595,"children":596},{"style":239},[597],{"type":31,"value":598}," 70",{"type":25,"tag":220,"props":600,"children":601},{"style":239},[602],{"type":31,"value":603}," 12",{"type":25,"tag":220,"props":605,"children":606},{"style":239},[607],{"type":31,"value":608}," 93",{"type":25,"tag":220,"props":610,"children":611},{"style":239},[612],{"type":31,"value":613}," 22",{"type":25,"tag":220,"props":615,"children":616},{"style":239},[617],{"type":31,"value":367},{"type":25,"tag":220,"props":619,"children":620},{"style":239},[621],{"type":31,"value":622}," 36\n",{"type":25,"tag":220,"props":624,"children":626},{"class":222,"line":625},6,[627,631,636,640,645,649,654,658,662,667,672,677,682,687,692,697],{"type":25,"tag":220,"props":628,"children":629},{"style":227},[630],{"type":31,"value":230},{"type":25,"tag":220,"props":632,"children":633},{"style":233},[634],{"type":31,"value":635}," 6:",{"type":25,"tag":220,"props":637,"children":638},{"style":239},[639],{"type":31,"value":287},{"type":25,"tag":220,"props":641,"children":642},{"style":239},[643],{"type":31,"value":644}," 18",{"type":25,"tag":220,"props":646,"children":647},{"style":239},[648],{"type":31,"value":323},{"type":25,"tag":220,"props":650,"children":651},{"style":239},[652],{"type":31,"value":653}," 56",{"type":25,"tag":220,"props":655,"children":656},{"style":239},[657],{"type":31,"value":446},{"type":25,"tag":220,"props":659,"children":660},{"style":265},[661],{"type":31,"value":268},{"type":25,"tag":220,"props":663,"children":664},{"style":227},[665],{"type":31,"value":666},"74",{"type":25,"tag":220,"props":668,"children":669},{"style":239},[670],{"type":31,"value":671}," 77",{"type":25,"tag":220,"props":673,"children":674},{"style":239},[675],{"type":31,"value":676}," 10",{"type":25,"tag":220,"props":678,"children":679},{"style":239},[680],{"type":31,"value":681}," 23",{"type":25,"tag":220,"props":683,"children":684},{"style":239},[685],{"type":31,"value":686}," 35",{"type":25,"tag":220,"props":688,"children":689},{"style":239},[690],{"type":31,"value":691}," 67",{"type":25,"tag":220,"props":693,"children":694},{"style":239},[695],{"type":31,"value":696}," 36",{"type":25,"tag":220,"props":698,"children":699},{"style":239},[700],{"type":31,"value":701}," 11\n",{"type":25,"tag":703,"props":704,"children":706},"h5",{"id":705},"solution",[707],{"type":31,"value":708},"Solution",{"type":25,"tag":34,"props":710,"children":711},{},[712,714,721,723,730,732,738],{"type":31,"value":713},"To parse the relevant data, I decided to make use of ",{"type":25,"tag":38,"props":715,"children":718},{"href":716,"rel":717},"https://en.wikipedia.org/wiki/Regular_expression",[42],[719],{"type":31,"value":720},"regex",{"type":31,"value":722}," matching. The main idea is to parse the owned and winning numbers into sets of digits (per scratchcard). In Python, we can then find the intersection between the 2 sets with a trivial ",{"type":25,"tag":38,"props":724,"children":727},{"href":725,"rel":726},"https://docs.python.org/3/tutorial/datastructures.html#sets",[42],[728],{"type":31,"value":729},"set intersection operator",{"type":31,"value":731}," - ",{"type":25,"tag":175,"props":733,"children":735},{"className":734},[],[736],{"type":31,"value":737},"&",{"type":31,"value":115},{"type":25,"tag":740,"props":741,"children":742},"ol",{},[743],{"type":25,"tag":744,"props":745,"children":746},"li",{},[747,752,754,760],{"type":25,"tag":126,"props":748,"children":749},{},[750],{"type":31,"value":751},"Regex matching",{"type":31,"value":753},": We first match the regex pattern to the scratchcard. I decided to capture 3 groups: the card identifier (e.g. ",{"type":25,"tag":175,"props":755,"children":757},{"className":756},[],[758],{"type":31,"value":759},"Card 1",{"type":31,"value":761},"), the owned numbers, and the winning numbers as seen below:",{"type":25,"tag":763,"props":764,"children":766},"div",{"style":765},"display: block; text-align: center;",[767,769,776,778,784,786],{"type":31,"value":768},"\n  Card: \\s+",{"type":25,"tag":175,"props":770,"children":773},{"className":771},[772],"snippet",[774],{"type":31,"value":775},"(\\d+)",{"type":31,"value":777},":(?:\\s+)",{"type":25,"tag":175,"props":779,"children":781},{"className":780},[772],[782],{"type":31,"value":783},"((?:\\d+\\s*)+)",{"type":31,"value":785},"\\s\\|(?:\\s+)",{"type":25,"tag":175,"props":787,"children":789},{"className":788},[772],[790],{"type":31,"value":783},{"type":25,"tag":792,"props":793,"children":794},"br",{},[],{"type":25,"tag":34,"props":796,"children":797},{},[798,800,807,809,815],{"type":31,"value":799},"In Python, we can define ",{"type":25,"tag":38,"props":801,"children":804},{"href":802,"rel":803},"https://docs.python.org/3/library/re.html",[42],[805],{"type":31,"value":806},"raw string notation for regular expressions",{"type":31,"value":808}," by prefixing a string variable with ",{"type":25,"tag":175,"props":810,"children":812},{"className":811},[],[813],{"type":31,"value":814},"r",{"type":31,"value":816},", as in:",{"type":25,"tag":210,"props":818,"children":821},{"className":819,"code":820,"language":14,"meta":7,"style":7},"language-python shiki shiki-themes dark-plus","pattern = r\"Card\\s+(\\d+):(?:\\s+)((?:\\d+\\s*)+)\\s\\|(?:\\s+)((?:\\d+\\s*)+)\"\nresult = re.match(pattern, scratchcard)\n",[822],{"type":25,"tag":175,"props":823,"children":824},{"__ignoreMap":7},[825,980],{"type":25,"tag":220,"props":826,"children":827},{"class":222,"line":223},[828,833,838,844,850,855,860,864,869,874,879,884,888,893,897,901,905,910,914,918,922,926,931,935,939,943,947,951,955,959,963,967,971,975],{"type":25,"tag":220,"props":829,"children":830},{"style":265},[831],{"type":31,"value":832},"pattern = ",{"type":25,"tag":220,"props":834,"children":836},{"style":835},"--shiki-default:#569CD6",[837],{"type":31,"value":814},{"type":25,"tag":220,"props":839,"children":841},{"style":840},"--shiki-default:#D16969",[842],{"type":31,"value":843},"\"Card\\s",{"type":25,"tag":220,"props":845,"children":847},{"style":846},"--shiki-default:#D7BA7D",[848],{"type":31,"value":849},"+",{"type":25,"tag":220,"props":851,"children":852},{"style":233},[853],{"type":31,"value":854},"(",{"type":25,"tag":220,"props":856,"children":857},{"style":840},[858],{"type":31,"value":859},"\\d",{"type":25,"tag":220,"props":861,"children":862},{"style":846},[863],{"type":31,"value":849},{"type":25,"tag":220,"props":865,"children":866},{"style":233},[867],{"type":31,"value":868},")",{"type":25,"tag":220,"props":870,"children":871},{"style":840},[872],{"type":31,"value":873},":",{"type":25,"tag":220,"props":875,"children":876},{"style":233},[877],{"type":31,"value":878},"(?:",{"type":25,"tag":220,"props":880,"children":881},{"style":840},[882],{"type":31,"value":883},"\\s",{"type":25,"tag":220,"props":885,"children":886},{"style":846},[887],{"type":31,"value":849},{"type":25,"tag":220,"props":889,"children":890},{"style":233},[891],{"type":31,"value":892},")((?:",{"type":25,"tag":220,"props":894,"children":895},{"style":840},[896],{"type":31,"value":859},{"type":25,"tag":220,"props":898,"children":899},{"style":846},[900],{"type":31,"value":849},{"type":25,"tag":220,"props":902,"children":903},{"style":840},[904],{"type":31,"value":883},{"type":25,"tag":220,"props":906,"children":907},{"style":846},[908],{"type":31,"value":909},"*",{"type":25,"tag":220,"props":911,"children":912},{"style":233},[913],{"type":31,"value":868},{"type":25,"tag":220,"props":915,"children":916},{"style":846},[917],{"type":31,"value":849},{"type":25,"tag":220,"props":919,"children":920},{"style":233},[921],{"type":31,"value":868},{"type":25,"tag":220,"props":923,"children":924},{"style":840},[925],{"type":31,"value":883},{"type":25,"tag":220,"props":927,"children":928},{"style":846},[929],{"type":31,"value":930},"\\|",{"type":25,"tag":220,"props":932,"children":933},{"style":233},[934],{"type":31,"value":878},{"type":25,"tag":220,"props":936,"children":937},{"style":840},[938],{"type":31,"value":883},{"type":25,"tag":220,"props":940,"children":941},{"style":846},[942],{"type":31,"value":849},{"type":25,"tag":220,"props":944,"children":945},{"style":233},[946],{"type":31,"value":892},{"type":25,"tag":220,"props":948,"children":949},{"style":840},[950],{"type":31,"value":859},{"type":25,"tag":220,"props":952,"children":953},{"style":846},[954],{"type":31,"value":849},{"type":25,"tag":220,"props":956,"children":957},{"style":840},[958],{"type":31,"value":883},{"type":25,"tag":220,"props":960,"children":961},{"style":846},[962],{"type":31,"value":909},{"type":25,"tag":220,"props":964,"children":965},{"style":233},[966],{"type":31,"value":868},{"type":25,"tag":220,"props":968,"children":969},{"style":846},[970],{"type":31,"value":849},{"type":25,"tag":220,"props":972,"children":973},{"style":233},[974],{"type":31,"value":868},{"type":25,"tag":220,"props":976,"children":977},{"style":840},[978],{"type":31,"value":979},"\"\n",{"type":25,"tag":220,"props":981,"children":982},{"class":222,"line":308},[983],{"type":25,"tag":220,"props":984,"children":985},{"style":265},[986],{"type":31,"value":987},"result = re.match(pattern, scratchcard)\n",{"type":25,"tag":117,"props":989,"children":990},{},[991],{"type":25,"tag":34,"props":992,"children":993},{},[994,996,1001,1003,1009],{"type":31,"value":995},"üí° ",{"type":25,"tag":126,"props":997,"children":998},{},[999],{"type":31,"value":1000},"Tip",{"type":31,"value":1002},": we only need to capture relevant groups by encapsulating the groups we want to capture in parentheses. Non-capturing groups are prefixed with \"",{"type":25,"tag":175,"props":1004,"children":1006},{"className":1005},[],[1007],{"type":31,"value":1008},"?:",{"type":31,"value":1010},"\".",{"type":25,"tag":740,"props":1012,"children":1013},{"start":308},[1014],{"type":25,"tag":744,"props":1015,"children":1016},{},[1017,1022,1024,1030,1032,1038,1040,1047],{"type":25,"tag":126,"props":1018,"children":1019},{},[1020],{"type":31,"value":1021},"Extract digits",{"type":31,"value":1023},": The next step involves converting the string ",{"type":25,"tag":175,"props":1025,"children":1027},{"className":1026},[],[1028],{"type":31,"value":1029},"\"41 48 83 86 17\"",{"type":31,"value":1031}," into a list of integers ",{"type":25,"tag":175,"props":1033,"children":1035},{"className":1034},[],[1036],{"type":31,"value":1037},"[41, 48, 83, 86, 17]",{"type":31,"value":1039},". This can be easily accomplished using a combination of list comprehension and Python's ",{"type":25,"tag":38,"props":1041,"children":1044},{"href":1042,"rel":1043},"https://docs.python.org/3/library/functions.html#map",[42],[1045],{"type":31,"value":1046},"map",{"type":31,"value":1048}," built-in function.",{"type":25,"tag":34,"props":1050,"children":1051},{},[1052,1054,1060,1062,1068,1070,1075],{"type":31,"value":1053},"Firstly, ",{"type":25,"tag":175,"props":1055,"children":1057},{"className":1056},[],[1058],{"type":31,"value":1059},"[*map(int, x.split())]",{"type":31,"value":1061}," creates a list where we split a given group ",{"type":25,"tag":175,"props":1063,"children":1065},{"className":1064},[],[1066],{"type":31,"value":1067},"x",{"type":31,"value":1069}," into a list of strings that are casted into a list of integers. The resulting ",{"type":25,"tag":175,"props":1071,"children":1073},{"className":1072},[],[1074],{"type":31,"value":1046},{"type":31,"value":1076}," object is then destructured and wrapped in square brackets to create a list. This is then repeated for each captured group in the regex match using a list comprehension.",{"type":25,"tag":210,"props":1078,"children":1080},{"className":819,"code":1079,"language":14,"meta":7,"style":7},"_, own, win = [[*map(int, x.split())] for x in result.groups()]\n",[1081],{"type":25,"tag":175,"props":1082,"children":1083},{"__ignoreMap":7},[1084],{"type":25,"tag":220,"props":1085,"children":1086},{"class":222,"line":223},[1087,1092,1096,1100,1106,1111,1117,1122,1127],{"type":25,"tag":220,"props":1088,"children":1089},{"style":265},[1090],{"type":31,"value":1091},"_, own, win = [[*",{"type":25,"tag":220,"props":1093,"children":1094},{"style":227},[1095],{"type":31,"value":1046},{"type":25,"tag":220,"props":1097,"children":1098},{"style":265},[1099],{"type":31,"value":854},{"type":25,"tag":220,"props":1101,"children":1103},{"style":1102},"--shiki-default:#4EC9B0",[1104],{"type":31,"value":1105},"int",{"type":25,"tag":220,"props":1107,"children":1108},{"style":265},[1109],{"type":31,"value":1110},", x.split())] ",{"type":25,"tag":220,"props":1112,"children":1114},{"style":1113},"--shiki-default:#C586C0",[1115],{"type":31,"value":1116},"for",{"type":25,"tag":220,"props":1118,"children":1119},{"style":265},[1120],{"type":31,"value":1121}," x ",{"type":25,"tag":220,"props":1123,"children":1124},{"style":1113},[1125],{"type":31,"value":1126},"in",{"type":25,"tag":220,"props":1128,"children":1129},{"style":265},[1130],{"type":31,"value":1131}," result.groups()]\n",{"type":25,"tag":117,"props":1133,"children":1134},{},[1135],{"type":25,"tag":34,"props":1136,"children":1137},{},[1138,1139,1143,1145,1156],{"type":31,"value":995},{"type":25,"tag":126,"props":1140,"children":1141},{},[1142],{"type":31,"value":1000},{"type":31,"value":1144},": the ",{"type":25,"tag":38,"props":1146,"children":1149},{"href":1147,"rel":1148},"https://docs.python.org/3/library/re.html#re.Match.groups",[42],[1150],{"type":25,"tag":175,"props":1151,"children":1153},{"className":1152},[],[1154],{"type":31,"value":1155},"groups()",{"type":31,"value":1157}," method returns a tuple containing all the subgroups of the match.",{"type":25,"tag":740,"props":1159,"children":1160},{"start":388},[1161],{"type":25,"tag":744,"props":1162,"children":1163},{},[1164,1169],{"type":25,"tag":126,"props":1165,"children":1166},{},[1167],{"type":31,"value":1168},"Find intersection",{"type":31,"value":1170},": Now we only need to find the number of digits present in both sets (i.e. owned and winning) and subtract 1 to it (explained below).",{"type":25,"tag":210,"props":1172,"children":1174},{"className":819,"code":1173,"language":14,"meta":7,"style":7},"intersection = len(set(own) & set(win)) - 1\n",[1175],{"type":25,"tag":175,"props":1176,"children":1177},{"__ignoreMap":7},[1178],{"type":25,"tag":220,"props":1179,"children":1180},{"class":222,"line":223},[1181,1186,1191,1195,1200,1205,1209,1214],{"type":25,"tag":220,"props":1182,"children":1183},{"style":265},[1184],{"type":31,"value":1185},"intersection = ",{"type":25,"tag":220,"props":1187,"children":1188},{"style":227},[1189],{"type":31,"value":1190},"len",{"type":25,"tag":220,"props":1192,"children":1193},{"style":265},[1194],{"type":31,"value":854},{"type":25,"tag":220,"props":1196,"children":1197},{"style":1102},[1198],{"type":31,"value":1199},"set",{"type":25,"tag":220,"props":1201,"children":1202},{"style":265},[1203],{"type":31,"value":1204},"(own) & ",{"type":25,"tag":220,"props":1206,"children":1207},{"style":1102},[1208],{"type":31,"value":1199},{"type":25,"tag":220,"props":1210,"children":1211},{"style":265},[1212],{"type":31,"value":1213},"(win)) - ",{"type":25,"tag":220,"props":1215,"children":1216},{"style":239},[1217],{"type":31,"value":1218},"1\n",{"type":25,"tag":740,"props":1220,"children":1221},{"start":467},[1222],{"type":25,"tag":744,"props":1223,"children":1224},{},[1225,1230,1232,1243,1245,1251],{"type":25,"tag":126,"props":1226,"children":1227},{},[1228],{"type":31,"value":1229},"Compute score",{"type":31,"value":1231},": To compute the number of points amassed for a given scratchcard, remember that we start with 1 point for the first match, and then double that score for every subsequent match. This can be calculated using ",{"type":25,"tag":126,"props":1233,"children":1234},{},[1235,1237],{"type":31,"value":1236},"2",{"type":25,"tag":1238,"props":1239,"children":1240},"sup",{},[1241],{"type":31,"value":1242},"(n-1)",{"type":31,"value":1244},", where ",{"type":25,"tag":175,"props":1246,"children":1248},{"className":1247},[],[1249],{"type":31,"value":1250},"n",{"type":31,"value":1252}," is the number of intersections.",{"type":25,"tag":210,"props":1254,"children":1256},{"className":819,"code":1255,"language":14,"meta":7,"style":7},"score = int(2**intersection)\n",[1257],{"type":25,"tag":175,"props":1258,"children":1259},{"__ignoreMap":7},[1260],{"type":25,"tag":220,"props":1261,"children":1262},{"class":222,"line":223},[1263,1268,1272,1276,1280],{"type":25,"tag":220,"props":1264,"children":1265},{"style":265},[1266],{"type":31,"value":1267},"score = ",{"type":25,"tag":220,"props":1269,"children":1270},{"style":1102},[1271],{"type":31,"value":1105},{"type":25,"tag":220,"props":1273,"children":1274},{"style":265},[1275],{"type":31,"value":854},{"type":25,"tag":220,"props":1277,"children":1278},{"style":239},[1279],{"type":31,"value":1236},{"type":25,"tag":220,"props":1281,"children":1282},{"style":265},[1283],{"type":31,"value":1284},"**intersection)\n",{"type":25,"tag":34,"props":1286,"children":1287},{},[1288],{"type":31,"value":1289},"Considering all of the above, we can effortlessly piece together the code and end up with a working solution:",{"type":25,"tag":210,"props":1291,"children":1293},{"className":819,"code":1292,"language":14,"meta":7,"style":7},"import re\n\n\ndef get_points(scratchcard: str) -> int:\n    \"\"\"Return the total number of points of a scratchcard.\n    \n    :param str scratchcard: scratchcard\n    :return int: total number of points\n    \"\"\"\n    result = re.match(pattern, scratchcard)\n    _, own, win = [[*map(int, x.split())] for x in result.groups()]\n    intersection = len(set(own) & set(win)) - 1\n    return int(2**intersection)\n\n\nif __name__ == \"__main__\":\n    with open(\"2023/day_04/input.txt\", \"r\") as file:\n        data = file.read().splitlines()\n\n    pattern = r\"Card\\s+(\\d+):(?:\\s+)((?:\\d+\\s*)+)\\s\\|(?:\\s+)((?:\\d+\\s*)+)\"\n    points = sum(map(lambda x: get_points(x), data))\n    print(f\"Total number of points: {points}\")\n",[1294],{"type":25,"tag":175,"props":1295,"children":1296},{"__ignoreMap":7},[1297,1310,1319,1326,1373,1381,1389,1398,1407,1416,1425,1466,1503,1529,1537,1545,1573,1621,1630,1638,1779,1820],{"type":25,"tag":220,"props":1298,"children":1299},{"class":222,"line":223},[1300,1305],{"type":25,"tag":220,"props":1301,"children":1302},{"style":1113},[1303],{"type":31,"value":1304},"import",{"type":25,"tag":220,"props":1306,"children":1307},{"style":265},[1308],{"type":31,"value":1309}," re\n",{"type":25,"tag":220,"props":1311,"children":1312},{"class":222,"line":308},[1313],{"type":25,"tag":220,"props":1314,"children":1316},{"emptyLinePlaceholder":1315},true,[1317],{"type":31,"value":1318},"\n",{"type":25,"tag":220,"props":1320,"children":1321},{"class":222,"line":388},[1322],{"type":25,"tag":220,"props":1323,"children":1324},{"emptyLinePlaceholder":1315},[1325],{"type":31,"value":1318},{"type":25,"tag":220,"props":1327,"children":1328},{"class":222,"line":467},[1329,1334,1339,1343,1349,1354,1359,1364,1368],{"type":25,"tag":220,"props":1330,"children":1331},{"style":835},[1332],{"type":31,"value":1333},"def",{"type":25,"tag":220,"props":1335,"children":1336},{"style":227},[1337],{"type":31,"value":1338}," get_points",{"type":25,"tag":220,"props":1340,"children":1341},{"style":265},[1342],{"type":31,"value":854},{"type":25,"tag":220,"props":1344,"children":1346},{"style":1345},"--shiki-default:#9CDCFE",[1347],{"type":31,"value":1348},"scratchcard",{"type":25,"tag":220,"props":1350,"children":1351},{"style":265},[1352],{"type":31,"value":1353},": ",{"type":25,"tag":220,"props":1355,"children":1356},{"style":1102},[1357],{"type":31,"value":1358},"str",{"type":25,"tag":220,"props":1360,"children":1361},{"style":265},[1362],{"type":31,"value":1363},") -> ",{"type":25,"tag":220,"props":1365,"children":1366},{"style":1102},[1367],{"type":31,"value":1105},{"type":25,"tag":220,"props":1369,"children":1370},{"style":265},[1371],{"type":31,"value":1372},":\n",{"type":25,"tag":220,"props":1374,"children":1375},{"class":222,"line":547},[1376],{"type":25,"tag":220,"props":1377,"children":1378},{"style":233},[1379],{"type":31,"value":1380},"    \"\"\"Return the total number of points of a scratchcard.\n",{"type":25,"tag":220,"props":1382,"children":1383},{"class":222,"line":625},[1384],{"type":25,"tag":220,"props":1385,"children":1386},{"style":233},[1387],{"type":31,"value":1388},"    \n",{"type":25,"tag":220,"props":1390,"children":1392},{"class":222,"line":1391},7,[1393],{"type":25,"tag":220,"props":1394,"children":1395},{"style":233},[1396],{"type":31,"value":1397},"    :param str scratchcard: scratchcard\n",{"type":25,"tag":220,"props":1399,"children":1401},{"class":222,"line":1400},8,[1402],{"type":25,"tag":220,"props":1403,"children":1404},{"style":233},[1405],{"type":31,"value":1406},"    :return int: total number of points\n",{"type":25,"tag":220,"props":1408,"children":1410},{"class":222,"line":1409},9,[1411],{"type":25,"tag":220,"props":1412,"children":1413},{"style":233},[1414],{"type":31,"value":1415},"    \"\"\"\n",{"type":25,"tag":220,"props":1417,"children":1419},{"class":222,"line":1418},10,[1420],{"type":25,"tag":220,"props":1421,"children":1422},{"style":265},[1423],{"type":31,"value":1424},"    result = re.match(pattern, scratchcard)\n",{"type":25,"tag":220,"props":1426,"children":1428},{"class":222,"line":1427},11,[1429,1434,1438,1442,1446,1450,1454,1458,1462],{"type":25,"tag":220,"props":1430,"children":1431},{"style":265},[1432],{"type":31,"value":1433},"    _, own, win = [[*",{"type":25,"tag":220,"props":1435,"children":1436},{"style":227},[1437],{"type":31,"value":1046},{"type":25,"tag":220,"props":1439,"children":1440},{"style":265},[1441],{"type":31,"value":854},{"type":25,"tag":220,"props":1443,"children":1444},{"style":1102},[1445],{"type":31,"value":1105},{"type":25,"tag":220,"props":1447,"children":1448},{"style":265},[1449],{"type":31,"value":1110},{"type":25,"tag":220,"props":1451,"children":1452},{"style":1113},[1453],{"type":31,"value":1116},{"type":25,"tag":220,"props":1455,"children":1456},{"style":265},[1457],{"type":31,"value":1121},{"type":25,"tag":220,"props":1459,"children":1460},{"style":1113},[1461],{"type":31,"value":1126},{"type":25,"tag":220,"props":1463,"children":1464},{"style":265},[1465],{"type":31,"value":1131},{"type":25,"tag":220,"props":1467,"children":1469},{"class":222,"line":1468},12,[1470,1475,1479,1483,1487,1491,1495,1499],{"type":25,"tag":220,"props":1471,"children":1472},{"style":265},[1473],{"type":31,"value":1474},"    intersection = ",{"type":25,"tag":220,"props":1476,"children":1477},{"style":227},[1478],{"type":31,"value":1190},{"type":25,"tag":220,"props":1480,"children":1481},{"style":265},[1482],{"type":31,"value":854},{"type":25,"tag":220,"props":1484,"children":1485},{"style":1102},[1486],{"type":31,"value":1199},{"type":25,"tag":220,"props":1488,"children":1489},{"style":265},[1490],{"type":31,"value":1204},{"type":25,"tag":220,"props":1492,"children":1493},{"style":1102},[1494],{"type":31,"value":1199},{"type":25,"tag":220,"props":1496,"children":1497},{"style":265},[1498],{"type":31,"value":1213},{"type":25,"tag":220,"props":1500,"children":1501},{"style":239},[1502],{"type":31,"value":1218},{"type":25,"tag":220,"props":1504,"children":1506},{"class":222,"line":1505},13,[1507,1512,1517,1521,1525],{"type":25,"tag":220,"props":1508,"children":1509},{"style":1113},[1510],{"type":31,"value":1511},"    return",{"type":25,"tag":220,"props":1513,"children":1514},{"style":1102},[1515],{"type":31,"value":1516}," int",{"type":25,"tag":220,"props":1518,"children":1519},{"style":265},[1520],{"type":31,"value":854},{"type":25,"tag":220,"props":1522,"children":1523},{"style":239},[1524],{"type":31,"value":1236},{"type":25,"tag":220,"props":1526,"children":1527},{"style":265},[1528],{"type":31,"value":1284},{"type":25,"tag":220,"props":1530,"children":1532},{"class":222,"line":1531},14,[1533],{"type":25,"tag":220,"props":1534,"children":1535},{"emptyLinePlaceholder":1315},[1536],{"type":31,"value":1318},{"type":25,"tag":220,"props":1538,"children":1540},{"class":222,"line":1539},15,[1541],{"type":25,"tag":220,"props":1542,"children":1543},{"emptyLinePlaceholder":1315},[1544],{"type":31,"value":1318},{"type":25,"tag":220,"props":1546,"children":1548},{"class":222,"line":1547},16,[1549,1554,1559,1564,1569],{"type":25,"tag":220,"props":1550,"children":1551},{"style":1113},[1552],{"type":31,"value":1553},"if",{"type":25,"tag":220,"props":1555,"children":1556},{"style":1345},[1557],{"type":31,"value":1558}," __name__",{"type":25,"tag":220,"props":1560,"children":1561},{"style":265},[1562],{"type":31,"value":1563}," == ",{"type":25,"tag":220,"props":1565,"children":1566},{"style":233},[1567],{"type":31,"value":1568},"\"__main__\"",{"type":25,"tag":220,"props":1570,"children":1571},{"style":265},[1572],{"type":31,"value":1372},{"type":25,"tag":220,"props":1574,"children":1576},{"class":222,"line":1575},17,[1577,1582,1587,1591,1596,1601,1606,1611,1616],{"type":25,"tag":220,"props":1578,"children":1579},{"style":1113},[1580],{"type":31,"value":1581},"    with",{"type":25,"tag":220,"props":1583,"children":1584},{"style":227},[1585],{"type":31,"value":1586}," open",{"type":25,"tag":220,"props":1588,"children":1589},{"style":265},[1590],{"type":31,"value":854},{"type":25,"tag":220,"props":1592,"children":1593},{"style":233},[1594],{"type":31,"value":1595},"\"2023/day_04/input.txt\"",{"type":25,"tag":220,"props":1597,"children":1598},{"style":265},[1599],{"type":31,"value":1600},", ",{"type":25,"tag":220,"props":1602,"children":1603},{"style":233},[1604],{"type":31,"value":1605},"\"r\"",{"type":25,"tag":220,"props":1607,"children":1608},{"style":265},[1609],{"type":31,"value":1610},") ",{"type":25,"tag":220,"props":1612,"children":1613},{"style":1113},[1614],{"type":31,"value":1615},"as",{"type":25,"tag":220,"props":1617,"children":1618},{"style":265},[1619],{"type":31,"value":1620}," file:\n",{"type":25,"tag":220,"props":1622,"children":1624},{"class":222,"line":1623},18,[1625],{"type":25,"tag":220,"props":1626,"children":1627},{"style":265},[1628],{"type":31,"value":1629},"        data = file.read().splitlines()\n",{"type":25,"tag":220,"props":1631,"children":1633},{"class":222,"line":1632},19,[1634],{"type":25,"tag":220,"props":1635,"children":1636},{"emptyLinePlaceholder":1315},[1637],{"type":31,"value":1318},{"type":25,"tag":220,"props":1639,"children":1641},{"class":222,"line":1640},20,[1642,1647,1651,1655,1659,1663,1667,1671,1675,1679,1683,1687,1691,1695,1699,1703,1707,1711,1715,1719,1723,1727,1731,1735,1739,1743,1747,1751,1755,1759,1763,1767,1771,1775],{"type":25,"tag":220,"props":1643,"children":1644},{"style":265},[1645],{"type":31,"value":1646},"    pattern = ",{"type":25,"tag":220,"props":1648,"children":1649},{"style":835},[1650],{"type":31,"value":814},{"type":25,"tag":220,"props":1652,"children":1653},{"style":840},[1654],{"type":31,"value":843},{"type":25,"tag":220,"props":1656,"children":1657},{"style":846},[1658],{"type":31,"value":849},{"type":25,"tag":220,"props":1660,"children":1661},{"style":233},[1662],{"type":31,"value":854},{"type":25,"tag":220,"props":1664,"children":1665},{"style":840},[1666],{"type":31,"value":859},{"type":25,"tag":220,"props":1668,"children":1669},{"style":846},[1670],{"type":31,"value":849},{"type":25,"tag":220,"props":1672,"children":1673},{"style":233},[1674],{"type":31,"value":868},{"type":25,"tag":220,"props":1676,"children":1677},{"style":840},[1678],{"type":31,"value":873},{"type":25,"tag":220,"props":1680,"children":1681},{"style":233},[1682],{"type":31,"value":878},{"type":25,"tag":220,"props":1684,"children":1685},{"style":840},[1686],{"type":31,"value":883},{"type":25,"tag":220,"props":1688,"children":1689},{"style":846},[1690],{"type":31,"value":849},{"type":25,"tag":220,"props":1692,"children":1693},{"style":233},[1694],{"type":31,"value":892},{"type":25,"tag":220,"props":1696,"children":1697},{"style":840},[1698],{"type":31,"value":859},{"type":25,"tag":220,"props":1700,"children":1701},{"style":846},[1702],{"type":31,"value":849},{"type":25,"tag":220,"props":1704,"children":1705},{"style":840},[1706],{"type":31,"value":883},{"type":25,"tag":220,"props":1708,"children":1709},{"style":846},[1710],{"type":31,"value":909},{"type":25,"tag":220,"props":1712,"children":1713},{"style":233},[1714],{"type":31,"value":868},{"type":25,"tag":220,"props":1716,"children":1717},{"style":846},[1718],{"type":31,"value":849},{"type":25,"tag":220,"props":1720,"children":1721},{"style":233},[1722],{"type":31,"value":868},{"type":25,"tag":220,"props":1724,"children":1725},{"style":840},[1726],{"type":31,"value":883},{"type":25,"tag":220,"props":1728,"children":1729},{"style":846},[1730],{"type":31,"value":930},{"type":25,"tag":220,"props":1732,"children":1733},{"style":233},[1734],{"type":31,"value":878},{"type":25,"tag":220,"props":1736,"children":1737},{"style":840},[1738],{"type":31,"value":883},{"type":25,"tag":220,"props":1740,"children":1741},{"style":846},[1742],{"type":31,"value":849},{"type":25,"tag":220,"props":1744,"children":1745},{"style":233},[1746],{"type":31,"value":892},{"type":25,"tag":220,"props":1748,"children":1749},{"style":840},[1750],{"type":31,"value":859},{"type":25,"tag":220,"props":1752,"children":1753},{"style":846},[1754],{"type":31,"value":849},{"type":25,"tag":220,"props":1756,"children":1757},{"style":840},[1758],{"type":31,"value":883},{"type":25,"tag":220,"props":1760,"children":1761},{"style":846},[1762],{"type":31,"value":909},{"type":25,"tag":220,"props":1764,"children":1765},{"style":233},[1766],{"type":31,"value":868},{"type":25,"tag":220,"props":1768,"children":1769},{"style":846},[1770],{"type":31,"value":849},{"type":25,"tag":220,"props":1772,"children":1773},{"style":233},[1774],{"type":31,"value":868},{"type":25,"tag":220,"props":1776,"children":1777},{"style":840},[1778],{"type":31,"value":979},{"type":25,"tag":220,"props":1780,"children":1782},{"class":222,"line":1781},21,[1783,1788,1793,1797,1801,1805,1810,1815],{"type":25,"tag":220,"props":1784,"children":1785},{"style":265},[1786],{"type":31,"value":1787},"    points = ",{"type":25,"tag":220,"props":1789,"children":1790},{"style":227},[1791],{"type":31,"value":1792},"sum",{"type":25,"tag":220,"props":1794,"children":1795},{"style":265},[1796],{"type":31,"value":854},{"type":25,"tag":220,"props":1798,"children":1799},{"style":227},[1800],{"type":31,"value":1046},{"type":25,"tag":220,"props":1802,"children":1803},{"style":265},[1804],{"type":31,"value":854},{"type":25,"tag":220,"props":1806,"children":1807},{"style":835},[1808],{"type":31,"value":1809},"lambda",{"type":25,"tag":220,"props":1811,"children":1812},{"style":1345},[1813],{"type":31,"value":1814}," x",{"type":25,"tag":220,"props":1816,"children":1817},{"style":265},[1818],{"type":31,"value":1819},": get_points(x), data))\n",{"type":25,"tag":220,"props":1821,"children":1823},{"class":222,"line":1822},22,[1824,1829,1833,1838,1843,1848,1853,1858,1863],{"type":25,"tag":220,"props":1825,"children":1826},{"style":227},[1827],{"type":31,"value":1828},"    print",{"type":25,"tag":220,"props":1830,"children":1831},{"style":265},[1832],{"type":31,"value":854},{"type":25,"tag":220,"props":1834,"children":1835},{"style":835},[1836],{"type":31,"value":1837},"f",{"type":25,"tag":220,"props":1839,"children":1840},{"style":233},[1841],{"type":31,"value":1842},"\"Total number of points: ",{"type":25,"tag":220,"props":1844,"children":1845},{"style":835},[1846],{"type":31,"value":1847},"{",{"type":25,"tag":220,"props":1849,"children":1850},{"style":265},[1851],{"type":31,"value":1852},"points",{"type":25,"tag":220,"props":1854,"children":1855},{"style":835},[1856],{"type":31,"value":1857},"}",{"type":25,"tag":220,"props":1859,"children":1860},{"style":233},[1861],{"type":31,"value":1862},"\"",{"type":25,"tag":220,"props":1864,"children":1865},{"style":265},[1866],{"type":31,"value":1867},")\n",{"type":25,"tag":140,"props":1869,"children":1871},{"id":1870},"part-2",[1872],{"type":31,"value":1873},"Part 2",{"type":25,"tag":34,"props":1875,"children":1876},{},[1877,1878,1882,1884,1889,1891,1897,1899,1905,1906,1912,1914,1920,1922,1928,1930,1935,1936,1941],{"type":31,"value":150},{"type":25,"tag":45,"props":1879,"children":1880},{},[1881],{"type":31,"value":1873},{"type":31,"value":1883},", the challenge gets a little bit more complicated. Instead of counting points, we are now tasked with counting the total number of scratchards we end up with. That is, we now win ",{"type":25,"tag":175,"props":1885,"children":1887},{"className":1886},[],[1888],{"type":31,"value":1250},{"type":31,"value":1890}," copies of the scratchcards that follow a given scratchcard. For example, say we have ",{"type":25,"tag":175,"props":1892,"children":1894},{"className":1893},[],[1895],{"type":31,"value":1896},"Card 10",{"type":31,"value":1898}," with 3 matching numbers, we would then win one copy of cards ",{"type":25,"tag":175,"props":1900,"children":1902},{"className":1901},[],[1903],{"type":31,"value":1904},"11",{"type":31,"value":1600},{"type":25,"tag":175,"props":1907,"children":1909},{"className":1908},[],[1910],{"type":31,"value":1911},"12",{"type":31,"value":1913},", and ",{"type":25,"tag":175,"props":1915,"children":1917},{"className":1916},[],[1918],{"type":31,"value":1919},"13",{"type":31,"value":1921},". Say now that ",{"type":25,"tag":175,"props":1923,"children":1925},{"className":1924},[],[1926],{"type":31,"value":1927},"Card 11",{"type":31,"value":1929}," has 2 matching numbers, we would then end up with additional copies of cards ",{"type":25,"tag":175,"props":1931,"children":1933},{"className":1932},[],[1934],{"type":31,"value":1911},{"type":31,"value":107},{"type":25,"tag":175,"props":1937,"children":1939},{"className":1938},[],[1940],{"type":31,"value":1919},{"type":31,"value":115},{"type":25,"tag":763,"props":1943,"children":1944},{},[1945,1947,1965,1966],{"type":31,"value":1946},"\n  ",{"type":25,"tag":1948,"props":1949,"children":1951},"figure",{"className":1950},[1948],[1952,1954,1964],{"type":31,"value":1953},"\n    ",{"type":25,"tag":1955,"props":1956,"children":1963},"img",{"alt":1957,"src":1958,"className":1959,"style":1962},"Day 4 - Part 2","/images/2024/1.aoc_2023/day4-2.svg",[1960,1961],"figure-image","svg","max-width: 200px;",[],{"type":31,"value":1946},{"type":31,"value":1946},{"type":25,"tag":34,"props":1967,"children":1970},{"className":1968},[1969],"figure-caption",[1971,1973,1977],{"type":31,"value":1972},"Example for ",{"type":25,"tag":45,"props":1974,"children":1975},{},[1976],{"type":31,"value":1957},{"type":31,"value":115},{"type":25,"tag":34,"props":1979,"children":1980},{},[1981],{"type":31,"value":1982},"Summing up the copies of the cards we gained, we would end up with:",{"type":25,"tag":210,"props":1984,"children":1986},{"className":819,"code":1985,"language":14,"meta":7,"style":7},"{10: 1, 11: 1, 12: 2, 13: 3}\n",[1987],{"type":25,"tag":175,"props":1988,"children":1989},{"__ignoreMap":7},[1990],{"type":25,"tag":220,"props":1991,"children":1992},{"class":222,"line":223},[1993,1997,2001,2005,2010,2014,2018,2022,2026,2030,2034,2038,2042,2046,2050,2054,2059],{"type":25,"tag":220,"props":1994,"children":1995},{"style":265},[1996],{"type":31,"value":1847},{"type":25,"tag":220,"props":1998,"children":1999},{"style":239},[2000],{"type":31,"value":11},{"type":25,"tag":220,"props":2002,"children":2003},{"style":265},[2004],{"type":31,"value":1353},{"type":25,"tag":220,"props":2006,"children":2007},{"style":239},[2008],{"type":31,"value":2009},"1",{"type":25,"tag":220,"props":2011,"children":2012},{"style":265},[2013],{"type":31,"value":1600},{"type":25,"tag":220,"props":2015,"children":2016},{"style":239},[2017],{"type":31,"value":1904},{"type":25,"tag":220,"props":2019,"children":2020},{"style":265},[2021],{"type":31,"value":1353},{"type":25,"tag":220,"props":2023,"children":2024},{"style":239},[2025],{"type":31,"value":2009},{"type":25,"tag":220,"props":2027,"children":2028},{"style":265},[2029],{"type":31,"value":1600},{"type":25,"tag":220,"props":2031,"children":2032},{"style":239},[2033],{"type":31,"value":1911},{"type":25,"tag":220,"props":2035,"children":2036},{"style":265},[2037],{"type":31,"value":1353},{"type":25,"tag":220,"props":2039,"children":2040},{"style":239},[2041],{"type":31,"value":1236},{"type":25,"tag":220,"props":2043,"children":2044},{"style":265},[2045],{"type":31,"value":1600},{"type":25,"tag":220,"props":2047,"children":2048},{"style":239},[2049],{"type":31,"value":1919},{"type":25,"tag":220,"props":2051,"children":2052},{"style":265},[2053],{"type":31,"value":1353},{"type":25,"tag":220,"props":2055,"children":2056},{"style":239},[2057],{"type":31,"value":2058},"3",{"type":25,"tag":220,"props":2060,"children":2061},{"style":265},[2062],{"type":31,"value":2063},"}\n",{"type":25,"tag":703,"props":2065,"children":2067},{"id":2066},"solution-1",[2068],{"type":31,"value":708},{"type":25,"tag":34,"props":2070,"children":2071},{},[2072,2074,2081],{"type":31,"value":2073},"This problem can easily be solved using the magic of ‚ú®",{"type":25,"tag":38,"props":2075,"children":2078},{"href":2076,"rel":2077},"https://en.wikipedia.org/wiki/Recursion_(computer_science)",[42],[2079],{"type":31,"value":2080},"recursion",{"type":31,"value":2082},"‚ú®. The idea is to parse each scratchcard and then:",{"type":25,"tag":740,"props":2084,"children":2085},{},[2086],{"type":25,"tag":744,"props":2087,"children":2088},{},[2089,2100],{"type":25,"tag":126,"props":2090,"children":2091},{},[2092,2094],{"type":31,"value":2093},"As in ",{"type":25,"tag":38,"props":2095,"children":2097},{"href":2096},"#part-1",[2098],{"type":31,"value":2099},"Day 4 - Part 1",{"type":31,"value":2101},": We make use of regular expressions to capture the relevant groups, extract the digits, and find the intersection between the sets of numbers (i.e. owned and winning numbers).",{"type":25,"tag":117,"props":2103,"children":2104},{},[2105],{"type":25,"tag":34,"props":2106,"children":2107},{},[2108,2110,2115,2117,2121],{"type":31,"value":2109},"‚ö†Ô∏è ",{"type":25,"tag":126,"props":2111,"children":2112},{},[2113],{"type":31,"value":2114},"Gotcha",{"type":31,"value":2116},": we don't subtract 1 to the length of the intersection in ",{"type":25,"tag":45,"props":2118,"children":2119},{},[2120],{"type":31,"value":1873},{"type":31,"value":2122}," since we want the exact length of the range of cards.",{"type":25,"tag":740,"props":2124,"children":2125},{"start":308},[2126],{"type":25,"tag":744,"props":2127,"children":2128},{},[2129,2134,2136,2142,2144,2150],{"type":25,"tag":126,"props":2130,"children":2131},{},[2132],{"type":31,"value":2133},"Count the cards",{"type":31,"value":2135},": To count the cards, we use the ",{"type":25,"tag":175,"props":2137,"children":2139},{"className":2138},[],[2140],{"type":31,"value":2141},"get_scratchcards()",{"type":31,"value":2143}," recursive function. In a nutshell, this function will iterate over the cards recusively and count the copies using a counter (i.e. ",{"type":25,"tag":175,"props":2145,"children":2147},{"className":2146},[],[2148],{"type":31,"value":2149},"cards",{"type":31,"value":2151}," variable).",{"type":25,"tag":34,"props":2153,"children":2154},{},[2155,2157,2164],{"type":31,"value":2156},"As the code for this part is a bit more verbose, you can find the full solution for this part on ",{"type":25,"tag":38,"props":2158,"children":2161},{"href":2159,"rel":2160},"https://github.com/alxdrcirilo/advent-of-code/blob/main/2023/day_04/day4-2.py",[42],[2162],{"type":31,"value":2163},"GitHub",{"type":31,"value":115},{"type":25,"tag":134,"props":2166,"children":2168},{"id":2167},"day-9",[2169],{"type":31,"value":113},{"type":25,"tag":140,"props":2171,"children":2173},{"id":2172},"part-1-1",[2174],{"type":31,"value":145},{"type":25,"tag":34,"props":2176,"children":2177},{},[2178,2184,2186,2192,2194,2199],{"type":25,"tag":38,"props":2179,"children":2182},{"href":2180,"rel":2181},"https://adventofcode.com/2023/day/9",[42],[2183],{"type":31,"value":113},{"type":31,"value":2185}," was a really fun one to solve. This task is a canonical example of a pattern recognition and sequence extrapolation problem. In a nutshell, we are tasked with finding the differences between consecutive numbers in each sequence (so you always end up with ",{"type":25,"tag":175,"props":2187,"children":2189},{"className":2188},[],[2190],{"type":31,"value":2191},"n - 1",{"type":31,"value":2193}," numbers for each subsequence) until we reach a sequence solely containing zeroes. Using the differences we computed, we can then extrapolate the next value in a given sequence. The solution is the ",{"type":25,"tag":126,"props":2195,"children":2196},{},[2197],{"type":31,"value":2198},"sum of all the extrapolated values",{"type":31,"value":115},{"type":25,"tag":34,"props":2201,"children":2202},{},[2203,2205,2211],{"type":31,"value":2204},"As explained in the ",{"type":25,"tag":38,"props":2206,"children":2208},{"href":2180,"rel":2207},[42],[2209],{"type":31,"value":2210},"exercise",{"type":31,"value":2212},", imagine with start with the following sequence of numbers:",{"type":25,"tag":210,"props":2214,"children":2216},{"className":212,"code":2215,"language":214,"meta":7,"style":7},"1   3   6  10  15  21\n",[2217],{"type":25,"tag":175,"props":2218,"children":2219},{"__ignoreMap":7},[2220],{"type":25,"tag":220,"props":2221,"children":2222},{"class":222,"line":223},[2223,2227,2232,2237,2242,2247],{"type":25,"tag":220,"props":2224,"children":2225},{"style":227},[2226],{"type":31,"value":2009},{"type":25,"tag":220,"props":2228,"children":2229},{"style":239},[2230],{"type":31,"value":2231},"   3",{"type":25,"tag":220,"props":2233,"children":2234},{"style":239},[2235],{"type":31,"value":2236},"   6",{"type":25,"tag":220,"props":2238,"children":2239},{"style":239},[2240],{"type":31,"value":2241},"  10",{"type":25,"tag":220,"props":2243,"children":2244},{"style":239},[2245],{"type":31,"value":2246},"  15",{"type":25,"tag":220,"props":2248,"children":2249},{"style":239},[2250],{"type":31,"value":2251},"  21\n",{"type":25,"tag":34,"props":2253,"children":2254},{},[2255],{"type":31,"value":2256},"If we compute the differences between each consecutive pair of numbers, the subsequent sequence equates:",{"type":25,"tag":210,"props":2258,"children":2260},{"className":212,"code":2259,"language":214,"meta":7,"style":7},"1   3   6  10  15  21\n  2   3   4   5   6\n",[2261],{"type":25,"tag":175,"props":2262,"children":2263},{"__ignoreMap":7},[2264,2291],{"type":25,"tag":220,"props":2265,"children":2266},{"class":222,"line":223},[2267,2271,2275,2279,2283,2287],{"type":25,"tag":220,"props":2268,"children":2269},{"style":227},[2270],{"type":31,"value":2009},{"type":25,"tag":220,"props":2272,"children":2273},{"style":239},[2274],{"type":31,"value":2231},{"type":25,"tag":220,"props":2276,"children":2277},{"style":239},[2278],{"type":31,"value":2236},{"type":25,"tag":220,"props":2280,"children":2281},{"style":239},[2282],{"type":31,"value":2241},{"type":25,"tag":220,"props":2284,"children":2285},{"style":239},[2286],{"type":31,"value":2246},{"type":25,"tag":220,"props":2288,"children":2289},{"style":239},[2290],{"type":31,"value":2251},{"type":25,"tag":220,"props":2292,"children":2293},{"class":222,"line":308},[2294,2299,2303,2308,2313],{"type":25,"tag":220,"props":2295,"children":2296},{"style":227},[2297],{"type":31,"value":2298},"  2",{"type":25,"tag":220,"props":2300,"children":2301},{"style":239},[2302],{"type":31,"value":2231},{"type":25,"tag":220,"props":2304,"children":2305},{"style":239},[2306],{"type":31,"value":2307},"   4",{"type":25,"tag":220,"props":2309,"children":2310},{"style":239},[2311],{"type":31,"value":2312},"   5",{"type":25,"tag":220,"props":2314,"children":2315},{"style":239},[2316],{"type":31,"value":2317},"   6\n",{"type":25,"tag":34,"props":2319,"children":2320},{},[2321],{"type":31,"value":2322},"This process repeats itself until we reach a resulting sequence that only contains zeroes:",{"type":25,"tag":210,"props":2324,"children":2326},{"className":212,"code":2325,"language":214,"meta":7,"style":7},"1   3   6  10  15  21\n  2   3   4   5   6\n    1   1   1   1\n      0   0   0\n",[2327],{"type":25,"tag":175,"props":2328,"children":2329},{"__ignoreMap":7},[2330,2357,2380,2402],{"type":25,"tag":220,"props":2331,"children":2332},{"class":222,"line":223},[2333,2337,2341,2345,2349,2353],{"type":25,"tag":220,"props":2334,"children":2335},{"style":227},[2336],{"type":31,"value":2009},{"type":25,"tag":220,"props":2338,"children":2339},{"style":239},[2340],{"type":31,"value":2231},{"type":25,"tag":220,"props":2342,"children":2343},{"style":239},[2344],{"type":31,"value":2236},{"type":25,"tag":220,"props":2346,"children":2347},{"style":239},[2348],{"type":31,"value":2241},{"type":25,"tag":220,"props":2350,"children":2351},{"style":239},[2352],{"type":31,"value":2246},{"type":25,"tag":220,"props":2354,"children":2355},{"style":239},[2356],{"type":31,"value":2251},{"type":25,"tag":220,"props":2358,"children":2359},{"class":222,"line":308},[2360,2364,2368,2372,2376],{"type":25,"tag":220,"props":2361,"children":2362},{"style":227},[2363],{"type":31,"value":2298},{"type":25,"tag":220,"props":2365,"children":2366},{"style":239},[2367],{"type":31,"value":2231},{"type":25,"tag":220,"props":2369,"children":2370},{"style":239},[2371],{"type":31,"value":2307},{"type":25,"tag":220,"props":2373,"children":2374},{"style":239},[2375],{"type":31,"value":2312},{"type":25,"tag":220,"props":2377,"children":2378},{"style":239},[2379],{"type":31,"value":2317},{"type":25,"tag":220,"props":2381,"children":2382},{"class":222,"line":388},[2383,2388,2393,2397],{"type":25,"tag":220,"props":2384,"children":2385},{"style":227},[2386],{"type":31,"value":2387},"    1",{"type":25,"tag":220,"props":2389,"children":2390},{"style":239},[2391],{"type":31,"value":2392},"   1",{"type":25,"tag":220,"props":2394,"children":2395},{"style":239},[2396],{"type":31,"value":2392},{"type":25,"tag":220,"props":2398,"children":2399},{"style":239},[2400],{"type":31,"value":2401},"   1\n",{"type":25,"tag":220,"props":2403,"children":2404},{"class":222,"line":467},[2405,2410,2415],{"type":25,"tag":220,"props":2406,"children":2407},{"style":227},[2408],{"type":31,"value":2409},"      0",{"type":25,"tag":220,"props":2411,"children":2412},{"style":239},[2413],{"type":31,"value":2414},"   0",{"type":25,"tag":220,"props":2416,"children":2417},{"style":239},[2418],{"type":31,"value":2419},"   0\n",{"type":25,"tag":34,"props":2421,"children":2422},{},[2423,2425,2431],{"type":31,"value":2424},"To compute the extrapolated values, we first add a ",{"type":25,"tag":175,"props":2426,"children":2428},{"className":2427},[],[2429],{"type":31,"value":2430},"0",{"type":31,"value":2432}," to the last sequence (i.e. the sequence containing only zeroes). Then, for each sequence from the bottom up, we compute the extrapolated value by summing the last number in the sequence with the previous extrapolated value.",{"type":25,"tag":210,"props":2434,"children":2436},{"className":212,"code":2435,"language":214,"meta":7,"style":7},"1   3   6  10  15  21  '28'\n  2   3   4   5   6   '7'\n    1   1   1   1   '1'\n      0   0   0   '0'\n",[2437],{"type":25,"tag":175,"props":2438,"children":2439},{"__ignoreMap":7},[2440,2473,2501,2525],{"type":25,"tag":220,"props":2441,"children":2442},{"class":222,"line":223},[2443,2447,2451,2455,2459,2463,2468],{"type":25,"tag":220,"props":2444,"children":2445},{"style":227},[2446],{"type":31,"value":2009},{"type":25,"tag":220,"props":2448,"children":2449},{"style":239},[2450],{"type":31,"value":2231},{"type":25,"tag":220,"props":2452,"children":2453},{"style":239},[2454],{"type":31,"value":2236},{"type":25,"tag":220,"props":2456,"children":2457},{"style":239},[2458],{"type":31,"value":2241},{"type":25,"tag":220,"props":2460,"children":2461},{"style":239},[2462],{"type":31,"value":2246},{"type":25,"tag":220,"props":2464,"children":2465},{"style":239},[2466],{"type":31,"value":2467},"  21",{"type":25,"tag":220,"props":2469,"children":2470},{"style":233},[2471],{"type":31,"value":2472},"  '28'\n",{"type":25,"tag":220,"props":2474,"children":2475},{"class":222,"line":308},[2476,2480,2484,2488,2492,2496],{"type":25,"tag":220,"props":2477,"children":2478},{"style":227},[2479],{"type":31,"value":2298},{"type":25,"tag":220,"props":2481,"children":2482},{"style":239},[2483],{"type":31,"value":2231},{"type":25,"tag":220,"props":2485,"children":2486},{"style":239},[2487],{"type":31,"value":2307},{"type":25,"tag":220,"props":2489,"children":2490},{"style":239},[2491],{"type":31,"value":2312},{"type":25,"tag":220,"props":2493,"children":2494},{"style":239},[2495],{"type":31,"value":2236},{"type":25,"tag":220,"props":2497,"children":2498},{"style":233},[2499],{"type":31,"value":2500},"   '7'\n",{"type":25,"tag":220,"props":2502,"children":2503},{"class":222,"line":388},[2504,2508,2512,2516,2520],{"type":25,"tag":220,"props":2505,"children":2506},{"style":227},[2507],{"type":31,"value":2387},{"type":25,"tag":220,"props":2509,"children":2510},{"style":239},[2511],{"type":31,"value":2392},{"type":25,"tag":220,"props":2513,"children":2514},{"style":239},[2515],{"type":31,"value":2392},{"type":25,"tag":220,"props":2517,"children":2518},{"style":239},[2519],{"type":31,"value":2392},{"type":25,"tag":220,"props":2521,"children":2522},{"style":233},[2523],{"type":31,"value":2524},"   '1'\n",{"type":25,"tag":220,"props":2526,"children":2527},{"class":222,"line":467},[2528,2532,2536,2540],{"type":25,"tag":220,"props":2529,"children":2530},{"style":227},[2531],{"type":31,"value":2409},{"type":25,"tag":220,"props":2533,"children":2534},{"style":239},[2535],{"type":31,"value":2414},{"type":25,"tag":220,"props":2537,"children":2538},{"style":239},[2539],{"type":31,"value":2414},{"type":25,"tag":220,"props":2541,"children":2542},{"style":233},[2543],{"type":31,"value":2544},"   '0'\n",{"type":25,"tag":703,"props":2546,"children":2548},{"id":2547},"solution-2",[2549],{"type":31,"value":708},{"type":25,"tag":34,"props":2551,"children":2552},{},[2553,2554,2559,2561,2566,2568,2574],{"type":31,"value":2093},{"type":25,"tag":38,"props":2555,"children":2557},{"href":2556},"#part-2",[2558],{"type":31,"value":1957},{"type":31,"value":2560},", this problem seems to be a prime example in which ",{"type":25,"tag":38,"props":2562,"children":2564},{"href":2076,"rel":2563},[42],[2565],{"type":31,"value":2080},{"type":31,"value":2567}," can shine. Given a list of numbers - ",{"type":25,"tag":175,"props":2569,"children":2571},{"className":2570},[],[2572],{"type":31,"value":2573},"values",{"type":31,"value":2575},", we can compute the differences between each pair of consecutive digits with:",{"type":25,"tag":210,"props":2577,"children":2579},{"className":819,"code":2578,"language":14,"meta":7,"style":7},"diff = [b - a for a, b in zip(values, values[1:])]\n",[2580],{"type":25,"tag":175,"props":2581,"children":2582},{"__ignoreMap":7},[2583],{"type":25,"tag":220,"props":2584,"children":2585},{"class":222,"line":223},[2586,2591,2595,2600,2604,2609,2614,2618],{"type":25,"tag":220,"props":2587,"children":2588},{"style":265},[2589],{"type":31,"value":2590},"diff = [b - a ",{"type":25,"tag":220,"props":2592,"children":2593},{"style":1113},[2594],{"type":31,"value":1116},{"type":25,"tag":220,"props":2596,"children":2597},{"style":265},[2598],{"type":31,"value":2599}," a, b ",{"type":25,"tag":220,"props":2601,"children":2602},{"style":1113},[2603],{"type":31,"value":1126},{"type":25,"tag":220,"props":2605,"children":2606},{"style":227},[2607],{"type":31,"value":2608}," zip",{"type":25,"tag":220,"props":2610,"children":2611},{"style":265},[2612],{"type":31,"value":2613},"(values, values[",{"type":25,"tag":220,"props":2615,"children":2616},{"style":239},[2617],{"type":31,"value":2009},{"type":25,"tag":220,"props":2619,"children":2620},{"style":265},[2621],{"type":31,"value":2622},":])]\n",{"type":25,"tag":34,"props":2624,"children":2625},{},[2626],{"type":31,"value":2627},"To implement the recursive function, we simply need to define the recursive and base cases. The base case in this problem is reached when all the digits in a sequence are zeroes, the recursive case is reached elsewise.",{"type":25,"tag":34,"props":2629,"children":2630},{},[2631,2633,2639,2641,2646,2648,2654,2656,2662,2664,2670],{"type":31,"value":2632},"At first, I made the na√Øve mistake of just checking if the sum of digits is 0. But this will not give the proper solution since we can still end up with negative numbers that cancel out their positive counterparts (e.g. ",{"type":25,"tag":175,"props":2634,"children":2636},{"className":2635},[],[2637],{"type":31,"value":2638},"-2 0 0 2 0",{"type":31,"value":2640},") and have the sum of digits equating ",{"type":25,"tag":175,"props":2642,"children":2644},{"className":2643},[],[2645],{"type":31,"value":2430},{"type":31,"value":2647},". So instead of checking ",{"type":25,"tag":175,"props":2649,"children":2651},{"className":2650},[],[2652],{"type":31,"value":2653},"while sum(diff)",{"type":31,"value":2655}," for the recursive case, we should check if any of the integers in the sequence is different than zero, i.e. ",{"type":25,"tag":175,"props":2657,"children":2659},{"className":2658},[],[2660],{"type":31,"value":2661},"while any(diff)",{"type":31,"value":2663},". Then, we just need to sum the last integer in the previous sequence to the last integer in the computed sequence of pairwise differences (in the example shown above, this would be: ",{"type":25,"tag":175,"props":2665,"children":2667},{"className":2666},[],[2668],{"type":31,"value":2669},"21+6+1=28",{"type":31,"value":2671},").",{"type":25,"tag":34,"props":2673,"children":2674},{},[2675],{"type":31,"value":2676},"Having this in mind, it takes little effort to wrap up the concepts and come up with our recursive function:",{"type":25,"tag":210,"props":2678,"children":2680},{"className":819,"code":2679,"language":14,"meta":7,"style":7},"def get_diff_sum(values: list[int]) -> int:\n    \"\"\"Return the sum of the extrapolated values.\n\n    :return int: sum of extrapolated values\n    \"\"\"\n    diff = [b - a for a, b in zip(values, values[1:])]\n    while any(diff):\n        return values[-1] + get_diff_sum(diff)\n    return values[-1]\n\n\nif __name__ == \"__main__\":\n    with open(\"2023/day_09/input.txt\", \"r\") as file:\n        data = file.read().splitlines()\n\n    data = [[*map(int, line.split())] for line in data]\n    print(f\"Sum of the extrapolated values: {sum(map(get_diff_sum, data))}\")\n",[2681],{"type":25,"tag":175,"props":2682,"children":2683},{"__ignoreMap":7},[2684,2726,2734,2741,2749,2756,2792,2810,2832,2852,2859,2866,2889,2929,2936,2943,2986],{"type":25,"tag":220,"props":2685,"children":2686},{"class":222,"line":223},[2687,2691,2696,2700,2704,2709,2713,2718,2722],{"type":25,"tag":220,"props":2688,"children":2689},{"style":835},[2690],{"type":31,"value":1333},{"type":25,"tag":220,"props":2692,"children":2693},{"style":227},[2694],{"type":31,"value":2695}," get_diff_sum",{"type":25,"tag":220,"props":2697,"children":2698},{"style":265},[2699],{"type":31,"value":854},{"type":25,"tag":220,"props":2701,"children":2702},{"style":1345},[2703],{"type":31,"value":2573},{"type":25,"tag":220,"props":2705,"children":2706},{"style":265},[2707],{"type":31,"value":2708},": list[",{"type":25,"tag":220,"props":2710,"children":2711},{"style":1102},[2712],{"type":31,"value":1105},{"type":25,"tag":220,"props":2714,"children":2715},{"style":265},[2716],{"type":31,"value":2717},"]) -> ",{"type":25,"tag":220,"props":2719,"children":2720},{"style":1102},[2721],{"type":31,"value":1105},{"type":25,"tag":220,"props":2723,"children":2724},{"style":265},[2725],{"type":31,"value":1372},{"type":25,"tag":220,"props":2727,"children":2728},{"class":222,"line":308},[2729],{"type":25,"tag":220,"props":2730,"children":2731},{"style":233},[2732],{"type":31,"value":2733},"    \"\"\"Return the sum of the extrapolated values.\n",{"type":25,"tag":220,"props":2735,"children":2736},{"class":222,"line":388},[2737],{"type":25,"tag":220,"props":2738,"children":2739},{"emptyLinePlaceholder":1315},[2740],{"type":31,"value":1318},{"type":25,"tag":220,"props":2742,"children":2743},{"class":222,"line":467},[2744],{"type":25,"tag":220,"props":2745,"children":2746},{"style":233},[2747],{"type":31,"value":2748},"    :return int: sum of extrapolated values\n",{"type":25,"tag":220,"props":2750,"children":2751},{"class":222,"line":547},[2752],{"type":25,"tag":220,"props":2753,"children":2754},{"style":233},[2755],{"type":31,"value":1415},{"type":25,"tag":220,"props":2757,"children":2758},{"class":222,"line":625},[2759,2764,2768,2772,2776,2780,2784,2788],{"type":25,"tag":220,"props":2760,"children":2761},{"style":265},[2762],{"type":31,"value":2763},"    diff = [b - a ",{"type":25,"tag":220,"props":2765,"children":2766},{"style":1113},[2767],{"type":31,"value":1116},{"type":25,"tag":220,"props":2769,"children":2770},{"style":265},[2771],{"type":31,"value":2599},{"type":25,"tag":220,"props":2773,"children":2774},{"style":1113},[2775],{"type":31,"value":1126},{"type":25,"tag":220,"props":2777,"children":2778},{"style":227},[2779],{"type":31,"value":2608},{"type":25,"tag":220,"props":2781,"children":2782},{"style":265},[2783],{"type":31,"value":2613},{"type":25,"tag":220,"props":2785,"children":2786},{"style":239},[2787],{"type":31,"value":2009},{"type":25,"tag":220,"props":2789,"children":2790},{"style":265},[2791],{"type":31,"value":2622},{"type":25,"tag":220,"props":2793,"children":2794},{"class":222,"line":1391},[2795,2800,2805],{"type":25,"tag":220,"props":2796,"children":2797},{"style":1113},[2798],{"type":31,"value":2799},"    while",{"type":25,"tag":220,"props":2801,"children":2802},{"style":227},[2803],{"type":31,"value":2804}," any",{"type":25,"tag":220,"props":2806,"children":2807},{"style":265},[2808],{"type":31,"value":2809},"(diff):\n",{"type":25,"tag":220,"props":2811,"children":2812},{"class":222,"line":1400},[2813,2818,2823,2827],{"type":25,"tag":220,"props":2814,"children":2815},{"style":1113},[2816],{"type":31,"value":2817},"        return",{"type":25,"tag":220,"props":2819,"children":2820},{"style":265},[2821],{"type":31,"value":2822}," values[-",{"type":25,"tag":220,"props":2824,"children":2825},{"style":239},[2826],{"type":31,"value":2009},{"type":25,"tag":220,"props":2828,"children":2829},{"style":265},[2830],{"type":31,"value":2831},"] + get_diff_sum(diff)\n",{"type":25,"tag":220,"props":2833,"children":2834},{"class":222,"line":1409},[2835,2839,2843,2847],{"type":25,"tag":220,"props":2836,"children":2837},{"style":1113},[2838],{"type":31,"value":1511},{"type":25,"tag":220,"props":2840,"children":2841},{"style":265},[2842],{"type":31,"value":2822},{"type":25,"tag":220,"props":2844,"children":2845},{"style":239},[2846],{"type":31,"value":2009},{"type":25,"tag":220,"props":2848,"children":2849},{"style":265},[2850],{"type":31,"value":2851},"]\n",{"type":25,"tag":220,"props":2853,"children":2854},{"class":222,"line":1418},[2855],{"type":25,"tag":220,"props":2856,"children":2857},{"emptyLinePlaceholder":1315},[2858],{"type":31,"value":1318},{"type":25,"tag":220,"props":2860,"children":2861},{"class":222,"line":1427},[2862],{"type":25,"tag":220,"props":2863,"children":2864},{"emptyLinePlaceholder":1315},[2865],{"type":31,"value":1318},{"type":25,"tag":220,"props":2867,"children":2868},{"class":222,"line":1468},[2869,2873,2877,2881,2885],{"type":25,"tag":220,"props":2870,"children":2871},{"style":1113},[2872],{"type":31,"value":1553},{"type":25,"tag":220,"props":2874,"children":2875},{"style":1345},[2876],{"type":31,"value":1558},{"type":25,"tag":220,"props":2878,"children":2879},{"style":265},[2880],{"type":31,"value":1563},{"type":25,"tag":220,"props":2882,"children":2883},{"style":233},[2884],{"type":31,"value":1568},{"type":25,"tag":220,"props":2886,"children":2887},{"style":265},[2888],{"type":31,"value":1372},{"type":25,"tag":220,"props":2890,"children":2891},{"class":222,"line":1505},[2892,2896,2900,2904,2909,2913,2917,2921,2925],{"type":25,"tag":220,"props":2893,"children":2894},{"style":1113},[2895],{"type":31,"value":1581},{"type":25,"tag":220,"props":2897,"children":2898},{"style":227},[2899],{"type":31,"value":1586},{"type":25,"tag":220,"props":2901,"children":2902},{"style":265},[2903],{"type":31,"value":854},{"type":25,"tag":220,"props":2905,"children":2906},{"style":233},[2907],{"type":31,"value":2908},"\"2023/day_09/input.txt\"",{"type":25,"tag":220,"props":2910,"children":2911},{"style":265},[2912],{"type":31,"value":1600},{"type":25,"tag":220,"props":2914,"children":2915},{"style":233},[2916],{"type":31,"value":1605},{"type":25,"tag":220,"props":2918,"children":2919},{"style":265},[2920],{"type":31,"value":1610},{"type":25,"tag":220,"props":2922,"children":2923},{"style":1113},[2924],{"type":31,"value":1615},{"type":25,"tag":220,"props":2926,"children":2927},{"style":265},[2928],{"type":31,"value":1620},{"type":25,"tag":220,"props":2930,"children":2931},{"class":222,"line":1531},[2932],{"type":25,"tag":220,"props":2933,"children":2934},{"style":265},[2935],{"type":31,"value":1629},{"type":25,"tag":220,"props":2937,"children":2938},{"class":222,"line":1539},[2939],{"type":25,"tag":220,"props":2940,"children":2941},{"emptyLinePlaceholder":1315},[2942],{"type":31,"value":1318},{"type":25,"tag":220,"props":2944,"children":2945},{"class":222,"line":1547},[2946,2951,2955,2959,2963,2968,2972,2977,2981],{"type":25,"tag":220,"props":2947,"children":2948},{"style":265},[2949],{"type":31,"value":2950},"    data = [[*",{"type":25,"tag":220,"props":2952,"children":2953},{"style":227},[2954],{"type":31,"value":1046},{"type":25,"tag":220,"props":2956,"children":2957},{"style":265},[2958],{"type":31,"value":854},{"type":25,"tag":220,"props":2960,"children":2961},{"style":1102},[2962],{"type":31,"value":1105},{"type":25,"tag":220,"props":2964,"children":2965},{"style":265},[2966],{"type":31,"value":2967},", line.split())] ",{"type":25,"tag":220,"props":2969,"children":2970},{"style":1113},[2971],{"type":31,"value":1116},{"type":25,"tag":220,"props":2973,"children":2974},{"style":265},[2975],{"type":31,"value":2976}," line ",{"type":25,"tag":220,"props":2978,"children":2979},{"style":1113},[2980],{"type":31,"value":1126},{"type":25,"tag":220,"props":2982,"children":2983},{"style":265},[2984],{"type":31,"value":2985}," data]\n",{"type":25,"tag":220,"props":2987,"children":2988},{"class":222,"line":1575},[2989,2993,2997,3001,3006,3010,3014,3018,3022,3027,3031,3035],{"type":25,"tag":220,"props":2990,"children":2991},{"style":227},[2992],{"type":31,"value":1828},{"type":25,"tag":220,"props":2994,"children":2995},{"style":265},[2996],{"type":31,"value":854},{"type":25,"tag":220,"props":2998,"children":2999},{"style":835},[3000],{"type":31,"value":1837},{"type":25,"tag":220,"props":3002,"children":3003},{"style":233},[3004],{"type":31,"value":3005},"\"Sum of the extrapolated values: ",{"type":25,"tag":220,"props":3007,"children":3008},{"style":835},[3009],{"type":31,"value":1847},{"type":25,"tag":220,"props":3011,"children":3012},{"style":227},[3013],{"type":31,"value":1792},{"type":25,"tag":220,"props":3015,"children":3016},{"style":265},[3017],{"type":31,"value":854},{"type":25,"tag":220,"props":3019,"children":3020},{"style":227},[3021],{"type":31,"value":1046},{"type":25,"tag":220,"props":3023,"children":3024},{"style":265},[3025],{"type":31,"value":3026},"(get_diff_sum, data))",{"type":25,"tag":220,"props":3028,"children":3029},{"style":835},[3030],{"type":31,"value":1857},{"type":25,"tag":220,"props":3032,"children":3033},{"style":233},[3034],{"type":31,"value":1862},{"type":25,"tag":220,"props":3036,"children":3037},{"style":265},[3038],{"type":31,"value":1867},{"type":25,"tag":140,"props":3040,"children":3042},{"id":3041},"part-2-1",[3043],{"type":31,"value":1873},{"type":25,"tag":34,"props":3045,"children":3046},{},[3047,3049,3053,3055,3060,3062,3067],{"type":31,"value":3048},"In the second part of ",{"type":25,"tag":45,"props":3050,"children":3051},{},[3052],{"type":31,"value":113},{"type":31,"value":3054},", we are tasked with extrapolating the values ",{"type":25,"tag":126,"props":3056,"children":3057},{},[3058],{"type":31,"value":3059},"backwards",{"type":31,"value":3061},". Instead of adding a zero to the end of the final sequence (i.e. the sequence of zeroes), we add it to the beginning. We then fill in the extrapolated values at the beginning of each parent sequence. As seen in the ",{"type":25,"tag":38,"props":3063,"children":3065},{"href":2180,"rel":3064},[42],[3066],{"type":31,"value":2210},{"type":31,"value":3068},", if we get the following sequence after computing the differences:",{"type":25,"tag":210,"props":3070,"children":3072},{"className":212,"code":3071,"language":214,"meta":7,"style":7},"10  13  16  21  30  45\n   3   3   5   9  15\n     0   2   4   6\n       2   2   2\n         0   0\n",[3073],{"type":25,"tag":175,"props":3074,"children":3075},{"__ignoreMap":7},[3076,3107,3132,3153,3170],{"type":25,"tag":220,"props":3077,"children":3078},{"class":222,"line":223},[3079,3083,3088,3093,3097,3102],{"type":25,"tag":220,"props":3080,"children":3081},{"style":227},[3082],{"type":31,"value":11},{"type":25,"tag":220,"props":3084,"children":3085},{"style":239},[3086],{"type":31,"value":3087},"  13",{"type":25,"tag":220,"props":3089,"children":3090},{"style":239},[3091],{"type":31,"value":3092},"  16",{"type":25,"tag":220,"props":3094,"children":3095},{"style":239},[3096],{"type":31,"value":2467},{"type":25,"tag":220,"props":3098,"children":3099},{"style":239},[3100],{"type":31,"value":3101},"  30",{"type":25,"tag":220,"props":3103,"children":3104},{"style":239},[3105],{"type":31,"value":3106},"  45\n",{"type":25,"tag":220,"props":3108,"children":3109},{"class":222,"line":308},[3110,3114,3118,3122,3127],{"type":25,"tag":220,"props":3111,"children":3112},{"style":227},[3113],{"type":31,"value":2231},{"type":25,"tag":220,"props":3115,"children":3116},{"style":239},[3117],{"type":31,"value":2231},{"type":25,"tag":220,"props":3119,"children":3120},{"style":239},[3121],{"type":31,"value":2312},{"type":25,"tag":220,"props":3123,"children":3124},{"style":239},[3125],{"type":31,"value":3126},"   9",{"type":25,"tag":220,"props":3128,"children":3129},{"style":239},[3130],{"type":31,"value":3131},"  15\n",{"type":25,"tag":220,"props":3133,"children":3134},{"class":222,"line":388},[3135,3140,3145,3149],{"type":25,"tag":220,"props":3136,"children":3137},{"style":227},[3138],{"type":31,"value":3139},"     0",{"type":25,"tag":220,"props":3141,"children":3142},{"style":239},[3143],{"type":31,"value":3144},"   2",{"type":25,"tag":220,"props":3146,"children":3147},{"style":239},[3148],{"type":31,"value":2307},{"type":25,"tag":220,"props":3150,"children":3151},{"style":239},[3152],{"type":31,"value":2317},{"type":25,"tag":220,"props":3154,"children":3155},{"class":222,"line":467},[3156,3161,3165],{"type":25,"tag":220,"props":3157,"children":3158},{"style":227},[3159],{"type":31,"value":3160},"       2",{"type":25,"tag":220,"props":3162,"children":3163},{"style":239},[3164],{"type":31,"value":3144},{"type":25,"tag":220,"props":3166,"children":3167},{"style":239},[3168],{"type":31,"value":3169},"   2\n",{"type":25,"tag":220,"props":3171,"children":3172},{"class":222,"line":547},[3173,3178],{"type":25,"tag":220,"props":3174,"children":3175},{"style":227},[3176],{"type":31,"value":3177},"         0",{"type":25,"tag":220,"props":3179,"children":3180},{"style":239},[3181],{"type":31,"value":2419},{"type":25,"tag":34,"props":3183,"children":3184},{},[3185],{"type":31,"value":3186},"Extrapolating the values at the beginning gives us:",{"type":25,"tag":210,"props":3188,"children":3190},{"className":212,"code":3189,"language":214,"meta":7,"style":7},"'5'  10  13  16  21  30  45\n  '5'   3   3   5   9  15\n   '-2'   0   2   4   6\n      '2'   2   2   2\n        '0'   0   0\n",[3191],{"type":25,"tag":175,"props":3192,"children":3193},{"__ignoreMap":7},[3194,3226,3254,3278,3298],{"type":25,"tag":220,"props":3195,"children":3196},{"class":222,"line":223},[3197,3202,3206,3210,3214,3218,3222],{"type":25,"tag":220,"props":3198,"children":3199},{"style":227},[3200],{"type":31,"value":3201},"'5'",{"type":25,"tag":220,"props":3203,"children":3204},{"style":239},[3205],{"type":31,"value":2241},{"type":25,"tag":220,"props":3207,"children":3208},{"style":239},[3209],{"type":31,"value":3087},{"type":25,"tag":220,"props":3211,"children":3212},{"style":239},[3213],{"type":31,"value":3092},{"type":25,"tag":220,"props":3215,"children":3216},{"style":239},[3217],{"type":31,"value":2467},{"type":25,"tag":220,"props":3219,"children":3220},{"style":239},[3221],{"type":31,"value":3101},{"type":25,"tag":220,"props":3223,"children":3224},{"style":239},[3225],{"type":31,"value":3106},{"type":25,"tag":220,"props":3227,"children":3228},{"class":222,"line":308},[3229,3234,3238,3242,3246,3250],{"type":25,"tag":220,"props":3230,"children":3231},{"style":227},[3232],{"type":31,"value":3233},"  '5'",{"type":25,"tag":220,"props":3235,"children":3236},{"style":239},[3237],{"type":31,"value":2231},{"type":25,"tag":220,"props":3239,"children":3240},{"style":239},[3241],{"type":31,"value":2231},{"type":25,"tag":220,"props":3243,"children":3244},{"style":239},[3245],{"type":31,"value":2312},{"type":25,"tag":220,"props":3247,"children":3248},{"style":239},[3249],{"type":31,"value":3126},{"type":25,"tag":220,"props":3251,"children":3252},{"style":239},[3253],{"type":31,"value":3131},{"type":25,"tag":220,"props":3255,"children":3256},{"class":222,"line":388},[3257,3262,3266,3270,3274],{"type":25,"tag":220,"props":3258,"children":3259},{"style":227},[3260],{"type":31,"value":3261},"   '-2'",{"type":25,"tag":220,"props":3263,"children":3264},{"style":239},[3265],{"type":31,"value":2414},{"type":25,"tag":220,"props":3267,"children":3268},{"style":239},[3269],{"type":31,"value":3144},{"type":25,"tag":220,"props":3271,"children":3272},{"style":239},[3273],{"type":31,"value":2307},{"type":25,"tag":220,"props":3275,"children":3276},{"style":239},[3277],{"type":31,"value":2317},{"type":25,"tag":220,"props":3279,"children":3280},{"class":222,"line":467},[3281,3286,3290,3294],{"type":25,"tag":220,"props":3282,"children":3283},{"style":227},[3284],{"type":31,"value":3285},"      '2'",{"type":25,"tag":220,"props":3287,"children":3288},{"style":239},[3289],{"type":31,"value":3144},{"type":25,"tag":220,"props":3291,"children":3292},{"style":239},[3293],{"type":31,"value":3144},{"type":25,"tag":220,"props":3295,"children":3296},{"style":239},[3297],{"type":31,"value":3169},{"type":25,"tag":220,"props":3299,"children":3300},{"class":222,"line":547},[3301,3306,3310],{"type":25,"tag":220,"props":3302,"children":3303},{"style":227},[3304],{"type":31,"value":3305},"        '0'",{"type":25,"tag":220,"props":3307,"children":3308},{"style":239},[3309],{"type":31,"value":2414},{"type":25,"tag":220,"props":3311,"children":3312},{"style":239},[3313],{"type":31,"value":2419},{"type":25,"tag":703,"props":3315,"children":3317},{"id":3316},"solution-3",[3318],{"type":31,"value":708},{"type":25,"tag":34,"props":3320,"children":3321},{},[3322],{"type":31,"value":3323},"As it turns out, the solution to this problem is straightforward: instead of calculating the sum of the last digits to compute the next extrapolated value, we calculate the difference of the first digits.",{"type":25,"tag":210,"props":3325,"children":3327},{"className":819,"code":3326,"language":14,"meta":7,"style":7},"def get_diff_sum(values: list[int]) -> int:\n    \"\"\"Return the sum of the extrapolated values (backwards).\n\n    :return int: sum of extrapolated values\n    \"\"\"\n    diff = [b - a for a, b in zip(values, values[1:])]\n    while any(diff):\n        return values[0] - get_diff_sum(diff)\n    return values[0]\n\n\nif __name__ == \"__main__\":\n    with open(\"2023/day_09/input.txt\", \"r\") as file:\n        data = file.read().splitlines()\n\n    data = [[*map(int, line.split())] for line in data]\n    print(f\"Sum of the extrapolated values (backwards): {sum(map(get_diff_sum, data))}\")\n",[3328],{"type":25,"tag":175,"props":3329,"children":3330},{"__ignoreMap":7},[3331,3370,3378,3385,3392,3399,3434,3449,3470,3489,3496,3503,3526,3565,3572,3579,3618],{"type":25,"tag":220,"props":3332,"children":3333},{"class":222,"line":223},[3334,3338,3342,3346,3350,3354,3358,3362,3366],{"type":25,"tag":220,"props":3335,"children":3336},{"style":835},[3337],{"type":31,"value":1333},{"type":25,"tag":220,"props":3339,"children":3340},{"style":227},[3341],{"type":31,"value":2695},{"type":25,"tag":220,"props":3343,"children":3344},{"style":265},[3345],{"type":31,"value":854},{"type":25,"tag":220,"props":3347,"children":3348},{"style":1345},[3349],{"type":31,"value":2573},{"type":25,"tag":220,"props":3351,"children":3352},{"style":265},[3353],{"type":31,"value":2708},{"type":25,"tag":220,"props":3355,"children":3356},{"style":1102},[3357],{"type":31,"value":1105},{"type":25,"tag":220,"props":3359,"children":3360},{"style":265},[3361],{"type":31,"value":2717},{"type":25,"tag":220,"props":3363,"children":3364},{"style":1102},[3365],{"type":31,"value":1105},{"type":25,"tag":220,"props":3367,"children":3368},{"style":265},[3369],{"type":31,"value":1372},{"type":25,"tag":220,"props":3371,"children":3372},{"class":222,"line":308},[3373],{"type":25,"tag":220,"props":3374,"children":3375},{"style":233},[3376],{"type":31,"value":3377},"    \"\"\"Return the sum of the extrapolated values (backwards).\n",{"type":25,"tag":220,"props":3379,"children":3380},{"class":222,"line":388},[3381],{"type":25,"tag":220,"props":3382,"children":3383},{"emptyLinePlaceholder":1315},[3384],{"type":31,"value":1318},{"type":25,"tag":220,"props":3386,"children":3387},{"class":222,"line":467},[3388],{"type":25,"tag":220,"props":3389,"children":3390},{"style":233},[3391],{"type":31,"value":2748},{"type":25,"tag":220,"props":3393,"children":3394},{"class":222,"line":547},[3395],{"type":25,"tag":220,"props":3396,"children":3397},{"style":233},[3398],{"type":31,"value":1415},{"type":25,"tag":220,"props":3400,"children":3401},{"class":222,"line":625},[3402,3406,3410,3414,3418,3422,3426,3430],{"type":25,"tag":220,"props":3403,"children":3404},{"style":265},[3405],{"type":31,"value":2763},{"type":25,"tag":220,"props":3407,"children":3408},{"style":1113},[3409],{"type":31,"value":1116},{"type":25,"tag":220,"props":3411,"children":3412},{"style":265},[3413],{"type":31,"value":2599},{"type":25,"tag":220,"props":3415,"children":3416},{"style":1113},[3417],{"type":31,"value":1126},{"type":25,"tag":220,"props":3419,"children":3420},{"style":227},[3421],{"type":31,"value":2608},{"type":25,"tag":220,"props":3423,"children":3424},{"style":265},[3425],{"type":31,"value":2613},{"type":25,"tag":220,"props":3427,"children":3428},{"style":239},[3429],{"type":31,"value":2009},{"type":25,"tag":220,"props":3431,"children":3432},{"style":265},[3433],{"type":31,"value":2622},{"type":25,"tag":220,"props":3435,"children":3436},{"class":222,"line":1391},[3437,3441,3445],{"type":25,"tag":220,"props":3438,"children":3439},{"style":1113},[3440],{"type":31,"value":2799},{"type":25,"tag":220,"props":3442,"children":3443},{"style":227},[3444],{"type":31,"value":2804},{"type":25,"tag":220,"props":3446,"children":3447},{"style":265},[3448],{"type":31,"value":2809},{"type":25,"tag":220,"props":3450,"children":3451},{"class":222,"line":1400},[3452,3456,3461,3465],{"type":25,"tag":220,"props":3453,"children":3454},{"style":1113},[3455],{"type":31,"value":2817},{"type":25,"tag":220,"props":3457,"children":3458},{"style":265},[3459],{"type":31,"value":3460}," values[",{"type":25,"tag":220,"props":3462,"children":3463},{"style":239},[3464],{"type":31,"value":2430},{"type":25,"tag":220,"props":3466,"children":3467},{"style":265},[3468],{"type":31,"value":3469},"] - get_diff_sum(diff)\n",{"type":25,"tag":220,"props":3471,"children":3472},{"class":222,"line":1409},[3473,3477,3481,3485],{"type":25,"tag":220,"props":3474,"children":3475},{"style":1113},[3476],{"type":31,"value":1511},{"type":25,"tag":220,"props":3478,"children":3479},{"style":265},[3480],{"type":31,"value":3460},{"type":25,"tag":220,"props":3482,"children":3483},{"style":239},[3484],{"type":31,"value":2430},{"type":25,"tag":220,"props":3486,"children":3487},{"style":265},[3488],{"type":31,"value":2851},{"type":25,"tag":220,"props":3490,"children":3491},{"class":222,"line":1418},[3492],{"type":25,"tag":220,"props":3493,"children":3494},{"emptyLinePlaceholder":1315},[3495],{"type":31,"value":1318},{"type":25,"tag":220,"props":3497,"children":3498},{"class":222,"line":1427},[3499],{"type":25,"tag":220,"props":3500,"children":3501},{"emptyLinePlaceholder":1315},[3502],{"type":31,"value":1318},{"type":25,"tag":220,"props":3504,"children":3505},{"class":222,"line":1468},[3506,3510,3514,3518,3522],{"type":25,"tag":220,"props":3507,"children":3508},{"style":1113},[3509],{"type":31,"value":1553},{"type":25,"tag":220,"props":3511,"children":3512},{"style":1345},[3513],{"type":31,"value":1558},{"type":25,"tag":220,"props":3515,"children":3516},{"style":265},[3517],{"type":31,"value":1563},{"type":25,"tag":220,"props":3519,"children":3520},{"style":233},[3521],{"type":31,"value":1568},{"type":25,"tag":220,"props":3523,"children":3524},{"style":265},[3525],{"type":31,"value":1372},{"type":25,"tag":220,"props":3527,"children":3528},{"class":222,"line":1505},[3529,3533,3537,3541,3545,3549,3553,3557,3561],{"type":25,"tag":220,"props":3530,"children":3531},{"style":1113},[3532],{"type":31,"value":1581},{"type":25,"tag":220,"props":3534,"children":3535},{"style":227},[3536],{"type":31,"value":1586},{"type":25,"tag":220,"props":3538,"children":3539},{"style":265},[3540],{"type":31,"value":854},{"type":25,"tag":220,"props":3542,"children":3543},{"style":233},[3544],{"type":31,"value":2908},{"type":25,"tag":220,"props":3546,"children":3547},{"style":265},[3548],{"type":31,"value":1600},{"type":25,"tag":220,"props":3550,"children":3551},{"style":233},[3552],{"type":31,"value":1605},{"type":25,"tag":220,"props":3554,"children":3555},{"style":265},[3556],{"type":31,"value":1610},{"type":25,"tag":220,"props":3558,"children":3559},{"style":1113},[3560],{"type":31,"value":1615},{"type":25,"tag":220,"props":3562,"children":3563},{"style":265},[3564],{"type":31,"value":1620},{"type":25,"tag":220,"props":3566,"children":3567},{"class":222,"line":1531},[3568],{"type":25,"tag":220,"props":3569,"children":3570},{"style":265},[3571],{"type":31,"value":1629},{"type":25,"tag":220,"props":3573,"children":3574},{"class":222,"line":1539},[3575],{"type":25,"tag":220,"props":3576,"children":3577},{"emptyLinePlaceholder":1315},[3578],{"type":31,"value":1318},{"type":25,"tag":220,"props":3580,"children":3581},{"class":222,"line":1547},[3582,3586,3590,3594,3598,3602,3606,3610,3614],{"type":25,"tag":220,"props":3583,"children":3584},{"style":265},[3585],{"type":31,"value":2950},{"type":25,"tag":220,"props":3587,"children":3588},{"style":227},[3589],{"type":31,"value":1046},{"type":25,"tag":220,"props":3591,"children":3592},{"style":265},[3593],{"type":31,"value":854},{"type":25,"tag":220,"props":3595,"children":3596},{"style":1102},[3597],{"type":31,"value":1105},{"type":25,"tag":220,"props":3599,"children":3600},{"style":265},[3601],{"type":31,"value":2967},{"type":25,"tag":220,"props":3603,"children":3604},{"style":1113},[3605],{"type":31,"value":1116},{"type":25,"tag":220,"props":3607,"children":3608},{"style":265},[3609],{"type":31,"value":2976},{"type":25,"tag":220,"props":3611,"children":3612},{"style":1113},[3613],{"type":31,"value":1126},{"type":25,"tag":220,"props":3615,"children":3616},{"style":265},[3617],{"type":31,"value":2985},{"type":25,"tag":220,"props":3619,"children":3620},{"class":222,"line":1575},[3621,3625,3629,3633,3638,3642,3646,3650,3654,3658,3662,3666],{"type":25,"tag":220,"props":3622,"children":3623},{"style":227},[3624],{"type":31,"value":1828},{"type":25,"tag":220,"props":3626,"children":3627},{"style":265},[3628],{"type":31,"value":854},{"type":25,"tag":220,"props":3630,"children":3631},{"style":835},[3632],{"type":31,"value":1837},{"type":25,"tag":220,"props":3634,"children":3635},{"style":233},[3636],{"type":31,"value":3637},"\"Sum of the extrapolated values (backwards): ",{"type":25,"tag":220,"props":3639,"children":3640},{"style":835},[3641],{"type":31,"value":1847},{"type":25,"tag":220,"props":3643,"children":3644},{"style":227},[3645],{"type":31,"value":1792},{"type":25,"tag":220,"props":3647,"children":3648},{"style":265},[3649],{"type":31,"value":854},{"type":25,"tag":220,"props":3651,"children":3652},{"style":227},[3653],{"type":31,"value":1046},{"type":25,"tag":220,"props":3655,"children":3656},{"style":265},[3657],{"type":31,"value":3026},{"type":25,"tag":220,"props":3659,"children":3660},{"style":835},[3661],{"type":31,"value":1857},{"type":25,"tag":220,"props":3663,"children":3664},{"style":233},[3665],{"type":31,"value":1862},{"type":25,"tag":220,"props":3667,"children":3668},{"style":265},[3669],{"type":31,"value":1867},{"type":25,"tag":3671,"props":3672,"children":3673},"style",{},[3674],{"type":31,"value":3675},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":3677,"searchDepth":388,"depth":547,"links":3678},"Table of Contents",[3679,3680],{"id":28,"depth":308,"text":32},{"id":85,"depth":308,"text":88,"children":3681},[3682,3690],{"id":136,"depth":388,"text":105,"children":3683},[3684,3687],{"id":142,"depth":467,"text":145,"children":3685},[3686],{"id":705,"depth":547,"text":708},{"id":1870,"depth":467,"text":1873,"children":3688},[3689],{"id":2066,"depth":547,"text":708},{"id":2167,"depth":388,"text":113,"children":3691},[3692,3695],{"id":2172,"depth":467,"text":145,"children":3693},[3694],{"id":2547,"depth":547,"text":708},{"id":3041,"depth":467,"text":1873,"children":3696},[3697],{"id":3316,"depth":547,"text":708},"markdown","content:blog:2024:1.aoc_2023.md","content","blog/2024/1.aoc_2023.md","blog/2024/1.aoc_2023","md",1722929342531]