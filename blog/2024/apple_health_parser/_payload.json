[{"data":1,"prerenderedAt":3779},["ShallowReactive",2],{"content-query-yggzf3qBn7":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"readtime":11,"tags":12,"repo":22,"body":23,"_type":3773,"_id":3774,"_source":3775,"_file":3776,"_stem":3777,"_extension":3778},"/blog/2024/apple_health_parser","2024",false,"","Apple Health Parser","Publishing a Python package to extract, process, and analyse Apple HealthKit data","2024-07-02","11",{"language":13,"field":15,"type":19},[14],"python",[16,17,18],"data science","data visualisation","open source",[20,21],"package","tool","https://github.com/alxdrcirilo/apple-health-parser",{"type":24,"children":25,"toc":3750},"root",[26,71,78,83,90,102,111,124,130,135,144,149,159,165,176,236,242,264,283,378,395,401,428,448,468,732,787,792,837,904,1394,1409,1470,2043,2056,2095,2107,2209,2235,2240,2271,2289,2296,2301,2523,2547,2568,2980,3064,3069,3074,3142,3147,3166,3186,3213,3238,3399,3482,3488,3506,3532,3635,3641,3646,3673,3744],{"type":27,"tag":28,"props":29,"children":30},"element","p",{},[31,34,40,42,51,53,57,59,64,65],{"type":32,"value":33},"text","üì¶ ",{"type":27,"tag":35,"props":36,"children":37},"strong",{},[38],{"type":32,"value":39},"PyPI",{"type":32,"value":41},": ",{"type":27,"tag":43,"props":44,"children":48},"a",{"href":45,"rel":46},"https://pypi.org/project/apple-health-parser",[47],"nofollow",[49],{"type":32,"value":50},"https://pypi.org/project/apple-health-parser/",{"type":32,"value":52}," ",{"type":27,"tag":54,"props":55,"children":56},"br",{},[],{"type":32,"value":58},"\nüìù ",{"type":27,"tag":35,"props":60,"children":61},{},[62],{"type":32,"value":63},"Documentation",{"type":32,"value":41},{"type":27,"tag":43,"props":66,"children":69},{"href":67,"rel":68},"https://alxdrcirilo.dev/apple-health-parser",[47],[70],{"type":32,"value":67},{"type":27,"tag":72,"props":73,"children":75},"h2",{"id":74},"preface",[76],{"type":32,"value":77},"Preface",{"type":27,"tag":28,"props":79,"children":80},{},[81],{"type":32,"value":82},"I've been a happy owner of an Apple Watch for about 4 years now. I must say that I was apprehensive about acquiring one at first, but I've quickly grown to love it. I initially bought one shortly after the COVID-19 pandemic started with the intent of motivating myself to remain active. Little did I know how useful and practical it would be to own one in everyday life, in my experience. Beyond the usual health tracking features associated with smartwatches, some of the use cases of the Apple Watch that I often make use of extend to setting reminders on the fly, recording workouts, checking the weather with one quick glance, and controlling my smart home devices directy from my wrist.",{"type":27,"tag":84,"props":85,"children":87},"h3",{"id":86},"sneak-peek",[88],{"type":32,"value":89},"Sneak peek",{"type":27,"tag":28,"props":91,"children":92},{},[93,95,100],{"type":32,"value":94},"Here are some of the plots that ",{"type":27,"tag":96,"props":97,"children":98},"em",{},[99],{"type":32,"value":8},{"type":32,"value":101}," can generate:",{"type":27,"tag":28,"props":103,"children":104},{},[105],{"type":27,"tag":106,"props":107,"children":110},"img",{"alt":108,"src":109},"header","/images/2024/5.apple_health_parser/apple_health_parser.png",[],{"type":27,"tag":28,"props":112,"children":115},{"className":113},[114],"figure-caption",[116,118,122],{"type":32,"value":117},"Some plots generated with ",{"type":27,"tag":96,"props":119,"children":120},{},[121],{"type":32,"value":8},{"type":32,"value":123},".",{"type":27,"tag":84,"props":125,"children":127},{"id":126},"motivation",[128],{"type":32,"value":129},"Motivation",{"type":27,"tag":28,"props":131,"children":132},{},[133],{"type":32,"value":134},"You may ask:",{"type":27,"tag":136,"props":137,"children":138},"blockquote",{},[139],{"type":27,"tag":28,"props":140,"children":141},{},[142],{"type":32,"value":143},"\"But, why would you build a Python package when you can already visualise most metrics straight from your iPhone?\"",{"type":27,"tag":28,"props":145,"children":146},{},[147],{"type":32,"value":148},"Well, I'm a big data science nerd ü§ì I love finding new ways to visualise data. Every collection of (semi-)structured data has a story, and the fun part of data visualisation is finding a way to tell that story in a clear but memorable way.",{"type":27,"tag":72,"props":150,"children":152},{"id":151},"building-the-apple-health-parser",[153,155],{"type":32,"value":154},"Building the ",{"type":27,"tag":96,"props":156,"children":157},{},[158],{"type":32,"value":8},{"type":27,"tag":84,"props":160,"children":162},{"id":161},"purpose",[163],{"type":32,"value":164},"Purpose",{"type":27,"tag":28,"props":166,"children":167},{},[168,170,174],{"type":32,"value":169},"In a nutshell, ",{"type":27,"tag":96,"props":171,"children":172},{},[173],{"type":32,"value":8},{"type":32,"value":175}," aims to be able to perform:",{"type":27,"tag":177,"props":178,"children":179},"ul",{},[180,208,213,218],{"type":27,"tag":181,"props":182,"children":183},"li",{},[184,186,193,195],{"type":32,"value":185},"Extraction and processing of health records from ",{"type":27,"tag":43,"props":187,"children":190},{"href":188,"rel":189},"https://developer.apple.com/documentation/healthkit",[47],[191],{"type":32,"value":192},"Apple HealthKit",{"type":32,"value":194}," data",{"type":27,"tag":196,"props":197,"children":198},"sup",{},[199],{"type":27,"tag":43,"props":200,"children":205},{"href":201,"ariaDescribedBy":202,"dataFootnoteRef":7,"id":204},"#user-content-fn-1",[203],"footnote-label","user-content-fnref-1",[206],{"type":32,"value":207},"1",{"type":27,"tag":181,"props":209,"children":210},{},[211],{"type":32,"value":212},"Parsing and validation of health records",{"type":27,"tag":181,"props":214,"children":215},{},[216],{"type":32,"value":217},"Plotting (optionally interactive) health records",{"type":27,"tag":181,"props":219,"children":220},{},[221,223,234],{"type":32,"value":222},"Exporting plots and tables from the parsed health records in CSV",{"type":27,"tag":196,"props":224,"children":225},{},[226],{"type":27,"tag":43,"props":227,"children":231},{"href":228,"ariaDescribedBy":229,"dataFootnoteRef":7,"id":230},"#user-content-fn-2",[203],"user-content-fnref-2",[232],{"type":32,"value":233},"2",{"type":32,"value":235}," format",{"type":27,"tag":84,"props":237,"children":239},{"id":238},"implementation",[240],{"type":32,"value":241},"Implementation",{"type":27,"tag":28,"props":243,"children":244},{},[245,247,254,256,262],{"type":32,"value":246},"At the moment of writing of this blog post, the latest version is ",{"type":27,"tag":248,"props":249,"children":251},"code",{"className":250},[],[252],{"type":32,"value":253},"apple-health-parser==0.5.0",{"type":32,"value":255},". The design choices I will discuss herein reflect versions ",{"type":27,"tag":248,"props":257,"children":259},{"className":258},[],[260],{"type":32,"value":261},"\u003C=0.5.0",{"type":32,"value":263},", with no guarantee that they will remain in effect in future versions of the package.",{"type":27,"tag":28,"props":265,"children":266},{},[267,269,275,277,281],{"type":32,"value":268},"There are four main classes (only two are directly used by users - marked by ",{"type":27,"tag":248,"props":270,"children":272},{"className":271},[],[273],{"type":32,"value":274},"*",{"type":32,"value":276},") in ",{"type":27,"tag":96,"props":278,"children":279},{},[280],{"type":32,"value":8},{"type":32,"value":282},":",{"type":27,"tag":284,"props":285,"children":286},"ol",{},[287,311,334,356],{"type":27,"tag":181,"props":288,"children":289},{},[290,296,298,309],{"type":27,"tag":248,"props":291,"children":293},{"className":292},[],[294],{"type":32,"value":295},"Loader",{"type":32,"value":297}," (in ",{"type":27,"tag":43,"props":299,"children":302},{"href":300,"rel":301},"https://github.com/alxdrcirilo/apple-health-parser/blob/main/apple_health_parser/utils/loader.py",[47],[303],{"type":27,"tag":248,"props":304,"children":306},{"className":305},[],[307],{"type":32,"value":308},"loader.py",{"type":32,"value":310},")",{"type":27,"tag":181,"props":312,"children":313},{},[314,320,322,333],{"type":27,"tag":248,"props":315,"children":317},{"className":316},[],[318],{"type":32,"value":319},"Parser",{"type":32,"value":321},"* (in ",{"type":27,"tag":43,"props":323,"children":326},{"href":324,"rel":325},"https://github.com/alxdrcirilo/apple-health-parser/blob/main/apple_health_parser/utils/parser.py",[47],[327],{"type":27,"tag":248,"props":328,"children":330},{"className":329},[],[331],{"type":32,"value":332},"parser.py",{"type":32,"value":310},{"type":27,"tag":181,"props":335,"children":336},{},[337,343,344,355],{"type":27,"tag":248,"props":338,"children":340},{"className":339},[],[341],{"type":32,"value":342},"Preprocessor",{"type":32,"value":297},{"type":27,"tag":43,"props":345,"children":348},{"href":346,"rel":347},"https://github.com/alxdrcirilo/apple-health-parser/blob/main/apple_health_parser/utils/preprocessor.py",[47],[349],{"type":27,"tag":248,"props":350,"children":352},{"className":351},[],[353],{"type":32,"value":354},"preprocessor.py",{"type":32,"value":310},{"type":27,"tag":181,"props":357,"children":358},{},[359,365,366,377],{"type":27,"tag":248,"props":360,"children":362},{"className":361},[],[363],{"type":32,"value":364},"Plot",{"type":32,"value":321},{"type":27,"tag":43,"props":367,"children":370},{"href":368,"rel":369},"https://github.com/alxdrcirilo/apple-health-parser/blob/main/apple_health_parser/plot/plots.py",[47],[371],{"type":27,"tag":248,"props":372,"children":374},{"className":373},[],[375],{"type":32,"value":376},"plots.py",{"type":32,"value":310},{"type":27,"tag":28,"props":379,"children":380},{},[381,383,394],{"type":32,"value":382},"In addition to these main classes, a project-wide logger is defined in ",{"type":27,"tag":43,"props":384,"children":387},{"href":385,"rel":386},"https://github.com/alxdrcirilo/apple-health-parser/blob/main/apple_health_parser/utils/logging.py",[47],[388],{"type":27,"tag":248,"props":389,"children":391},{"className":390},[],[392],{"type":32,"value":393},"logging.py",{"type":32,"value":123},{"type":27,"tag":396,"props":397,"children":399},"h4",{"id":398},"loader",[400],{"type":32,"value":295},{"type":27,"tag":28,"props":402,"children":403},{},[404,406,411,413,419,421,426],{"type":32,"value":405},"The ",{"type":27,"tag":248,"props":407,"children":409},{"className":408},[],[410],{"type":32,"value":295},{"type":32,"value":412}," class encapsulates all the logic needed to extract the XML data from the ",{"type":27,"tag":248,"props":414,"children":416},{"className":415},[],[417],{"type":32,"value":418},"export.zip",{"type":32,"value":420}," generated by the ",{"type":27,"tag":35,"props":422,"children":423},{},[424],{"type":32,"value":425},"Health",{"type":32,"value":427}," app on the iPhone.",{"type":27,"tag":28,"props":429,"children":430},{},[431,433,439,441,446],{"type":32,"value":432},"Additionally, it also gets the records (i.e. health metrics) and logs some metadata (e.g. export date, birthday, etc.). All four methods in this class are actually static methods (i.e. they are decorated with ",{"type":27,"tag":248,"props":434,"children":436},{"className":435},[],[437],{"type":32,"value":438},"@staticmethod",{"type":32,"value":440},"). Although the functions could indeed have been defined in the global scope (i.e. without being defined within a class), I preferred having them within the ",{"type":27,"tag":248,"props":442,"children":444},{"className":443},[],[445],{"type":32,"value":295},{"type":32,"value":447}," class in order to logically group them under a single namespace. These methods are essentially utility functions that don't share state but are related (i.e. they are used in loading the data). In my opinion, this keeps the code more cohesive and it also avoid polluting the global scope.",{"type":27,"tag":28,"props":449,"children":450},{},[451,453,459,461,466],{"type":32,"value":452},"As a small example, here's the ",{"type":27,"tag":248,"props":454,"children":456},{"className":455},[],[457],{"type":32,"value":458},"read_xml",{"type":32,"value":460}," method of the ",{"type":27,"tag":248,"props":462,"children":464},{"className":463},[],[465],{"type":32,"value":295},{"type":32,"value":467}," class:",{"type":27,"tag":469,"props":470,"children":473},"pre",{"className":471,"code":472,"language":14,"meta":7,"style":7},"language-python shiki shiki-themes dark-plus","@staticmethod\ndef read_xml(xml_file: Path) -> list[ET.Element]:\n    \"\"\"\n    Read an XML file and return the root element.\n\n    Args:\n        xml_file (Path): Path to the XML file\n\n    Returns:\n        list[ET.Element]: List of records (ET.Element)\n    \"\"\"\n    logger.info(f\"Processing {xml_file}...\")\n    with open(xml_file, \"r\") as file:\n        root = ET.parse(file).getroot()\n        Loader._log_metadata(root)\n        return root.findall(\"Record\")\n",[474],{"type":27,"tag":248,"props":475,"children":476},{"__ignoreMap":7},[477,495,527,537,546,556,565,574,582,591,600,608,651,691,700,709],{"type":27,"tag":478,"props":479,"children":482},"span",{"class":480,"line":481},"line",1,[483,489],{"type":27,"tag":478,"props":484,"children":486},{"style":485},"--shiki-default:#DCDCAA",[487],{"type":32,"value":488},"@",{"type":27,"tag":478,"props":490,"children":492},{"style":491},"--shiki-default:#4EC9B0",[493],{"type":32,"value":494},"staticmethod\n",{"type":27,"tag":478,"props":496,"children":498},{"class":480,"line":497},2,[499,505,510,516,522],{"type":27,"tag":478,"props":500,"children":502},{"style":501},"--shiki-default:#569CD6",[503],{"type":32,"value":504},"def",{"type":27,"tag":478,"props":506,"children":507},{"style":485},[508],{"type":32,"value":509}," read_xml",{"type":27,"tag":478,"props":511,"children":513},{"style":512},"--shiki-default:#D4D4D4",[514],{"type":32,"value":515},"(",{"type":27,"tag":478,"props":517,"children":519},{"style":518},"--shiki-default:#9CDCFE",[520],{"type":32,"value":521},"xml_file",{"type":27,"tag":478,"props":523,"children":524},{"style":512},[525],{"type":32,"value":526},": Path) -> list[ET.Element]:\n",{"type":27,"tag":478,"props":528,"children":530},{"class":480,"line":529},3,[531],{"type":27,"tag":478,"props":532,"children":534},{"style":533},"--shiki-default:#CE9178",[535],{"type":32,"value":536},"    \"\"\"\n",{"type":27,"tag":478,"props":538,"children":540},{"class":480,"line":539},4,[541],{"type":27,"tag":478,"props":542,"children":543},{"style":533},[544],{"type":32,"value":545},"    Read an XML file and return the root element.\n",{"type":27,"tag":478,"props":547,"children":549},{"class":480,"line":548},5,[550],{"type":27,"tag":478,"props":551,"children":553},{"emptyLinePlaceholder":552},true,[554],{"type":32,"value":555},"\n",{"type":27,"tag":478,"props":557,"children":559},{"class":480,"line":558},6,[560],{"type":27,"tag":478,"props":561,"children":562},{"style":533},[563],{"type":32,"value":564},"    Args:\n",{"type":27,"tag":478,"props":566,"children":568},{"class":480,"line":567},7,[569],{"type":27,"tag":478,"props":570,"children":571},{"style":533},[572],{"type":32,"value":573},"        xml_file (Path): Path to the XML file\n",{"type":27,"tag":478,"props":575,"children":577},{"class":480,"line":576},8,[578],{"type":27,"tag":478,"props":579,"children":580},{"emptyLinePlaceholder":552},[581],{"type":32,"value":555},{"type":27,"tag":478,"props":583,"children":585},{"class":480,"line":584},9,[586],{"type":27,"tag":478,"props":587,"children":588},{"style":533},[589],{"type":32,"value":590},"    Returns:\n",{"type":27,"tag":478,"props":592,"children":594},{"class":480,"line":593},10,[595],{"type":27,"tag":478,"props":596,"children":597},{"style":533},[598],{"type":32,"value":599},"        list[ET.Element]: List of records (ET.Element)\n",{"type":27,"tag":478,"props":601,"children":603},{"class":480,"line":602},11,[604],{"type":27,"tag":478,"props":605,"children":606},{"style":533},[607],{"type":32,"value":536},{"type":27,"tag":478,"props":609,"children":611},{"class":480,"line":610},12,[612,617,622,627,632,636,641,646],{"type":27,"tag":478,"props":613,"children":614},{"style":512},[615],{"type":32,"value":616},"    logger.info(",{"type":27,"tag":478,"props":618,"children":619},{"style":501},[620],{"type":32,"value":621},"f",{"type":27,"tag":478,"props":623,"children":624},{"style":533},[625],{"type":32,"value":626},"\"Processing ",{"type":27,"tag":478,"props":628,"children":629},{"style":501},[630],{"type":32,"value":631},"{",{"type":27,"tag":478,"props":633,"children":634},{"style":512},[635],{"type":32,"value":521},{"type":27,"tag":478,"props":637,"children":638},{"style":501},[639],{"type":32,"value":640},"}",{"type":27,"tag":478,"props":642,"children":643},{"style":533},[644],{"type":32,"value":645},"...\"",{"type":27,"tag":478,"props":647,"children":648},{"style":512},[649],{"type":32,"value":650},")\n",{"type":27,"tag":478,"props":652,"children":654},{"class":480,"line":653},13,[655,661,666,671,676,681,686],{"type":27,"tag":478,"props":656,"children":658},{"style":657},"--shiki-default:#C586C0",[659],{"type":32,"value":660},"    with",{"type":27,"tag":478,"props":662,"children":663},{"style":485},[664],{"type":32,"value":665}," open",{"type":27,"tag":478,"props":667,"children":668},{"style":512},[669],{"type":32,"value":670},"(xml_file, ",{"type":27,"tag":478,"props":672,"children":673},{"style":533},[674],{"type":32,"value":675},"\"r\"",{"type":27,"tag":478,"props":677,"children":678},{"style":512},[679],{"type":32,"value":680},") ",{"type":27,"tag":478,"props":682,"children":683},{"style":657},[684],{"type":32,"value":685},"as",{"type":27,"tag":478,"props":687,"children":688},{"style":512},[689],{"type":32,"value":690}," file:\n",{"type":27,"tag":478,"props":692,"children":694},{"class":480,"line":693},14,[695],{"type":27,"tag":478,"props":696,"children":697},{"style":512},[698],{"type":32,"value":699},"        root = ET.parse(file).getroot()\n",{"type":27,"tag":478,"props":701,"children":703},{"class":480,"line":702},15,[704],{"type":27,"tag":478,"props":705,"children":706},{"style":512},[707],{"type":32,"value":708},"        Loader._log_metadata(root)\n",{"type":27,"tag":478,"props":710,"children":712},{"class":480,"line":711},16,[713,718,723,728],{"type":27,"tag":478,"props":714,"children":715},{"style":657},[716],{"type":32,"value":717},"        return",{"type":27,"tag":478,"props":719,"children":720},{"style":512},[721],{"type":32,"value":722}," root.findall(",{"type":27,"tag":478,"props":724,"children":725},{"style":533},[726],{"type":32,"value":727},"\"Record\"",{"type":27,"tag":478,"props":729,"children":730},{"style":512},[731],{"type":32,"value":650},{"type":27,"tag":28,"props":733,"children":734},{},[735,737,748,750,755,757,763,765,770,772,778,780,785],{"type":32,"value":736},"This method is responsible for reading an XML file and returning a list of records as ",{"type":27,"tag":43,"props":738,"children":741},{"href":739,"rel":740},"https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element",[47],[742],{"type":27,"tag":248,"props":743,"children":745},{"className":744},[],[746],{"type":32,"value":747},"ET.Element",{"type":32,"value":749}," objects. The method takes a single argument ",{"type":27,"tag":248,"props":751,"children":753},{"className":752},[],[754],{"type":32,"value":521},{"type":32,"value":756},", which is the path to the Apple Health XML file (i.e. ",{"type":27,"tag":248,"props":758,"children":760},{"className":759},[],[761],{"type":32,"value":762},"export.xml",{"type":32,"value":764},"). The method begins by logging a message indicating the file being processed. It then opens the file (in read-mode - ",{"type":27,"tag":248,"props":766,"children":768},{"className":767},[],[769],{"type":32,"value":675},{"type":32,"value":771},") and reads its contents. It then gets the root element of the XML tree, logs some metadata by calling the private method ",{"type":27,"tag":248,"props":773,"children":775},{"className":774},[],[776],{"type":32,"value":777},"_log_metadata",{"type":32,"value":779}," (i.e. locale, export data, and user metadata), and lastly, it returns a list of ",{"type":27,"tag":248,"props":781,"children":783},{"className":782},[],[784],{"type":32,"value":747},{"type":32,"value":786}," objects representing the records (i.e. elements with a tag name \"Record\") in the XML file.",{"type":27,"tag":396,"props":788,"children":790},{"id":789},"parser",[791],{"type":32,"value":319},{"type":27,"tag":28,"props":793,"children":794},{},[795,796,801,803,807,809,814,816,821,823,828,830,835],{"type":32,"value":405},{"type":27,"tag":248,"props":797,"children":799},{"className":798},[],[800],{"type":32,"value":319},{"type":32,"value":802}," class is the bread and butter of the ",{"type":27,"tag":96,"props":804,"children":805},{},[806],{"type":32,"value":8},{"type":32,"value":808}," package. It is designed to parse the Apple Health export XML file. It inherits from the ",{"type":27,"tag":248,"props":810,"children":812},{"className":811},[],[813],{"type":32,"value":295},{"type":32,"value":815}," class, meaning that the end-user will never have to directly interact with the ",{"type":27,"tag":248,"props":817,"children":819},{"className":818},[],[820],{"type":32,"value":295},{"type":32,"value":822}," class as the ",{"type":27,"tag":248,"props":824,"children":826},{"className":825},[],[827],{"type":32,"value":319},{"type":32,"value":829}," class will already internally call the appropriate methods to extract the records from the ",{"type":27,"tag":248,"props":831,"children":833},{"className":832},[],[834],{"type":32,"value":418},{"type":32,"value":836}," file.",{"type":27,"tag":28,"props":838,"children":839},{},[840,842,847,849,855,857,863,865,872,874,880,882,887,889,895,897,903],{"type":32,"value":841},"There are a couple of important methods defined in ",{"type":27,"tag":248,"props":843,"children":845},{"className":844},[],[846],{"type":32,"value":319},{"type":32,"value":848},", the most relevant one being the ",{"type":27,"tag":248,"props":850,"children":852},{"className":851},[],[853],{"type":32,"value":854},"get_flag_records",{"type":32,"value":856}," method. In essence, this function requires a flag or list of flags - health metric(s) (e.g. ",{"type":27,"tag":248,"props":858,"children":860},{"className":859},[],[861],{"type":32,"value":862},"HKQuantityTypeIdentifierHeartRate",{"type":32,"value":864}," represents heart rate records; ",{"type":27,"tag":43,"props":866,"children":869},{"href":867,"rel":868},"https://alxdrcirilo.dev/apple-health-parser/usage/flags",[47],[870],{"type":32,"value":871},"table of supported flags",{"type":32,"value":873},"), and it will return a ",{"type":27,"tag":248,"props":875,"children":877},{"className":876},[],[878],{"type":32,"value":879},"ParsedData",{"type":32,"value":881}," object (or dictionary with keys as flags and values as ",{"type":27,"tag":248,"props":883,"children":885},{"className":884},[],[886],{"type":32,"value":879},{"type":32,"value":888}," objects). Furthermore, the function is decorated with a ",{"type":27,"tag":248,"props":890,"children":892},{"className":891},[],[893],{"type":32,"value":894},"@timeit",{"type":32,"value":896}," decorator that will just print the execution time of the function to ",{"type":27,"tag":248,"props":898,"children":900},{"className":899},[],[901],{"type":32,"value":902},"stdout",{"type":32,"value":123},{"type":27,"tag":469,"props":905,"children":907},{"className":471,"code":906,"language":14,"meta":7,"style":7},"@timeit\ndef get_flag_records(\n    self, flag: str | list[str]\n) -> ParsedData | dict[str, ParsedData]:\n    \"\"\"\n    Get parsed data based on the given flag.\n\n    Args:\n        flag (str | list[str]): Flag to parse the records (e.g., `\"HKQuantityTypeIdentifierHeartRate\"`)\n\n    Returns:\n        ParsedData | dict[str, ParsedData]: Parsed data based on the flag(s)\n    \"\"\"\n\n    def _get_parsed_data(flag: str) -> ParsedData:\n        sources = self.get_sources(flag=flag)\n        models = self._build_models(flag=flag)\n        dates = self._get_dates(models=models)\n        records = pd.DataFrame([model.model_dump() for model in models])\n        return ParsedData(flag=flag, sources=sources, dates=dates, records=records)\n\n    if isinstance(flag, str):\n        return _get_parsed_data(flag=flag)\n\n    elif isinstance(flag, list):\n        return {f: _get_parsed_data(flag=f) for f in flag}\n",[908],{"type":27,"tag":248,"props":909,"children":910},{"__ignoreMap":7},[911,919,936,977,994,1001,1009,1016,1023,1031,1038,1045,1053,1060,1067,1101,1128,1154,1182,1211,1263,1271,1299,1320,1328,1354],{"type":27,"tag":478,"props":912,"children":913},{"class":480,"line":481},[914],{"type":27,"tag":478,"props":915,"children":916},{"style":485},[917],{"type":32,"value":918},"@timeit\n",{"type":27,"tag":478,"props":920,"children":921},{"class":480,"line":497},[922,926,931],{"type":27,"tag":478,"props":923,"children":924},{"style":501},[925],{"type":32,"value":504},{"type":27,"tag":478,"props":927,"children":928},{"style":485},[929],{"type":32,"value":930}," get_flag_records",{"type":27,"tag":478,"props":932,"children":933},{"style":512},[934],{"type":32,"value":935},"(\n",{"type":27,"tag":478,"props":937,"children":938},{"class":480,"line":529},[939,944,949,954,958,963,968,972],{"type":27,"tag":478,"props":940,"children":941},{"style":518},[942],{"type":32,"value":943},"    self",{"type":27,"tag":478,"props":945,"children":946},{"style":512},[947],{"type":32,"value":948},", ",{"type":27,"tag":478,"props":950,"children":951},{"style":518},[952],{"type":32,"value":953},"flag",{"type":27,"tag":478,"props":955,"children":956},{"style":512},[957],{"type":32,"value":41},{"type":27,"tag":478,"props":959,"children":960},{"style":491},[961],{"type":32,"value":962},"str",{"type":27,"tag":478,"props":964,"children":965},{"style":512},[966],{"type":32,"value":967}," | list[",{"type":27,"tag":478,"props":969,"children":970},{"style":491},[971],{"type":32,"value":962},{"type":27,"tag":478,"props":973,"children":974},{"style":512},[975],{"type":32,"value":976},"]\n",{"type":27,"tag":478,"props":978,"children":979},{"class":480,"line":539},[980,985,989],{"type":27,"tag":478,"props":981,"children":982},{"style":512},[983],{"type":32,"value":984},") -> ParsedData | dict[",{"type":27,"tag":478,"props":986,"children":987},{"style":491},[988],{"type":32,"value":962},{"type":27,"tag":478,"props":990,"children":991},{"style":512},[992],{"type":32,"value":993},", ParsedData]:\n",{"type":27,"tag":478,"props":995,"children":996},{"class":480,"line":548},[997],{"type":27,"tag":478,"props":998,"children":999},{"style":533},[1000],{"type":32,"value":536},{"type":27,"tag":478,"props":1002,"children":1003},{"class":480,"line":558},[1004],{"type":27,"tag":478,"props":1005,"children":1006},{"style":533},[1007],{"type":32,"value":1008},"    Get parsed data based on the given flag.\n",{"type":27,"tag":478,"props":1010,"children":1011},{"class":480,"line":567},[1012],{"type":27,"tag":478,"props":1013,"children":1014},{"emptyLinePlaceholder":552},[1015],{"type":32,"value":555},{"type":27,"tag":478,"props":1017,"children":1018},{"class":480,"line":576},[1019],{"type":27,"tag":478,"props":1020,"children":1021},{"style":533},[1022],{"type":32,"value":564},{"type":27,"tag":478,"props":1024,"children":1025},{"class":480,"line":584},[1026],{"type":27,"tag":478,"props":1027,"children":1028},{"style":533},[1029],{"type":32,"value":1030},"        flag (str | list[str]): Flag to parse the records (e.g., `\"HKQuantityTypeIdentifierHeartRate\"`)\n",{"type":27,"tag":478,"props":1032,"children":1033},{"class":480,"line":593},[1034],{"type":27,"tag":478,"props":1035,"children":1036},{"emptyLinePlaceholder":552},[1037],{"type":32,"value":555},{"type":27,"tag":478,"props":1039,"children":1040},{"class":480,"line":602},[1041],{"type":27,"tag":478,"props":1042,"children":1043},{"style":533},[1044],{"type":32,"value":590},{"type":27,"tag":478,"props":1046,"children":1047},{"class":480,"line":610},[1048],{"type":27,"tag":478,"props":1049,"children":1050},{"style":533},[1051],{"type":32,"value":1052},"        ParsedData | dict[str, ParsedData]: Parsed data based on the flag(s)\n",{"type":27,"tag":478,"props":1054,"children":1055},{"class":480,"line":653},[1056],{"type":27,"tag":478,"props":1057,"children":1058},{"style":533},[1059],{"type":32,"value":536},{"type":27,"tag":478,"props":1061,"children":1062},{"class":480,"line":693},[1063],{"type":27,"tag":478,"props":1064,"children":1065},{"emptyLinePlaceholder":552},[1066],{"type":32,"value":555},{"type":27,"tag":478,"props":1068,"children":1069},{"class":480,"line":702},[1070,1075,1080,1084,1088,1092,1096],{"type":27,"tag":478,"props":1071,"children":1072},{"style":501},[1073],{"type":32,"value":1074},"    def",{"type":27,"tag":478,"props":1076,"children":1077},{"style":485},[1078],{"type":32,"value":1079}," _get_parsed_data",{"type":27,"tag":478,"props":1081,"children":1082},{"style":512},[1083],{"type":32,"value":515},{"type":27,"tag":478,"props":1085,"children":1086},{"style":518},[1087],{"type":32,"value":953},{"type":27,"tag":478,"props":1089,"children":1090},{"style":512},[1091],{"type":32,"value":41},{"type":27,"tag":478,"props":1093,"children":1094},{"style":491},[1095],{"type":32,"value":962},{"type":27,"tag":478,"props":1097,"children":1098},{"style":512},[1099],{"type":32,"value":1100},") -> ParsedData:\n",{"type":27,"tag":478,"props":1102,"children":1103},{"class":480,"line":711},[1104,1109,1114,1119,1123],{"type":27,"tag":478,"props":1105,"children":1106},{"style":512},[1107],{"type":32,"value":1108},"        sources = ",{"type":27,"tag":478,"props":1110,"children":1111},{"style":501},[1112],{"type":32,"value":1113},"self",{"type":27,"tag":478,"props":1115,"children":1116},{"style":512},[1117],{"type":32,"value":1118},".get_sources(",{"type":27,"tag":478,"props":1120,"children":1121},{"style":518},[1122],{"type":32,"value":953},{"type":27,"tag":478,"props":1124,"children":1125},{"style":512},[1126],{"type":32,"value":1127},"=flag)\n",{"type":27,"tag":478,"props":1129,"children":1131},{"class":480,"line":1130},17,[1132,1137,1141,1146,1150],{"type":27,"tag":478,"props":1133,"children":1134},{"style":512},[1135],{"type":32,"value":1136},"        models = ",{"type":27,"tag":478,"props":1138,"children":1139},{"style":501},[1140],{"type":32,"value":1113},{"type":27,"tag":478,"props":1142,"children":1143},{"style":512},[1144],{"type":32,"value":1145},"._build_models(",{"type":27,"tag":478,"props":1147,"children":1148},{"style":518},[1149],{"type":32,"value":953},{"type":27,"tag":478,"props":1151,"children":1152},{"style":512},[1153],{"type":32,"value":1127},{"type":27,"tag":478,"props":1155,"children":1157},{"class":480,"line":1156},18,[1158,1163,1167,1172,1177],{"type":27,"tag":478,"props":1159,"children":1160},{"style":512},[1161],{"type":32,"value":1162},"        dates = ",{"type":27,"tag":478,"props":1164,"children":1165},{"style":501},[1166],{"type":32,"value":1113},{"type":27,"tag":478,"props":1168,"children":1169},{"style":512},[1170],{"type":32,"value":1171},"._get_dates(",{"type":27,"tag":478,"props":1173,"children":1174},{"style":518},[1175],{"type":32,"value":1176},"models",{"type":27,"tag":478,"props":1178,"children":1179},{"style":512},[1180],{"type":32,"value":1181},"=models)\n",{"type":27,"tag":478,"props":1183,"children":1185},{"class":480,"line":1184},19,[1186,1191,1196,1201,1206],{"type":27,"tag":478,"props":1187,"children":1188},{"style":512},[1189],{"type":32,"value":1190},"        records = pd.DataFrame([model.model_dump() ",{"type":27,"tag":478,"props":1192,"children":1193},{"style":657},[1194],{"type":32,"value":1195},"for",{"type":27,"tag":478,"props":1197,"children":1198},{"style":512},[1199],{"type":32,"value":1200}," model ",{"type":27,"tag":478,"props":1202,"children":1203},{"style":657},[1204],{"type":32,"value":1205},"in",{"type":27,"tag":478,"props":1207,"children":1208},{"style":512},[1209],{"type":32,"value":1210}," models])\n",{"type":27,"tag":478,"props":1212,"children":1214},{"class":480,"line":1213},20,[1215,1219,1224,1228,1233,1238,1243,1248,1253,1258],{"type":27,"tag":478,"props":1216,"children":1217},{"style":657},[1218],{"type":32,"value":717},{"type":27,"tag":478,"props":1220,"children":1221},{"style":512},[1222],{"type":32,"value":1223}," ParsedData(",{"type":27,"tag":478,"props":1225,"children":1226},{"style":518},[1227],{"type":32,"value":953},{"type":27,"tag":478,"props":1229,"children":1230},{"style":512},[1231],{"type":32,"value":1232},"=flag, ",{"type":27,"tag":478,"props":1234,"children":1235},{"style":518},[1236],{"type":32,"value":1237},"sources",{"type":27,"tag":478,"props":1239,"children":1240},{"style":512},[1241],{"type":32,"value":1242},"=sources, ",{"type":27,"tag":478,"props":1244,"children":1245},{"style":518},[1246],{"type":32,"value":1247},"dates",{"type":27,"tag":478,"props":1249,"children":1250},{"style":512},[1251],{"type":32,"value":1252},"=dates, ",{"type":27,"tag":478,"props":1254,"children":1255},{"style":518},[1256],{"type":32,"value":1257},"records",{"type":27,"tag":478,"props":1259,"children":1260},{"style":512},[1261],{"type":32,"value":1262},"=records)\n",{"type":27,"tag":478,"props":1264,"children":1266},{"class":480,"line":1265},21,[1267],{"type":27,"tag":478,"props":1268,"children":1269},{"emptyLinePlaceholder":552},[1270],{"type":32,"value":555},{"type":27,"tag":478,"props":1272,"children":1274},{"class":480,"line":1273},22,[1275,1280,1285,1290,1294],{"type":27,"tag":478,"props":1276,"children":1277},{"style":657},[1278],{"type":32,"value":1279},"    if",{"type":27,"tag":478,"props":1281,"children":1282},{"style":485},[1283],{"type":32,"value":1284}," isinstance",{"type":27,"tag":478,"props":1286,"children":1287},{"style":512},[1288],{"type":32,"value":1289},"(flag, ",{"type":27,"tag":478,"props":1291,"children":1292},{"style":491},[1293],{"type":32,"value":962},{"type":27,"tag":478,"props":1295,"children":1296},{"style":512},[1297],{"type":32,"value":1298},"):\n",{"type":27,"tag":478,"props":1300,"children":1302},{"class":480,"line":1301},23,[1303,1307,1312,1316],{"type":27,"tag":478,"props":1304,"children":1305},{"style":657},[1306],{"type":32,"value":717},{"type":27,"tag":478,"props":1308,"children":1309},{"style":512},[1310],{"type":32,"value":1311}," _get_parsed_data(",{"type":27,"tag":478,"props":1313,"children":1314},{"style":518},[1315],{"type":32,"value":953},{"type":27,"tag":478,"props":1317,"children":1318},{"style":512},[1319],{"type":32,"value":1127},{"type":27,"tag":478,"props":1321,"children":1323},{"class":480,"line":1322},24,[1324],{"type":27,"tag":478,"props":1325,"children":1326},{"emptyLinePlaceholder":552},[1327],{"type":32,"value":555},{"type":27,"tag":478,"props":1329,"children":1331},{"class":480,"line":1330},25,[1332,1337,1341,1345,1350],{"type":27,"tag":478,"props":1333,"children":1334},{"style":657},[1335],{"type":32,"value":1336},"    elif",{"type":27,"tag":478,"props":1338,"children":1339},{"style":485},[1340],{"type":32,"value":1284},{"type":27,"tag":478,"props":1342,"children":1343},{"style":512},[1344],{"type":32,"value":1289},{"type":27,"tag":478,"props":1346,"children":1347},{"style":491},[1348],{"type":32,"value":1349},"list",{"type":27,"tag":478,"props":1351,"children":1352},{"style":512},[1353],{"type":32,"value":1298},{"type":27,"tag":478,"props":1355,"children":1357},{"class":480,"line":1356},26,[1358,1362,1367,1371,1376,1380,1385,1389],{"type":27,"tag":478,"props":1359,"children":1360},{"style":657},[1361],{"type":32,"value":717},{"type":27,"tag":478,"props":1363,"children":1364},{"style":512},[1365],{"type":32,"value":1366}," {f: _get_parsed_data(",{"type":27,"tag":478,"props":1368,"children":1369},{"style":518},[1370],{"type":32,"value":953},{"type":27,"tag":478,"props":1372,"children":1373},{"style":512},[1374],{"type":32,"value":1375},"=f) ",{"type":27,"tag":478,"props":1377,"children":1378},{"style":657},[1379],{"type":32,"value":1195},{"type":27,"tag":478,"props":1381,"children":1382},{"style":512},[1383],{"type":32,"value":1384}," f ",{"type":27,"tag":478,"props":1386,"children":1387},{"style":657},[1388],{"type":32,"value":1205},{"type":27,"tag":478,"props":1390,"children":1391},{"style":512},[1392],{"type":32,"value":1393}," flag}\n",{"type":27,"tag":136,"props":1395,"children":1396},{},[1397],{"type":27,"tag":28,"props":1398,"children":1399},{},[1400,1402,1407],{"type":32,"value":1401},"\"What is the ",{"type":27,"tag":248,"props":1403,"children":1405},{"className":1404},[],[1406],{"type":32,"value":879},{"type":32,"value":1408}," object?\"",{"type":27,"tag":28,"props":1410,"children":1411},{},[1412,1413,1418,1420,1425,1427,1433,1435,1440,1441,1447,1448,1453,1455,1461,1463,1468],{"type":32,"value":405},{"type":27,"tag":248,"props":1414,"children":1416},{"className":1415},[],[1417],{"type":32,"value":879},{"type":32,"value":1419}," object is a dataclass in Python designed to store parsed data from the Apple Health export file. It contains four fields: ",{"type":27,"tag":248,"props":1421,"children":1423},{"className":1422},[],[1424],{"type":32,"value":953},{"type":32,"value":1426}," (e.g. ",{"type":27,"tag":248,"props":1428,"children":1430},{"className":1429},[],[1431],{"type":32,"value":1432},"\"HKQuantityTypeIdentifierHeartRate\"",{"type":32,"value":1434},"), ",{"type":27,"tag":248,"props":1436,"children":1438},{"className":1437},[],[1439],{"type":32,"value":1237},{"type":32,"value":1426},{"type":27,"tag":248,"props":1442,"children":1444},{"className":1443},[],[1445],{"type":32,"value":1446},"\"Alexandre's Apple Watch\"",{"type":32,"value":1434},{"type":27,"tag":248,"props":1449,"children":1451},{"className":1450},[],[1452],{"type":32,"value":1247},{"type":32,"value":1454}," (set of ",{"type":27,"tag":248,"props":1456,"children":1458},{"className":1457},[],[1459],{"type":32,"value":1460},"datetime.date",{"type":32,"value":1462},"), and ",{"type":27,"tag":248,"props":1464,"children":1466},{"className":1465},[],[1467],{"type":32,"value":1257},{"type":32,"value":1469}," (pandas DataFrame containing the actual records of the parsed data).",{"type":27,"tag":469,"props":1471,"children":1473},{"className":471,"code":1472,"language":14,"meta":7,"style":7},"@dataclass\nclass ParsedData:\n    \"\"\"\n    Dataclass to store parsed data from the Apple Health export file.\n    \"\"\"\n\n    flag: str\n    sources: list[str]\n    dates: set[date]\n    records: pd.DataFrame\n\n    def __str__(self) -> str:\n        \"\"\"\n        String representation of the ParsedData class.\n        Includes the flag, sources, dates, and number of records.\n\n        Returns:\n            str: String representation of the ParsedData class\n        \"\"\"\n\n        description = [\n            f\"{'Flag:':\u003C12}{self.flag}\",\n            f\"{'Sources:':\u003C12}{len(self.sources)} sources\",\n            f\"{'Dates:':\u003C12}{len(self.dates)} dates\",\n            f\"{'Records:':\u003C12}{len(self.records)} records\",\n        ]\n\n        max_len = len(max(description, key=len))\n        description = [f\"{'ParsedData':=^{max_len}}\"] + description\n\n        return \"\\n\".join(description)\n",[1474],{"type":27,"tag":248,"props":1475,"children":1476},{"__ignoreMap":7},[1477,1485,1503,1510,1518,1525,1532,1545,1561,1569,1577,1584,1617,1625,1633,1641,1648,1656,1664,1671,1678,1686,1731,1787,1841,1895,1903,1911,1957,2007,2015],{"type":27,"tag":478,"props":1478,"children":1479},{"class":480,"line":481},[1480],{"type":27,"tag":478,"props":1481,"children":1482},{"style":485},[1483],{"type":32,"value":1484},"@dataclass\n",{"type":27,"tag":478,"props":1486,"children":1487},{"class":480,"line":497},[1488,1493,1498],{"type":27,"tag":478,"props":1489,"children":1490},{"style":501},[1491],{"type":32,"value":1492},"class",{"type":27,"tag":478,"props":1494,"children":1495},{"style":491},[1496],{"type":32,"value":1497}," ParsedData",{"type":27,"tag":478,"props":1499,"children":1500},{"style":512},[1501],{"type":32,"value":1502},":\n",{"type":27,"tag":478,"props":1504,"children":1505},{"class":480,"line":529},[1506],{"type":27,"tag":478,"props":1507,"children":1508},{"style":533},[1509],{"type":32,"value":536},{"type":27,"tag":478,"props":1511,"children":1512},{"class":480,"line":539},[1513],{"type":27,"tag":478,"props":1514,"children":1515},{"style":533},[1516],{"type":32,"value":1517},"    Dataclass to store parsed data from the Apple Health export file.\n",{"type":27,"tag":478,"props":1519,"children":1520},{"class":480,"line":548},[1521],{"type":27,"tag":478,"props":1522,"children":1523},{"style":533},[1524],{"type":32,"value":536},{"type":27,"tag":478,"props":1526,"children":1527},{"class":480,"line":558},[1528],{"type":27,"tag":478,"props":1529,"children":1530},{"emptyLinePlaceholder":552},[1531],{"type":32,"value":555},{"type":27,"tag":478,"props":1533,"children":1534},{"class":480,"line":567},[1535,1540],{"type":27,"tag":478,"props":1536,"children":1537},{"style":512},[1538],{"type":32,"value":1539},"    flag: ",{"type":27,"tag":478,"props":1541,"children":1542},{"style":491},[1543],{"type":32,"value":1544},"str\n",{"type":27,"tag":478,"props":1546,"children":1547},{"class":480,"line":576},[1548,1553,1557],{"type":27,"tag":478,"props":1549,"children":1550},{"style":512},[1551],{"type":32,"value":1552},"    sources: list[",{"type":27,"tag":478,"props":1554,"children":1555},{"style":491},[1556],{"type":32,"value":962},{"type":27,"tag":478,"props":1558,"children":1559},{"style":512},[1560],{"type":32,"value":976},{"type":27,"tag":478,"props":1562,"children":1563},{"class":480,"line":584},[1564],{"type":27,"tag":478,"props":1565,"children":1566},{"style":512},[1567],{"type":32,"value":1568},"    dates: set[date]\n",{"type":27,"tag":478,"props":1570,"children":1571},{"class":480,"line":593},[1572],{"type":27,"tag":478,"props":1573,"children":1574},{"style":512},[1575],{"type":32,"value":1576},"    records: pd.DataFrame\n",{"type":27,"tag":478,"props":1578,"children":1579},{"class":480,"line":602},[1580],{"type":27,"tag":478,"props":1581,"children":1582},{"emptyLinePlaceholder":552},[1583],{"type":32,"value":555},{"type":27,"tag":478,"props":1585,"children":1586},{"class":480,"line":610},[1587,1591,1596,1600,1604,1609,1613],{"type":27,"tag":478,"props":1588,"children":1589},{"style":501},[1590],{"type":32,"value":1074},{"type":27,"tag":478,"props":1592,"children":1593},{"style":485},[1594],{"type":32,"value":1595}," __str__",{"type":27,"tag":478,"props":1597,"children":1598},{"style":512},[1599],{"type":32,"value":515},{"type":27,"tag":478,"props":1601,"children":1602},{"style":518},[1603],{"type":32,"value":1113},{"type":27,"tag":478,"props":1605,"children":1606},{"style":512},[1607],{"type":32,"value":1608},") -> ",{"type":27,"tag":478,"props":1610,"children":1611},{"style":491},[1612],{"type":32,"value":962},{"type":27,"tag":478,"props":1614,"children":1615},{"style":512},[1616],{"type":32,"value":1502},{"type":27,"tag":478,"props":1618,"children":1619},{"class":480,"line":653},[1620],{"type":27,"tag":478,"props":1621,"children":1622},{"style":533},[1623],{"type":32,"value":1624},"        \"\"\"\n",{"type":27,"tag":478,"props":1626,"children":1627},{"class":480,"line":693},[1628],{"type":27,"tag":478,"props":1629,"children":1630},{"style":533},[1631],{"type":32,"value":1632},"        String representation of the ParsedData class.\n",{"type":27,"tag":478,"props":1634,"children":1635},{"class":480,"line":702},[1636],{"type":27,"tag":478,"props":1637,"children":1638},{"style":533},[1639],{"type":32,"value":1640},"        Includes the flag, sources, dates, and number of records.\n",{"type":27,"tag":478,"props":1642,"children":1643},{"class":480,"line":711},[1644],{"type":27,"tag":478,"props":1645,"children":1646},{"emptyLinePlaceholder":552},[1647],{"type":32,"value":555},{"type":27,"tag":478,"props":1649,"children":1650},{"class":480,"line":1130},[1651],{"type":27,"tag":478,"props":1652,"children":1653},{"style":533},[1654],{"type":32,"value":1655},"        Returns:\n",{"type":27,"tag":478,"props":1657,"children":1658},{"class":480,"line":1156},[1659],{"type":27,"tag":478,"props":1660,"children":1661},{"style":533},[1662],{"type":32,"value":1663},"            str: String representation of the ParsedData class\n",{"type":27,"tag":478,"props":1665,"children":1666},{"class":480,"line":1184},[1667],{"type":27,"tag":478,"props":1668,"children":1669},{"style":533},[1670],{"type":32,"value":1624},{"type":27,"tag":478,"props":1672,"children":1673},{"class":480,"line":1213},[1674],{"type":27,"tag":478,"props":1675,"children":1676},{"emptyLinePlaceholder":552},[1677],{"type":32,"value":555},{"type":27,"tag":478,"props":1679,"children":1680},{"class":480,"line":1265},[1681],{"type":27,"tag":478,"props":1682,"children":1683},{"style":512},[1684],{"type":32,"value":1685},"        description = [\n",{"type":27,"tag":478,"props":1687,"children":1688},{"class":480,"line":1273},[1689,1694,1699,1703,1708,1713,1718,1722,1726],{"type":27,"tag":478,"props":1690,"children":1691},{"style":501},[1692],{"type":32,"value":1693},"            f",{"type":27,"tag":478,"props":1695,"children":1696},{"style":533},[1697],{"type":32,"value":1698},"\"",{"type":27,"tag":478,"props":1700,"children":1701},{"style":501},[1702],{"type":32,"value":631},{"type":27,"tag":478,"props":1704,"children":1705},{"style":533},[1706],{"type":32,"value":1707},"'Flag:'",{"type":27,"tag":478,"props":1709,"children":1710},{"style":501},[1711],{"type":32,"value":1712},":\u003C12}{self",{"type":27,"tag":478,"props":1714,"children":1715},{"style":512},[1716],{"type":32,"value":1717},".flag",{"type":27,"tag":478,"props":1719,"children":1720},{"style":501},[1721],{"type":32,"value":640},{"type":27,"tag":478,"props":1723,"children":1724},{"style":533},[1725],{"type":32,"value":1698},{"type":27,"tag":478,"props":1727,"children":1728},{"style":512},[1729],{"type":32,"value":1730},",\n",{"type":27,"tag":478,"props":1732,"children":1733},{"class":480,"line":1301},[1734,1738,1742,1746,1751,1756,1761,1765,1769,1774,1778,1783],{"type":27,"tag":478,"props":1735,"children":1736},{"style":501},[1737],{"type":32,"value":1693},{"type":27,"tag":478,"props":1739,"children":1740},{"style":533},[1741],{"type":32,"value":1698},{"type":27,"tag":478,"props":1743,"children":1744},{"style":501},[1745],{"type":32,"value":631},{"type":27,"tag":478,"props":1747,"children":1748},{"style":533},[1749],{"type":32,"value":1750},"'Sources:'",{"type":27,"tag":478,"props":1752,"children":1753},{"style":501},[1754],{"type":32,"value":1755},":\u003C12}{",{"type":27,"tag":478,"props":1757,"children":1758},{"style":485},[1759],{"type":32,"value":1760},"len",{"type":27,"tag":478,"props":1762,"children":1763},{"style":512},[1764],{"type":32,"value":515},{"type":27,"tag":478,"props":1766,"children":1767},{"style":501},[1768],{"type":32,"value":1113},{"type":27,"tag":478,"props":1770,"children":1771},{"style":512},[1772],{"type":32,"value":1773},".sources)",{"type":27,"tag":478,"props":1775,"children":1776},{"style":501},[1777],{"type":32,"value":640},{"type":27,"tag":478,"props":1779,"children":1780},{"style":533},[1781],{"type":32,"value":1782}," sources\"",{"type":27,"tag":478,"props":1784,"children":1785},{"style":512},[1786],{"type":32,"value":1730},{"type":27,"tag":478,"props":1788,"children":1789},{"class":480,"line":1322},[1790,1794,1798,1802,1807,1811,1815,1819,1823,1828,1832,1837],{"type":27,"tag":478,"props":1791,"children":1792},{"style":501},[1793],{"type":32,"value":1693},{"type":27,"tag":478,"props":1795,"children":1796},{"style":533},[1797],{"type":32,"value":1698},{"type":27,"tag":478,"props":1799,"children":1800},{"style":501},[1801],{"type":32,"value":631},{"type":27,"tag":478,"props":1803,"children":1804},{"style":533},[1805],{"type":32,"value":1806},"'Dates:'",{"type":27,"tag":478,"props":1808,"children":1809},{"style":501},[1810],{"type":32,"value":1755},{"type":27,"tag":478,"props":1812,"children":1813},{"style":485},[1814],{"type":32,"value":1760},{"type":27,"tag":478,"props":1816,"children":1817},{"style":512},[1818],{"type":32,"value":515},{"type":27,"tag":478,"props":1820,"children":1821},{"style":501},[1822],{"type":32,"value":1113},{"type":27,"tag":478,"props":1824,"children":1825},{"style":512},[1826],{"type":32,"value":1827},".dates)",{"type":27,"tag":478,"props":1829,"children":1830},{"style":501},[1831],{"type":32,"value":640},{"type":27,"tag":478,"props":1833,"children":1834},{"style":533},[1835],{"type":32,"value":1836}," dates\"",{"type":27,"tag":478,"props":1838,"children":1839},{"style":512},[1840],{"type":32,"value":1730},{"type":27,"tag":478,"props":1842,"children":1843},{"class":480,"line":1330},[1844,1848,1852,1856,1861,1865,1869,1873,1877,1882,1886,1891],{"type":27,"tag":478,"props":1845,"children":1846},{"style":501},[1847],{"type":32,"value":1693},{"type":27,"tag":478,"props":1849,"children":1850},{"style":533},[1851],{"type":32,"value":1698},{"type":27,"tag":478,"props":1853,"children":1854},{"style":501},[1855],{"type":32,"value":631},{"type":27,"tag":478,"props":1857,"children":1858},{"style":533},[1859],{"type":32,"value":1860},"'Records:'",{"type":27,"tag":478,"props":1862,"children":1863},{"style":501},[1864],{"type":32,"value":1755},{"type":27,"tag":478,"props":1866,"children":1867},{"style":485},[1868],{"type":32,"value":1760},{"type":27,"tag":478,"props":1870,"children":1871},{"style":512},[1872],{"type":32,"value":515},{"type":27,"tag":478,"props":1874,"children":1875},{"style":501},[1876],{"type":32,"value":1113},{"type":27,"tag":478,"props":1878,"children":1879},{"style":512},[1880],{"type":32,"value":1881},".records)",{"type":27,"tag":478,"props":1883,"children":1884},{"style":501},[1885],{"type":32,"value":640},{"type":27,"tag":478,"props":1887,"children":1888},{"style":533},[1889],{"type":32,"value":1890}," records\"",{"type":27,"tag":478,"props":1892,"children":1893},{"style":512},[1894],{"type":32,"value":1730},{"type":27,"tag":478,"props":1896,"children":1897},{"class":480,"line":1356},[1898],{"type":27,"tag":478,"props":1899,"children":1900},{"style":512},[1901],{"type":32,"value":1902},"        ]\n",{"type":27,"tag":478,"props":1904,"children":1906},{"class":480,"line":1905},27,[1907],{"type":27,"tag":478,"props":1908,"children":1909},{"emptyLinePlaceholder":552},[1910],{"type":32,"value":555},{"type":27,"tag":478,"props":1912,"children":1914},{"class":480,"line":1913},28,[1915,1920,1924,1928,1933,1938,1943,1948,1952],{"type":27,"tag":478,"props":1916,"children":1917},{"style":512},[1918],{"type":32,"value":1919},"        max_len = ",{"type":27,"tag":478,"props":1921,"children":1922},{"style":485},[1923],{"type":32,"value":1760},{"type":27,"tag":478,"props":1925,"children":1926},{"style":512},[1927],{"type":32,"value":515},{"type":27,"tag":478,"props":1929,"children":1930},{"style":485},[1931],{"type":32,"value":1932},"max",{"type":27,"tag":478,"props":1934,"children":1935},{"style":512},[1936],{"type":32,"value":1937},"(description, ",{"type":27,"tag":478,"props":1939,"children":1940},{"style":518},[1941],{"type":32,"value":1942},"key",{"type":27,"tag":478,"props":1944,"children":1945},{"style":512},[1946],{"type":32,"value":1947},"=",{"type":27,"tag":478,"props":1949,"children":1950},{"style":485},[1951],{"type":32,"value":1760},{"type":27,"tag":478,"props":1953,"children":1954},{"style":512},[1955],{"type":32,"value":1956},"))\n",{"type":27,"tag":478,"props":1958,"children":1960},{"class":480,"line":1959},29,[1961,1966,1970,1974,1978,1983,1988,1993,1998,2002],{"type":27,"tag":478,"props":1962,"children":1963},{"style":512},[1964],{"type":32,"value":1965},"        description = [",{"type":27,"tag":478,"props":1967,"children":1968},{"style":501},[1969],{"type":32,"value":621},{"type":27,"tag":478,"props":1971,"children":1972},{"style":533},[1973],{"type":32,"value":1698},{"type":27,"tag":478,"props":1975,"children":1976},{"style":501},[1977],{"type":32,"value":631},{"type":27,"tag":478,"props":1979,"children":1980},{"style":533},[1981],{"type":32,"value":1982},"'ParsedData'",{"type":27,"tag":478,"props":1984,"children":1985},{"style":501},[1986],{"type":32,"value":1987},":=^{",{"type":27,"tag":478,"props":1989,"children":1990},{"style":512},[1991],{"type":32,"value":1992},"max_len",{"type":27,"tag":478,"props":1994,"children":1995},{"style":501},[1996],{"type":32,"value":1997},"}}",{"type":27,"tag":478,"props":1999,"children":2000},{"style":533},[2001],{"type":32,"value":1698},{"type":27,"tag":478,"props":2003,"children":2004},{"style":512},[2005],{"type":32,"value":2006},"] + description\n",{"type":27,"tag":478,"props":2008,"children":2010},{"class":480,"line":2009},30,[2011],{"type":27,"tag":478,"props":2012,"children":2013},{"emptyLinePlaceholder":552},[2014],{"type":32,"value":555},{"type":27,"tag":478,"props":2016,"children":2018},{"class":480,"line":2017},31,[2019,2023,2028,2034,2038],{"type":27,"tag":478,"props":2020,"children":2021},{"style":657},[2022],{"type":32,"value":717},{"type":27,"tag":478,"props":2024,"children":2025},{"style":533},[2026],{"type":32,"value":2027}," \"",{"type":27,"tag":478,"props":2029,"children":2031},{"style":2030},"--shiki-default:#D7BA7D",[2032],{"type":32,"value":2033},"\\n",{"type":27,"tag":478,"props":2035,"children":2036},{"style":533},[2037],{"type":32,"value":1698},{"type":27,"tag":478,"props":2039,"children":2040},{"style":512},[2041],{"type":32,"value":2042},".join(description)\n",{"type":27,"tag":28,"props":2044,"children":2045},{},[2046,2048,2054],{"type":32,"value":2047},"It also includes a ",{"type":27,"tag":248,"props":2049,"children":2051},{"className":2050},[],[2052],{"type":32,"value":2053},"__str__",{"type":32,"value":2055}," method to provide a string representation of the instance, detailing the flag, number of sources, dates, and records in a human-readable format.",{"type":27,"tag":136,"props":2057,"children":2058},{},[2059],{"type":27,"tag":28,"props":2060,"children":2061},{},[2062,2064,2069,2071,2078,2080,2085,2087,2094],{"type":32,"value":2063},"üí° ",{"type":27,"tag":35,"props":2065,"children":2066},{},[2067],{"type":32,"value":2068},"Tip",{"type":32,"value":2070},": Using ",{"type":27,"tag":43,"props":2072,"children":2075},{"href":2073,"rel":2074},"https://peps.python.org/pep-0498",[47],[2076],{"type":32,"value":2077},"f-string",{"type":32,"value":2079}," formatting (also called ",{"type":27,"tag":96,"props":2081,"children":2082},{},[2083],{"type":32,"value":2084},"literal string interpolation",{"type":32,"value":2086},"), we can pretty print our string! Here's a very useful ",{"type":27,"tag":43,"props":2088,"children":2091},{"href":2089,"rel":2090},"https://fstring.help/cheat",[47],[2092],{"type":32,"value":2093},"cheatsheet",{"type":32,"value":123},{"type":27,"tag":28,"props":2096,"children":2097},{},[2098,2100,2105],{"type":32,"value":2099},"When you print a ",{"type":27,"tag":248,"props":2101,"children":2103},{"className":2102},[],[2104],{"type":32,"value":879},{"type":32,"value":2106}," object, you will see something similar to the following in your terminal:",{"type":27,"tag":469,"props":2108,"children":2112},{"className":2109,"code":2110,"language":2111,"meta":7,"style":7},"language-shell shiki shiki-themes dark-plus","> print(parsed_data)\n=====================ParsedData=====================\nFlag:       HKQuantityTypeIdentifierRestingHeartRate\nSources:    3 sources\nDates:      144 dates\nRecords:    145 records\n","shell",[2113],{"type":27,"tag":248,"props":2114,"children":2115},{"__ignoreMap":7},[2116,2133,2141,2154,2173,2191],{"type":27,"tag":478,"props":2117,"children":2118},{"class":480,"line":481},[2119,2124,2129],{"type":27,"tag":478,"props":2120,"children":2121},{"style":512},[2122],{"type":32,"value":2123},"> print(",{"type":27,"tag":478,"props":2125,"children":2126},{"style":485},[2127],{"type":32,"value":2128},"parsed_data",{"type":27,"tag":478,"props":2130,"children":2131},{"style":512},[2132],{"type":32,"value":650},{"type":27,"tag":478,"props":2134,"children":2135},{"class":480,"line":497},[2136],{"type":27,"tag":478,"props":2137,"children":2138},{"style":533},[2139],{"type":32,"value":2140},"=====================ParsedData=====================\n",{"type":27,"tag":478,"props":2142,"children":2143},{"class":480,"line":529},[2144,2149],{"type":27,"tag":478,"props":2145,"children":2146},{"style":485},[2147],{"type":32,"value":2148},"Flag:",{"type":27,"tag":478,"props":2150,"children":2151},{"style":533},[2152],{"type":32,"value":2153},"       HKQuantityTypeIdentifierRestingHeartRate\n",{"type":27,"tag":478,"props":2155,"children":2156},{"class":480,"line":539},[2157,2162,2168],{"type":27,"tag":478,"props":2158,"children":2159},{"style":485},[2160],{"type":32,"value":2161},"Sources:",{"type":27,"tag":478,"props":2163,"children":2165},{"style":2164},"--shiki-default:#B5CEA8",[2166],{"type":32,"value":2167},"    3",{"type":27,"tag":478,"props":2169,"children":2170},{"style":533},[2171],{"type":32,"value":2172}," sources\n",{"type":27,"tag":478,"props":2174,"children":2175},{"class":480,"line":548},[2176,2181,2186],{"type":27,"tag":478,"props":2177,"children":2178},{"style":485},[2179],{"type":32,"value":2180},"Dates:",{"type":27,"tag":478,"props":2182,"children":2183},{"style":2164},[2184],{"type":32,"value":2185},"      144",{"type":27,"tag":478,"props":2187,"children":2188},{"style":533},[2189],{"type":32,"value":2190}," dates\n",{"type":27,"tag":478,"props":2192,"children":2193},{"class":480,"line":558},[2194,2199,2204],{"type":27,"tag":478,"props":2195,"children":2196},{"style":485},[2197],{"type":32,"value":2198},"Records:",{"type":27,"tag":478,"props":2200,"children":2201},{"style":2164},[2202],{"type":32,"value":2203},"    145",{"type":27,"tag":478,"props":2205,"children":2206},{"style":533},[2207],{"type":32,"value":2208}," records\n",{"type":27,"tag":28,"props":2210,"children":2211},{},[2212,2214,2219,2221,2226,2228,2233],{"type":32,"value":2213},"Coming back to the ",{"type":27,"tag":248,"props":2215,"children":2217},{"className":2216},[],[2218],{"type":32,"value":854},{"type":32,"value":2220}," method, now that we now what ",{"type":27,"tag":248,"props":2222,"children":2224},{"className":2223},[],[2225],{"type":32,"value":879},{"type":32,"value":2227}," represents, we see that it actually just performs a series of tasks by calling the appropriate methods to generate ",{"type":27,"tag":248,"props":2229,"children":2231},{"className":2230},[],[2232],{"type":32,"value":879},{"type":32,"value":2234}," object(s).",{"type":27,"tag":28,"props":2236,"children":2237},{},[2238],{"type":32,"value":2239},"One line is particularly important:",{"type":27,"tag":469,"props":2241,"children":2243},{"className":471,"code":2242,"language":14,"meta":7,"style":7},"models = self._build_models(flag=flag)\n",[2244],{"type":27,"tag":248,"props":2245,"children":2246},{"__ignoreMap":7},[2247],{"type":27,"tag":478,"props":2248,"children":2249},{"class":480,"line":481},[2250,2255,2259,2263,2267],{"type":27,"tag":478,"props":2251,"children":2252},{"style":512},[2253],{"type":32,"value":2254},"models = ",{"type":27,"tag":478,"props":2256,"children":2257},{"style":501},[2258],{"type":32,"value":1113},{"type":27,"tag":478,"props":2260,"children":2261},{"style":512},[2262],{"type":32,"value":1145},{"type":27,"tag":478,"props":2264,"children":2265},{"style":518},[2266],{"type":32,"value":953},{"type":27,"tag":478,"props":2268,"children":2269},{"style":512},[2270],{"type":32,"value":1127},{"type":27,"tag":28,"props":2272,"children":2273},{},[2274,2276,2287],{"type":32,"value":2275},"This is essentially the data validation step. Under the hood, this private method is responsible for building ",{"type":27,"tag":43,"props":2277,"children":2280},{"href":2278,"rel":2279},"https://docs.pydantic.dev",[47],[2281],{"type":27,"tag":248,"props":2282,"children":2284},{"className":2283},[],[2285],{"type":32,"value":2286},"Pydantic",{"type":32,"value":2288}," models, which leads us to the next subsection.",{"type":27,"tag":2290,"props":2291,"children":2293},"h5",{"id":2292},"data-validation-using-pydantic-models",[2294],{"type":32,"value":2295},"Data validation using Pydantic models",{"type":27,"tag":28,"props":2297,"children":2298},{},[2299],{"type":32,"value":2300},"An Apple Health record (in this case, heart rate record) looks something like this:",{"type":27,"tag":469,"props":2302,"children":2306},{"className":2303,"code":2304,"language":2305,"meta":7,"style":7},"language-xml shiki shiki-themes dark-plus","\u003CRecord type=\"HKQuantityTypeIdentifierHeartRate\" sourceName=\"Alexandre‚Äôs Apple Watch\" sourceVersion=\"10.2\" device=\"..., name:Apple Watch, manufacturer:Apple Inc., model:Watch, hardware:Watch6,7, software:10.2&gt;\" unit=\"count/min\" creationDate=\"2024-01-01 01:01:42 +0200\" startDate=\"2024-01-01 01:01:36 +0200\" endDate=\"2024-01-01 01:01:36 +0200\" value=\"74\">\n    \u003CMetadataEntry key=\"HKMetadataKeyHeartRateMotionContext\" value=\"0\"/>\n\u003C/Record>\n","xml",[2307],{"type":27,"tag":248,"props":2308,"children":2309},{"__ignoreMap":7},[2310,2462,2507],{"type":27,"tag":478,"props":2311,"children":2312},{"class":480,"line":481},[2313,2319,2324,2329,2333,2337,2342,2346,2351,2356,2360,2365,2370,2374,2379,2384,2388,2393,2397,2402,2407,2411,2416,2421,2425,2430,2435,2439,2443,2448,2452,2457],{"type":27,"tag":478,"props":2314,"children":2316},{"style":2315},"--shiki-default:#808080",[2317],{"type":32,"value":2318},"\u003C",{"type":27,"tag":478,"props":2320,"children":2321},{"style":501},[2322],{"type":32,"value":2323},"Record",{"type":27,"tag":478,"props":2325,"children":2326},{"style":518},[2327],{"type":32,"value":2328}," type",{"type":27,"tag":478,"props":2330,"children":2331},{"style":512},[2332],{"type":32,"value":1947},{"type":27,"tag":478,"props":2334,"children":2335},{"style":533},[2336],{"type":32,"value":1432},{"type":27,"tag":478,"props":2338,"children":2339},{"style":518},[2340],{"type":32,"value":2341}," sourceName",{"type":27,"tag":478,"props":2343,"children":2344},{"style":512},[2345],{"type":32,"value":1947},{"type":27,"tag":478,"props":2347,"children":2348},{"style":533},[2349],{"type":32,"value":2350},"\"Alexandre‚Äôs Apple Watch\"",{"type":27,"tag":478,"props":2352,"children":2353},{"style":518},[2354],{"type":32,"value":2355}," sourceVersion",{"type":27,"tag":478,"props":2357,"children":2358},{"style":512},[2359],{"type":32,"value":1947},{"type":27,"tag":478,"props":2361,"children":2362},{"style":533},[2363],{"type":32,"value":2364},"\"10.2\"",{"type":27,"tag":478,"props":2366,"children":2367},{"style":518},[2368],{"type":32,"value":2369}," device",{"type":27,"tag":478,"props":2371,"children":2372},{"style":512},[2373],{"type":32,"value":1947},{"type":27,"tag":478,"props":2375,"children":2376},{"style":533},[2377],{"type":32,"value":2378},"\"..., name:Apple Watch, manufacturer:Apple Inc., model:Watch, hardware:Watch6,7, software:10.2",{"type":27,"tag":478,"props":2380,"children":2381},{"style":501},[2382],{"type":32,"value":2383},"&gt;",{"type":27,"tag":478,"props":2385,"children":2386},{"style":533},[2387],{"type":32,"value":1698},{"type":27,"tag":478,"props":2389,"children":2390},{"style":518},[2391],{"type":32,"value":2392}," unit",{"type":27,"tag":478,"props":2394,"children":2395},{"style":512},[2396],{"type":32,"value":1947},{"type":27,"tag":478,"props":2398,"children":2399},{"style":533},[2400],{"type":32,"value":2401},"\"count/min\"",{"type":27,"tag":478,"props":2403,"children":2404},{"style":518},[2405],{"type":32,"value":2406}," creationDate",{"type":27,"tag":478,"props":2408,"children":2409},{"style":512},[2410],{"type":32,"value":1947},{"type":27,"tag":478,"props":2412,"children":2413},{"style":533},[2414],{"type":32,"value":2415},"\"2024-01-01 01:01:42 +0200\"",{"type":27,"tag":478,"props":2417,"children":2418},{"style":518},[2419],{"type":32,"value":2420}," startDate",{"type":27,"tag":478,"props":2422,"children":2423},{"style":512},[2424],{"type":32,"value":1947},{"type":27,"tag":478,"props":2426,"children":2427},{"style":533},[2428],{"type":32,"value":2429},"\"2024-01-01 01:01:36 +0200\"",{"type":27,"tag":478,"props":2431,"children":2432},{"style":518},[2433],{"type":32,"value":2434}," endDate",{"type":27,"tag":478,"props":2436,"children":2437},{"style":512},[2438],{"type":32,"value":1947},{"type":27,"tag":478,"props":2440,"children":2441},{"style":533},[2442],{"type":32,"value":2429},{"type":27,"tag":478,"props":2444,"children":2445},{"style":518},[2446],{"type":32,"value":2447}," value",{"type":27,"tag":478,"props":2449,"children":2450},{"style":512},[2451],{"type":32,"value":1947},{"type":27,"tag":478,"props":2453,"children":2454},{"style":533},[2455],{"type":32,"value":2456},"\"74\"",{"type":27,"tag":478,"props":2458,"children":2459},{"style":2315},[2460],{"type":32,"value":2461},">\n",{"type":27,"tag":478,"props":2463,"children":2464},{"class":480,"line":497},[2465,2470,2475,2480,2484,2489,2493,2497,2502],{"type":27,"tag":478,"props":2466,"children":2467},{"style":2315},[2468],{"type":32,"value":2469},"    \u003C",{"type":27,"tag":478,"props":2471,"children":2472},{"style":501},[2473],{"type":32,"value":2474},"MetadataEntry",{"type":27,"tag":478,"props":2476,"children":2477},{"style":518},[2478],{"type":32,"value":2479}," key",{"type":27,"tag":478,"props":2481,"children":2482},{"style":512},[2483],{"type":32,"value":1947},{"type":27,"tag":478,"props":2485,"children":2486},{"style":533},[2487],{"type":32,"value":2488},"\"HKMetadataKeyHeartRateMotionContext\"",{"type":27,"tag":478,"props":2490,"children":2491},{"style":518},[2492],{"type":32,"value":2447},{"type":27,"tag":478,"props":2494,"children":2495},{"style":512},[2496],{"type":32,"value":1947},{"type":27,"tag":478,"props":2498,"children":2499},{"style":533},[2500],{"type":32,"value":2501},"\"0\"",{"type":27,"tag":478,"props":2503,"children":2504},{"style":2315},[2505],{"type":32,"value":2506},"/>\n",{"type":27,"tag":478,"props":2508,"children":2509},{"class":480,"line":529},[2510,2515,2519],{"type":27,"tag":478,"props":2511,"children":2512},{"style":2315},[2513],{"type":32,"value":2514},"\u003C/",{"type":27,"tag":478,"props":2516,"children":2517},{"style":501},[2518],{"type":32,"value":2323},{"type":27,"tag":478,"props":2520,"children":2521},{"style":2315},[2522],{"type":32,"value":2461},{"type":27,"tag":28,"props":2524,"children":2525},{},[2526,2528,2532,2534,2545],{"type":32,"value":2527},"In ",{"type":27,"tag":96,"props":2529,"children":2530},{},[2531],{"type":32,"value":8},{"type":32,"value":2533},", models are defined in ",{"type":27,"tag":43,"props":2535,"children":2538},{"href":2536,"rel":2537},"https://github.com/alxdrcirilo/apple-health-parser/blob/main/apple_health_parser/models/records.py",[47],[2539],{"type":27,"tag":248,"props":2540,"children":2542},{"className":2541},[],[2543],{"type":32,"value":2544},"records.py",{"type":32,"value":2546}," and used to validate data from the records like the one shown above.",{"type":27,"tag":28,"props":2548,"children":2549},{},[2550,2552,2558,2560,2566],{"type":32,"value":2551},"As an example, let's take a look at the ",{"type":27,"tag":248,"props":2553,"children":2555},{"className":2554},[],[2556],{"type":32,"value":2557},"HeartRateData",{"type":32,"value":2559}," model which is derived from the ",{"type":27,"tag":248,"props":2561,"children":2563},{"className":2562},[],[2564],{"type":32,"value":2565},"HealthData",{"type":32,"value":2567}," model.",{"type":27,"tag":469,"props":2569,"children":2571},{"className":471,"code":2570,"language":14,"meta":7,"style":7},"class MotionContext(StrEnum):\n    UNSET = \"0\"\n    SEDENTARY = \"1\"\n    ACTIVE = \"2\"\n\n\nclass HeartRateData(HealthData):\n    device: str = Field(title=\"Device\", description=\"Device used for measurement\")\n    motion_context: str = Field(\n        alias=\"motionContext\",\n        title=\"Motion Context\",\n        description=\"Context of motion (e.g. sedentary, active, unset)\",\n        examples=[\"Unset\", \"Sedentary\", \"Active\"],\n    )\n\n    @field_validator(\"motion_context\", mode=\"before\")\n    @classmethod\n    def check_motion_context(cls, v: str) -> str:\n        return MotionContext(v).name.lower().capitalize()\n",[2572],{"type":27,"tag":248,"props":2573,"children":2574},{"__ignoreMap":7},[2575,2600,2613,2626,2639,2646,2653,2677,2730,2747,2768,2789,2810,2851,2859,2866,2905,2918,2968],{"type":27,"tag":478,"props":2576,"children":2577},{"class":480,"line":481},[2578,2582,2587,2591,2596],{"type":27,"tag":478,"props":2579,"children":2580},{"style":501},[2581],{"type":32,"value":1492},{"type":27,"tag":478,"props":2583,"children":2584},{"style":491},[2585],{"type":32,"value":2586}," MotionContext",{"type":27,"tag":478,"props":2588,"children":2589},{"style":512},[2590],{"type":32,"value":515},{"type":27,"tag":478,"props":2592,"children":2593},{"style":491},[2594],{"type":32,"value":2595},"StrEnum",{"type":27,"tag":478,"props":2597,"children":2598},{"style":512},[2599],{"type":32,"value":1298},{"type":27,"tag":478,"props":2601,"children":2602},{"class":480,"line":497},[2603,2608],{"type":27,"tag":478,"props":2604,"children":2605},{"style":512},[2606],{"type":32,"value":2607},"    UNSET = ",{"type":27,"tag":478,"props":2609,"children":2610},{"style":533},[2611],{"type":32,"value":2612},"\"0\"\n",{"type":27,"tag":478,"props":2614,"children":2615},{"class":480,"line":529},[2616,2621],{"type":27,"tag":478,"props":2617,"children":2618},{"style":512},[2619],{"type":32,"value":2620},"    SEDENTARY = ",{"type":27,"tag":478,"props":2622,"children":2623},{"style":533},[2624],{"type":32,"value":2625},"\"1\"\n",{"type":27,"tag":478,"props":2627,"children":2628},{"class":480,"line":539},[2629,2634],{"type":27,"tag":478,"props":2630,"children":2631},{"style":512},[2632],{"type":32,"value":2633},"    ACTIVE = ",{"type":27,"tag":478,"props":2635,"children":2636},{"style":533},[2637],{"type":32,"value":2638},"\"2\"\n",{"type":27,"tag":478,"props":2640,"children":2641},{"class":480,"line":548},[2642],{"type":27,"tag":478,"props":2643,"children":2644},{"emptyLinePlaceholder":552},[2645],{"type":32,"value":555},{"type":27,"tag":478,"props":2647,"children":2648},{"class":480,"line":558},[2649],{"type":27,"tag":478,"props":2650,"children":2651},{"emptyLinePlaceholder":552},[2652],{"type":32,"value":555},{"type":27,"tag":478,"props":2654,"children":2655},{"class":480,"line":567},[2656,2660,2665,2669,2673],{"type":27,"tag":478,"props":2657,"children":2658},{"style":501},[2659],{"type":32,"value":1492},{"type":27,"tag":478,"props":2661,"children":2662},{"style":491},[2663],{"type":32,"value":2664}," HeartRateData",{"type":27,"tag":478,"props":2666,"children":2667},{"style":512},[2668],{"type":32,"value":515},{"type":27,"tag":478,"props":2670,"children":2671},{"style":491},[2672],{"type":32,"value":2565},{"type":27,"tag":478,"props":2674,"children":2675},{"style":512},[2676],{"type":32,"value":1298},{"type":27,"tag":478,"props":2678,"children":2679},{"class":480,"line":576},[2680,2685,2689,2694,2699,2703,2708,2712,2717,2721,2726],{"type":27,"tag":478,"props":2681,"children":2682},{"style":512},[2683],{"type":32,"value":2684},"    device: ",{"type":27,"tag":478,"props":2686,"children":2687},{"style":491},[2688],{"type":32,"value":962},{"type":27,"tag":478,"props":2690,"children":2691},{"style":512},[2692],{"type":32,"value":2693}," = Field(",{"type":27,"tag":478,"props":2695,"children":2696},{"style":518},[2697],{"type":32,"value":2698},"title",{"type":27,"tag":478,"props":2700,"children":2701},{"style":512},[2702],{"type":32,"value":1947},{"type":27,"tag":478,"props":2704,"children":2705},{"style":533},[2706],{"type":32,"value":2707},"\"Device\"",{"type":27,"tag":478,"props":2709,"children":2710},{"style":512},[2711],{"type":32,"value":948},{"type":27,"tag":478,"props":2713,"children":2714},{"style":518},[2715],{"type":32,"value":2716},"description",{"type":27,"tag":478,"props":2718,"children":2719},{"style":512},[2720],{"type":32,"value":1947},{"type":27,"tag":478,"props":2722,"children":2723},{"style":533},[2724],{"type":32,"value":2725},"\"Device used for measurement\"",{"type":27,"tag":478,"props":2727,"children":2728},{"style":512},[2729],{"type":32,"value":650},{"type":27,"tag":478,"props":2731,"children":2732},{"class":480,"line":584},[2733,2738,2742],{"type":27,"tag":478,"props":2734,"children":2735},{"style":512},[2736],{"type":32,"value":2737},"    motion_context: ",{"type":27,"tag":478,"props":2739,"children":2740},{"style":491},[2741],{"type":32,"value":962},{"type":27,"tag":478,"props":2743,"children":2744},{"style":512},[2745],{"type":32,"value":2746}," = Field(\n",{"type":27,"tag":478,"props":2748,"children":2749},{"class":480,"line":593},[2750,2755,2759,2764],{"type":27,"tag":478,"props":2751,"children":2752},{"style":518},[2753],{"type":32,"value":2754},"        alias",{"type":27,"tag":478,"props":2756,"children":2757},{"style":512},[2758],{"type":32,"value":1947},{"type":27,"tag":478,"props":2760,"children":2761},{"style":533},[2762],{"type":32,"value":2763},"\"motionContext\"",{"type":27,"tag":478,"props":2765,"children":2766},{"style":512},[2767],{"type":32,"value":1730},{"type":27,"tag":478,"props":2769,"children":2770},{"class":480,"line":602},[2771,2776,2780,2785],{"type":27,"tag":478,"props":2772,"children":2773},{"style":518},[2774],{"type":32,"value":2775},"        title",{"type":27,"tag":478,"props":2777,"children":2778},{"style":512},[2779],{"type":32,"value":1947},{"type":27,"tag":478,"props":2781,"children":2782},{"style":533},[2783],{"type":32,"value":2784},"\"Motion Context\"",{"type":27,"tag":478,"props":2786,"children":2787},{"style":512},[2788],{"type":32,"value":1730},{"type":27,"tag":478,"props":2790,"children":2791},{"class":480,"line":610},[2792,2797,2801,2806],{"type":27,"tag":478,"props":2793,"children":2794},{"style":518},[2795],{"type":32,"value":2796},"        description",{"type":27,"tag":478,"props":2798,"children":2799},{"style":512},[2800],{"type":32,"value":1947},{"type":27,"tag":478,"props":2802,"children":2803},{"style":533},[2804],{"type":32,"value":2805},"\"Context of motion (e.g. sedentary, active, unset)\"",{"type":27,"tag":478,"props":2807,"children":2808},{"style":512},[2809],{"type":32,"value":1730},{"type":27,"tag":478,"props":2811,"children":2812},{"class":480,"line":653},[2813,2818,2823,2828,2832,2837,2841,2846],{"type":27,"tag":478,"props":2814,"children":2815},{"style":518},[2816],{"type":32,"value":2817},"        examples",{"type":27,"tag":478,"props":2819,"children":2820},{"style":512},[2821],{"type":32,"value":2822},"=[",{"type":27,"tag":478,"props":2824,"children":2825},{"style":533},[2826],{"type":32,"value":2827},"\"Unset\"",{"type":27,"tag":478,"props":2829,"children":2830},{"style":512},[2831],{"type":32,"value":948},{"type":27,"tag":478,"props":2833,"children":2834},{"style":533},[2835],{"type":32,"value":2836},"\"Sedentary\"",{"type":27,"tag":478,"props":2838,"children":2839},{"style":512},[2840],{"type":32,"value":948},{"type":27,"tag":478,"props":2842,"children":2843},{"style":533},[2844],{"type":32,"value":2845},"\"Active\"",{"type":27,"tag":478,"props":2847,"children":2848},{"style":512},[2849],{"type":32,"value":2850},"],\n",{"type":27,"tag":478,"props":2852,"children":2853},{"class":480,"line":693},[2854],{"type":27,"tag":478,"props":2855,"children":2856},{"style":512},[2857],{"type":32,"value":2858},"    )\n",{"type":27,"tag":478,"props":2860,"children":2861},{"class":480,"line":702},[2862],{"type":27,"tag":478,"props":2863,"children":2864},{"emptyLinePlaceholder":552},[2865],{"type":32,"value":555},{"type":27,"tag":478,"props":2867,"children":2868},{"class":480,"line":711},[2869,2874,2878,2883,2887,2892,2896,2901],{"type":27,"tag":478,"props":2870,"children":2871},{"style":485},[2872],{"type":32,"value":2873},"    @field_validator",{"type":27,"tag":478,"props":2875,"children":2876},{"style":512},[2877],{"type":32,"value":515},{"type":27,"tag":478,"props":2879,"children":2880},{"style":533},[2881],{"type":32,"value":2882},"\"motion_context\"",{"type":27,"tag":478,"props":2884,"children":2885},{"style":512},[2886],{"type":32,"value":948},{"type":27,"tag":478,"props":2888,"children":2889},{"style":518},[2890],{"type":32,"value":2891},"mode",{"type":27,"tag":478,"props":2893,"children":2894},{"style":512},[2895],{"type":32,"value":1947},{"type":27,"tag":478,"props":2897,"children":2898},{"style":533},[2899],{"type":32,"value":2900},"\"before\"",{"type":27,"tag":478,"props":2902,"children":2903},{"style":512},[2904],{"type":32,"value":650},{"type":27,"tag":478,"props":2906,"children":2907},{"class":480,"line":1130},[2908,2913],{"type":27,"tag":478,"props":2909,"children":2910},{"style":485},[2911],{"type":32,"value":2912},"    @",{"type":27,"tag":478,"props":2914,"children":2915},{"style":491},[2916],{"type":32,"value":2917},"classmethod\n",{"type":27,"tag":478,"props":2919,"children":2920},{"class":480,"line":1156},[2921,2925,2930,2934,2939,2943,2948,2952,2956,2960,2964],{"type":27,"tag":478,"props":2922,"children":2923},{"style":501},[2924],{"type":32,"value":1074},{"type":27,"tag":478,"props":2926,"children":2927},{"style":485},[2928],{"type":32,"value":2929}," check_motion_context",{"type":27,"tag":478,"props":2931,"children":2932},{"style":512},[2933],{"type":32,"value":515},{"type":27,"tag":478,"props":2935,"children":2936},{"style":518},[2937],{"type":32,"value":2938},"cls",{"type":27,"tag":478,"props":2940,"children":2941},{"style":512},[2942],{"type":32,"value":948},{"type":27,"tag":478,"props":2944,"children":2945},{"style":518},[2946],{"type":32,"value":2947},"v",{"type":27,"tag":478,"props":2949,"children":2950},{"style":512},[2951],{"type":32,"value":41},{"type":27,"tag":478,"props":2953,"children":2954},{"style":491},[2955],{"type":32,"value":962},{"type":27,"tag":478,"props":2957,"children":2958},{"style":512},[2959],{"type":32,"value":1608},{"type":27,"tag":478,"props":2961,"children":2962},{"style":491},[2963],{"type":32,"value":962},{"type":27,"tag":478,"props":2965,"children":2966},{"style":512},[2967],{"type":32,"value":1502},{"type":27,"tag":478,"props":2969,"children":2970},{"class":480,"line":1184},[2971,2975],{"type":27,"tag":478,"props":2972,"children":2973},{"style":657},[2974],{"type":32,"value":717},{"type":27,"tag":478,"props":2976,"children":2977},{"style":512},[2978],{"type":32,"value":2979}," MotionContext(v).name.lower().capitalize()\n",{"type":27,"tag":28,"props":2981,"children":2982},{},[2983,2984,2989,2991,2996,2998,3004,3006,3012,3014,3024,3026,3032,3034,3040,3042,3048,3050,3055,3057,3062],{"type":32,"value":405},{"type":27,"tag":248,"props":2985,"children":2987},{"className":2986},[],[2988],{"type":32,"value":2557},{"type":32,"value":2990}," model defines all the fields defined in the ",{"type":27,"tag":248,"props":2992,"children":2994},{"className":2993},[],[2995],{"type":32,"value":2565},{"type":32,"value":2997}," model and extends it by adding two additional fields: ",{"type":27,"tag":248,"props":2999,"children":3001},{"className":3000},[],[3002],{"type":32,"value":3003},"device",{"type":32,"value":3005},", and ",{"type":27,"tag":248,"props":3007,"children":3009},{"className":3008},[],[3010],{"type":32,"value":3011},"motion_context",{"type":32,"value":3013},". The former is self-explanatory, whilst the latter defines the type of motion context associated with the heart rate record - i.e. \"unknown\", \"sedentary\", or \"active\". To represent the motion context, we use a ",{"type":27,"tag":43,"props":3015,"children":3018},{"href":3016,"rel":3017},"https://docs.python.org/3/library/enum.html#enum.StrEnum",[47],[3019],{"type":27,"tag":248,"props":3020,"children":3022},{"className":3021},[],[3023],{"type":32,"value":2595},{"type":32,"value":3025},". Notice that there is a method ",{"type":27,"tag":248,"props":3027,"children":3029},{"className":3028},[],[3030],{"type":32,"value":3031},"check_motion_context",{"type":32,"value":3033}," decorated with ",{"type":27,"tag":248,"props":3035,"children":3037},{"className":3036},[],[3038],{"type":32,"value":3039},"@field_validator",{"type":32,"value":3041},". The ",{"type":27,"tag":248,"props":3043,"children":3045},{"className":3044},[],[3046],{"type":32,"value":3047},"mode=\"before\"",{"type":32,"value":3049}," argument specifies that this validation should be performed before the field is set. This method is responsible for setting the appropriate motion context into a human-readable format (e.g. ",{"type":27,"tag":248,"props":3051,"children":3053},{"className":3052},[],[3054],{"type":32,"value":2845},{"type":32,"value":3056},") in the ",{"type":27,"tag":248,"props":3058,"children":3060},{"className":3059},[],[3061],{"type":32,"value":3011},{"type":32,"value":3063}," field.",{"type":27,"tag":28,"props":3065,"children":3066},{},[3067],{"type":32,"value":3068},"Using Pydantic models ensures that the records parsed from the XML file are correctly structured and valid according to the defined models. This adds a layer of robustness and maintainability to the data parsing logic. This way, if something with the data is unexpected or missing, we can catch it early at the source.",{"type":27,"tag":396,"props":3070,"children":3072},{"id":3071},"plot",[3073],{"type":32,"value":364},{"type":27,"tag":28,"props":3075,"children":3076},{},[3077,3078,3083,3085,3089,3091,3102,3104,3110,3112,3118,3120,3126,3128,3134,3136,3141],{"type":32,"value":405},{"type":27,"tag":248,"props":3079,"children":3081},{"className":3080},[],[3082],{"type":32,"value":364},{"type":32,"value":3084}," class plays a central role in the ",{"type":27,"tag":96,"props":3086,"children":3087},{},[3088],{"type":32,"value":8},{"type":32,"value":3090}," package. But before we can actually plot anything, we need the data to be preprocessed. For this, I picked ",{"type":27,"tag":43,"props":3092,"children":3095},{"href":3093,"rel":3094},"https://pandas.pydata.org/",[47],[3096],{"type":27,"tag":248,"props":3097,"children":3099},{"className":3098},[],[3100],{"type":32,"value":3101},"pandas",{"type":32,"value":3103},", a widely adopted data analysis library that integrates very well with ",{"type":27,"tag":248,"props":3105,"children":3107},{"className":3106},[],[3108],{"type":32,"value":3109},"plotly",{"type":32,"value":3111},". The data preprocessing naturally comes after data validation using ",{"type":27,"tag":248,"props":3113,"children":3115},{"className":3114},[],[3116],{"type":32,"value":3117},"pydantic",{"type":32,"value":3119},", i.e. after the models have been built and validated. Most data will be similar, with some variations for special cases (e.g. heart rate data has ",{"type":27,"tag":248,"props":3121,"children":3123},{"className":3122},[],[3124],{"type":32,"value":3125},"motion context",{"type":32,"value":3127}," metadata, sleep data has ",{"type":27,"tag":248,"props":3129,"children":3131},{"className":3130},[],[3132],{"type":32,"value":3133},"sleep phases",{"type":32,"value":3135}," metadata, etc.). Same goes for plotting, with most plots being similar in the way they are generated with slight variations (e.g. x-axis column name of the pandas DataFrame, title, legend, etc.). And this leads to a really cool concept in programming: ",{"type":27,"tag":96,"props":3137,"children":3138},{},[3139],{"type":32,"value":3140},"interfaces",{"type":32,"value":123},{"type":27,"tag":2290,"props":3143,"children":3144},{"id":3140},[3145],{"type":32,"value":3146},"Interfaces",{"type":27,"tag":28,"props":3148,"children":3149},{},[3150,3152,3157,3159,3164],{"type":32,"value":3151},"In simple terms, an ",{"type":27,"tag":96,"props":3153,"children":3154},{},[3155],{"type":32,"value":3156},"interface",{"type":32,"value":3158}," defines a set of abstract methods that a class must implement. This ensures that any class that implements the interface will have a certain set of functionalities. It gives us the ability to define how a class should look without specifying the details of the implementation. Furthermore, it can also help us avoid unnecessary code duplication, promoting the use of ",{"type":27,"tag":96,"props":3160,"children":3161},{},[3162],{"type":32,"value":3163},"polymorphism",{"type":32,"value":3165}," - classes can be treated through the same interface despite having different internal implementations. If you think of it at a high level, an interface is like a blueprint that you can reuse all over your codebase.",{"type":27,"tag":28,"props":3167,"children":3168},{},[3169,3171,3178,3180,3185],{"type":32,"value":3170},"There are multiple ways to define an interface in Python, but for this project I decided to make use of ",{"type":27,"tag":43,"props":3172,"children":3175},{"href":3173,"rel":3174},"https://docs.python.org/3/library/abc.html",[47],[3176],{"type":32,"value":3177},"Abstract Base Classes",{"type":32,"value":3179},", also called ",{"type":27,"tag":96,"props":3181,"children":3182},{},[3183],{"type":32,"value":3184},"ABCs",{"type":32,"value":123},{"type":27,"tag":136,"props":3187,"children":3188},{},[3189],{"type":27,"tag":28,"props":3190,"children":3191},{},[3192,3194,3199,3201,3212],{"type":32,"value":3193},"üîç ",{"type":27,"tag":35,"props":3195,"children":3196},{},[3197],{"type":32,"value":3198},"Note",{"type":32,"value":3200},": In Python, abstract methods are defined by decorating a method with ",{"type":27,"tag":43,"props":3202,"children":3205},{"href":3203,"rel":3204},"https://docs.python.org/3/library/abc.html#abc.abstractmethod",[47],[3206],{"type":27,"tag":248,"props":3207,"children":3209},{"className":3208},[],[3210],{"type":32,"value":3211},"@abstractmethod",{"type":32,"value":123},{"type":27,"tag":28,"props":3214,"children":3215},{},[3216,3217,3221,3223,3228,3230,3236],{"type":32,"value":2527},{"type":27,"tag":96,"props":3218,"children":3219},{},[3220],{"type":32,"value":8},{"type":32,"value":3222},", the ",{"type":27,"tag":248,"props":3224,"children":3226},{"className":3225},[],[3227],{"type":32,"value":364},{"type":32,"value":3229}," class inherits from ",{"type":27,"tag":248,"props":3231,"children":3233},{"className":3232},[],[3234],{"type":32,"value":3235},"PlotInterface",{"type":32,"value":3237},". Here's part of what this interface looks like:",{"type":27,"tag":469,"props":3239,"children":3241},{"className":471,"code":3240,"language":14,"meta":7,"style":7},"from abc import ABC, abstractmethod\n\nclass PlotInterface(ABC):\n    @abstractmethod\n    def _get_figure(self, data):\n        # Implement case-specific method to get figure\n    \n    def plot(self):\n        figure = self._get_figure()\n        # Do something with figure\n",[3242],{"type":27,"tag":248,"props":3243,"children":3244},{"__ignoreMap":7},[3245,3268,3275,3292,3300,3333,3342,3350,3374,3391],{"type":27,"tag":478,"props":3246,"children":3247},{"class":480,"line":481},[3248,3253,3258,3263],{"type":27,"tag":478,"props":3249,"children":3250},{"style":657},[3251],{"type":32,"value":3252},"from",{"type":27,"tag":478,"props":3254,"children":3255},{"style":512},[3256],{"type":32,"value":3257}," abc ",{"type":27,"tag":478,"props":3259,"children":3260},{"style":657},[3261],{"type":32,"value":3262},"import",{"type":27,"tag":478,"props":3264,"children":3265},{"style":512},[3266],{"type":32,"value":3267}," ABC, abstractmethod\n",{"type":27,"tag":478,"props":3269,"children":3270},{"class":480,"line":497},[3271],{"type":27,"tag":478,"props":3272,"children":3273},{"emptyLinePlaceholder":552},[3274],{"type":32,"value":555},{"type":27,"tag":478,"props":3276,"children":3277},{"class":480,"line":529},[3278,3282,3287],{"type":27,"tag":478,"props":3279,"children":3280},{"style":501},[3281],{"type":32,"value":1492},{"type":27,"tag":478,"props":3283,"children":3284},{"style":491},[3285],{"type":32,"value":3286}," PlotInterface",{"type":27,"tag":478,"props":3288,"children":3289},{"style":512},[3290],{"type":32,"value":3291},"(ABC):\n",{"type":27,"tag":478,"props":3293,"children":3294},{"class":480,"line":539},[3295],{"type":27,"tag":478,"props":3296,"children":3297},{"style":485},[3298],{"type":32,"value":3299},"    @abstractmethod\n",{"type":27,"tag":478,"props":3301,"children":3302},{"class":480,"line":548},[3303,3307,3312,3316,3320,3324,3329],{"type":27,"tag":478,"props":3304,"children":3305},{"style":501},[3306],{"type":32,"value":1074},{"type":27,"tag":478,"props":3308,"children":3309},{"style":485},[3310],{"type":32,"value":3311}," _get_figure",{"type":27,"tag":478,"props":3313,"children":3314},{"style":512},[3315],{"type":32,"value":515},{"type":27,"tag":478,"props":3317,"children":3318},{"style":518},[3319],{"type":32,"value":1113},{"type":27,"tag":478,"props":3321,"children":3322},{"style":512},[3323],{"type":32,"value":948},{"type":27,"tag":478,"props":3325,"children":3326},{"style":518},[3327],{"type":32,"value":3328},"data",{"type":27,"tag":478,"props":3330,"children":3331},{"style":512},[3332],{"type":32,"value":1298},{"type":27,"tag":478,"props":3334,"children":3335},{"class":480,"line":558},[3336],{"type":27,"tag":478,"props":3337,"children":3339},{"style":3338},"--shiki-default:#6A9955",[3340],{"type":32,"value":3341},"        # Implement case-specific method to get figure\n",{"type":27,"tag":478,"props":3343,"children":3344},{"class":480,"line":567},[3345],{"type":27,"tag":478,"props":3346,"children":3347},{"style":512},[3348],{"type":32,"value":3349},"    \n",{"type":27,"tag":478,"props":3351,"children":3352},{"class":480,"line":576},[3353,3357,3362,3366,3370],{"type":27,"tag":478,"props":3354,"children":3355},{"style":501},[3356],{"type":32,"value":1074},{"type":27,"tag":478,"props":3358,"children":3359},{"style":485},[3360],{"type":32,"value":3361}," plot",{"type":27,"tag":478,"props":3363,"children":3364},{"style":512},[3365],{"type":32,"value":515},{"type":27,"tag":478,"props":3367,"children":3368},{"style":518},[3369],{"type":32,"value":1113},{"type":27,"tag":478,"props":3371,"children":3372},{"style":512},[3373],{"type":32,"value":1298},{"type":27,"tag":478,"props":3375,"children":3376},{"class":480,"line":584},[3377,3382,3386],{"type":27,"tag":478,"props":3378,"children":3379},{"style":512},[3380],{"type":32,"value":3381},"        figure = ",{"type":27,"tag":478,"props":3383,"children":3384},{"style":501},[3385],{"type":32,"value":1113},{"type":27,"tag":478,"props":3387,"children":3388},{"style":512},[3389],{"type":32,"value":3390},"._get_figure()\n",{"type":27,"tag":478,"props":3392,"children":3393},{"class":480,"line":593},[3394],{"type":27,"tag":478,"props":3395,"children":3396},{"style":3338},[3397],{"type":32,"value":3398},"        # Do something with figure\n",{"type":27,"tag":28,"props":3400,"children":3401},{},[3402,3404,3409,3411,3417,3419,3424,3426,3431,3433,3438,3440,3445,3447,3452,3454,3459,3461,3466,3468,3473,3475,3480],{"type":32,"value":3403},"We use the ",{"type":27,"tag":248,"props":3405,"children":3407},{"className":3406},[],[3408],{"type":32,"value":3211},{"type":32,"value":3410}," decorator to make the ",{"type":27,"tag":248,"props":3412,"children":3414},{"className":3413},[],[3415],{"type":32,"value":3416},"_get_figure",{"type":32,"value":3418}," method abstract, i.e. any subclass of ",{"type":27,"tag":248,"props":3420,"children":3422},{"className":3421},[],[3423],{"type":32,"value":3235},{"type":32,"value":3425}," needs to implement ",{"type":27,"tag":248,"props":3427,"children":3429},{"className":3428},[],[3430],{"type":32,"value":3416},{"type":32,"value":3432},". You'll notice that there is also another method in this example - the ",{"type":27,"tag":248,"props":3434,"children":3436},{"className":3435},[],[3437],{"type":32,"value":3071},{"type":32,"value":3439}," method. This is a regular (or ",{"type":27,"tag":96,"props":3441,"children":3442},{},[3443],{"type":32,"value":3444},"concrete",{"type":32,"value":3446},") method - a method that provides a concrete implementation. This method is designed to call the ",{"type":27,"tag":248,"props":3448,"children":3450},{"className":3449},[],[3451],{"type":32,"value":3416},{"type":32,"value":3453}," method to obtain a figure and them perform a set of operations that are ubiquitous to any possible subclass of ",{"type":27,"tag":248,"props":3455,"children":3457},{"className":3456},[],[3458],{"type":32,"value":3235},{"type":32,"value":3460},", i.e. showing and saving the plot. This way, we do not need to implement it in subclasses of ",{"type":27,"tag":248,"props":3462,"children":3464},{"className":3463},[],[3465],{"type":32,"value":3235},{"type":32,"value":3467},". On the other hand, ",{"type":27,"tag":248,"props":3469,"children":3471},{"className":3470},[],[3472],{"type":32,"value":3416},{"type":32,"value":3474}," is case-specific, e.g. heatmaps have different requirements than standard plots (e.g. scatter plots) in the ",{"type":27,"tag":248,"props":3476,"children":3478},{"className":3477},[],[3479],{"type":32,"value":3109},{"type":32,"value":3481}," library.",{"type":27,"tag":84,"props":3483,"children":3485},{"id":3484},"cicd",[3486],{"type":32,"value":3487},"CI/CD",{"type":27,"tag":28,"props":3489,"children":3490},{},[3491,3493,3504],{"type":32,"value":3492},"This project was the first time I went the extra mile to set up proper CI/CD",{"type":27,"tag":196,"props":3494,"children":3495},{},[3496],{"type":27,"tag":43,"props":3497,"children":3501},{"href":3498,"ariaDescribedBy":3499,"dataFootnoteRef":7,"id":3500},"#user-content-fn-3",[203],"user-content-fnref-3",[3502],{"type":32,"value":3503},"3",{"type":32,"value":3505},". CI/CD done right can have a tremendous impact on a project, including: faster release cycles (thanks to automated testing, formatting, and linting) and bug detection, increased reliability (less human error), and immediate feedback, among others.",{"type":27,"tag":28,"props":3507,"children":3508},{},[3509,3511,3516,3518,3522,3524,3531],{"type":32,"value":3510},"This project is hosted on GitHub and makes use of GitHub Actions - a CI/CD platform to automate build, test, and deployment pipelines defined in so-called ",{"type":27,"tag":96,"props":3512,"children":3513},{},[3514],{"type":32,"value":3515},"workflows",{"type":32,"value":3517},". For the ",{"type":27,"tag":96,"props":3519,"children":3520},{},[3521],{"type":32,"value":8},{"type":32,"value":3523}," package, I've defined ",{"type":27,"tag":43,"props":3525,"children":3528},{"href":3526,"rel":3527},"https://github.com/alxdrcirilo/apple-health-parser/tree/main/.github/workflows",[47],[3529],{"type":32,"value":3530},"four workflows",{"type":32,"value":282},{"type":27,"tag":177,"props":3533,"children":3534},{},[3535,3565,3593,3610],{"type":27,"tag":181,"props":3536,"children":3537},{},[3538,3540,3551,3553,3564],{"type":32,"value":3539},"Commit lint and semantic versioning (using ",{"type":27,"tag":43,"props":3541,"children":3544},{"href":3542,"rel":3543},"https://github.com/wagoid/commitlint-github-action",[47],[3545],{"type":27,"tag":248,"props":3546,"children":3548},{"className":3547},[],[3549],{"type":32,"value":3550},"commitlint",{"type":32,"value":3552}," and ",{"type":27,"tag":43,"props":3554,"children":3557},{"href":3555,"rel":3556},"https://github.com/python-semantic-release/python-semantic-release",[47],[3558],{"type":27,"tag":248,"props":3559,"children":3561},{"className":3560},[],[3562],{"type":32,"value":3563},"python-semantic-release",{"type":32,"value":310},{"type":27,"tag":181,"props":3566,"children":3567},{},[3568,3570,3576,3577,3583,3585,3592],{"type":32,"value":3569},"Unit test coverage (using ",{"type":27,"tag":248,"props":3571,"children":3573},{"className":3572},[],[3574],{"type":32,"value":3575},"pytest",{"type":32,"value":3552},{"type":27,"tag":248,"props":3578,"children":3580},{"className":3579},[],[3581],{"type":32,"value":3582},"pytest-cov",{"type":32,"value":3584},", with the coverage report uploaded to ",{"type":27,"tag":43,"props":3586,"children":3589},{"href":3587,"rel":3588},"https://coveralls.io/github/alxdrcirilo/apple-health-parser?branch=main",[47],[3590],{"type":32,"value":3591},"Coveralls",{"type":32,"value":310},{"type":27,"tag":181,"props":3594,"children":3595},{},[3596,3598,3609],{"type":32,"value":3597},"Deploy documentation to GitHub Pages (using ",{"type":27,"tag":43,"props":3599,"children":3602},{"href":3600,"rel":3601},"https://www.mkdocs.org/",[47],[3603],{"type":27,"tag":248,"props":3604,"children":3606},{"className":3605},[],[3607],{"type":32,"value":3608},"mkdocs",{"type":32,"value":310},{"type":27,"tag":181,"props":3611,"children":3612},{},[3613,3615,3621,3623,3634],{"type":32,"value":3614},"Publish to ",{"type":27,"tag":43,"props":3616,"children":3619},{"href":3617,"rel":3618},"https://pypi.org",[47],[3620],{"type":32,"value":39},{"type":32,"value":3622}," (using ",{"type":27,"tag":43,"props":3624,"children":3627},{"href":3625,"rel":3626},"https://github.com/JRubics/poetry-publish",[47],[3628],{"type":27,"tag":248,"props":3629,"children":3631},{"className":3630},[],[3632],{"type":32,"value":3633},"poetry-publish",{"type":32,"value":310},{"type":27,"tag":72,"props":3636,"children":3638},{"id":3637},"outro",[3639],{"type":32,"value":3640},"Outro",{"type":27,"tag":28,"props":3642,"children":3643},{},[3644],{"type":32,"value":3645},"If you're interested in reading more about interfaces, and abstract base classes in particular, I highly recommend the following reads:",{"type":27,"tag":177,"props":3647,"children":3648},{},[3649,3661],{"type":27,"tag":181,"props":3650,"children":3651},{},[3652,3659],{"type":27,"tag":43,"props":3653,"children":3656},{"href":3654,"rel":3655},"https://stackoverflow.com/a/53213772",[47],[3657],{"type":32,"value":3658},"\"Is it a good practice to put common methods to an abstract class in Python?\"",{"type":32,"value":3660}," - Stack Overflow",{"type":27,"tag":181,"props":3662,"children":3663},{},[3664,3671],{"type":27,"tag":43,"props":3665,"children":3668},{"href":3666,"rel":3667},"https://realpython.com/python-interface",[47],[3669],{"type":32,"value":3670},"Implementing an Interface in Python",{"type":32,"value":3672}," - RealPython",{"type":27,"tag":3674,"props":3675,"children":3678},"section",{"className":3676,"dataFootnotes":7},[3677],"footnotes",[3679,3686],{"type":27,"tag":72,"props":3680,"children":3683},{"className":3681,"id":203},[3682],"sr-only",[3684],{"type":32,"value":3685},"Footnotes",{"type":27,"tag":284,"props":3687,"children":3688},{},[3689,3718,3731],{"type":27,"tag":181,"props":3690,"children":3692},{"id":3691},"user-content-fn-1",[3693,3695,3700,3702,3707,3709],{"type":32,"value":3694},"From the ",{"type":27,"tag":248,"props":3696,"children":3698},{"className":3697},[],[3699],{"type":32,"value":418},{"type":32,"value":3701}," file you can generate from the ",{"type":27,"tag":248,"props":3703,"children":3705},{"className":3704},[],[3706],{"type":32,"value":425},{"type":32,"value":3708}," app on your iPhone ",{"type":27,"tag":43,"props":3710,"children":3715},{"href":3711,"ariaLabel":3712,"className":3713,"dataFootnoteBackref":7},"#user-content-fnref-1","Back to reference 1",[3714],"data-footnote-backref",[3716],{"type":32,"value":3717},"‚Ü©",{"type":27,"tag":181,"props":3719,"children":3721},{"id":3720},"user-content-fn-2",[3722,3724],{"type":32,"value":3723},"Comma-separated values ",{"type":27,"tag":43,"props":3725,"children":3729},{"href":3726,"ariaLabel":3727,"className":3728,"dataFootnoteBackref":7},"#user-content-fnref-2","Back to reference 2",[3714],[3730],{"type":32,"value":3717},{"type":27,"tag":181,"props":3732,"children":3734},{"id":3733},"user-content-fn-3",[3735,3737],{"type":32,"value":3736},"Continuous Integration/Continuous Deployment ",{"type":27,"tag":43,"props":3738,"children":3742},{"href":3739,"ariaLabel":3740,"className":3741,"dataFootnoteBackref":7},"#user-content-fnref-3","Back to reference 3",[3714],[3743],{"type":32,"value":3717},{"type":27,"tag":3745,"props":3746,"children":3747},"style",{},[3748],{"type":32,"value":3749},"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"title":3751,"searchDepth":529,"depth":548,"links":3752},"Table of Contents",[3753,3757,3771,3772],{"id":74,"depth":497,"text":77,"children":3754},[3755,3756],{"id":86,"depth":529,"text":89},{"id":126,"depth":529,"text":129},{"id":151,"depth":497,"text":3758,"children":3759},"Building the Apple Health Parser",[3760,3761,3770],{"id":161,"depth":529,"text":164},{"id":238,"depth":529,"text":241,"children":3762},[3763,3764,3767],{"id":398,"depth":539,"text":295},{"id":789,"depth":539,"text":319,"children":3765},[3766],{"id":2292,"depth":548,"text":2295},{"id":3071,"depth":539,"text":364,"children":3768},[3769],{"id":3140,"depth":548,"text":3146},{"id":3484,"depth":529,"text":3487},{"id":3637,"depth":497,"text":3640},{"id":203,"depth":497,"text":3685},"markdown","content:blog:2024:5.apple_health_parser.md","content","blog/2024/5.apple_health_parser.md","blog/2024/5.apple_health_parser","md",1722929342519]